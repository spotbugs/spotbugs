name: Release
on:
  push:
    branches:
      - master
    tags:
      - '**'

permissions: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.sha }}
  cancel-in-progress: true

env:
  eclipse-version: 4.24
  eclipse-date: 202206070700

jobs:
  build:
    permissions:
      contents: write # to push pages branch (peaceiris/actions-gh-pages)

    if: github.repository_owner == 'spotbugs'
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: Ensure tag is on master
        if: github.ref_type == 'tag'
        run: |
          TAG_COMMIT=$(git rev-parse ${{ github.ref }})
          if ! git branch --remotes --contains "${TAG_COMMIT}" | grep -q 'origin/master'; then
            echo "Tag does not point to a commit on master. Exiting."
            exit 1
          fi
        shell: bash
      - name: Set up JDK 21
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5
        with:
          java-version: '21'
          distribution: temurin
          cache: gradle
      - uses: gradle/actions/wrapper-validation@4d9f0ba0025fe599b4ebab900eb7f3a1d93ef4c2 # v5
      - name: Download Eclipse
        run: |
          curl --continue-at - --create-dirs --location 'https://www.eclipse.org/downloads/download.php?file=/eclipse/downloads/drops4/R-${{ env.eclipse-version }}-${{ env.eclipse-date }}/eclipse-SDK-${{ env.eclipse-version }}-linux-gtk-x86_64.tar.gz&mirror_id=1' --output eclipse-sdk/eclipse.tar.gz
          tar xzf eclipse-sdk/eclipse.tar.gz eclipse
          echo "eclipseRoot.dir=$(pwd)/eclipse" | tee eclipsePlugin/local.properties
      - name: Build on tag
        if: github.ref_type == 'tag'
        run: |
          # Disable gpg decryption of certificate for time being until we get new keys established
          # gpg --quiet --batch --yes --decrypt --passphrase="$GPG_SECRET_PASSPHRASE" --output spotbugs.jks .github/workflows/spotbugs.jks.gpg
          ./gradlew assemble publishToSonatype closeAndReleaseSonatypeStagingRepository createReleaseBody --no-daemon
        env:
          GPG_SECRET_PASSPHRASE: ${{ secrets.GPG_SECRET_PASSPHRASE }}
          ORG_GRADLE_PROJECT_ossrhUsername: ${{ secrets.OSSRH_USERNAME }}
          ORG_GRADLE_PROJECT_ossrhPassword: ${{ secrets.OSSRH_PASSWORD }}
          ORG_GRADLE_PROJECT_keystorepass: ${{ secrets.KEYSTORE_PASS }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
      - name: Build otherwise
        if: github.ref_type != 'tag'
        run: |
          # Disable gpg decryption of certificate on for time being until we get new keys established
          # gpg --quiet --batch --yes --decrypt --passphrase="$GPG_SECRET_PASSPHRASE" --output spotbugs.jks .github/workflows/spotbugs.jks.gpg
          ./gradlew assemble publishToSonatype createReleaseBody --no-daemon
        env:
          GPG_SECRET_PASSPHRASE: ${{ secrets.GPG_SECRET_PASSPHRASE }}
          ORG_GRADLE_PROJECT_ossrhUsername: ${{ secrets.OSSRH_USERNAME }}
          ORG_GRADLE_PROJECT_ossrhPassword: ${{ secrets.OSSRH_PASSWORD }}
          ORG_GRADLE_PROJECT_keystorepass: ${{ secrets.KEYSTORE_PASS }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
      - name: Deploy eclipse-latest
        uses: peaceiris/actions-gh-pages@4f9cc6602d3f66b9c108549d475ec49e8ef4d45e # v4
        with:
          external_repository: spotbugs/eclipse-latest
          personal_token: ${{ secrets.PERSONAL_TOKEN_FOR_PAGES }}
          publish_branch: gh-pages
          publish_dir: ./eclipsePlugin/build/site/eclipse-daily
      - name: Deploy eclipse-candidate
        uses: peaceiris/actions-gh-pages@4f9cc6602d3f66b9c108549d475ec49e8ef4d45e # v4
        if: startsWith(github.ref, 'refs/tags/')
        with:
          external_repository: spotbugs/eclipse-candidate
          personal_token: ${{ secrets.PERSONAL_TOKEN_FOR_PAGES }}
          publish_branch: gh-pages
          publish_dir: ./eclipsePlugin/build/site/eclipse-candidate
      - name: Deploy eclipse
        uses: peaceiris/actions-gh-pages@4f9cc6602d3f66b9c108549d475ec49e8ef4d45e # v4
        if: startsWith(github.ref, 'refs/tags/') && !contains(github.ref, '_RC') && !contains(github.ref, '_beta')
        with:
          external_repository: spotbugs/eclipse
          personal_token: ${{ secrets.PERSONAL_TOKEN_FOR_PAGES }}
          publish_branch: gh-pages
          publish_dir: ./eclipsePlugin/build/site/eclipse
      - name: Get the version
        if: startsWith(github.ref, 'refs/tags/')
        id: get_version
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      - name: Create draft Release
        # attach zip, tgz and eclipse plugin to the GitHub Release
        # https://github.com/github/hub#github-actions
        # https://github.com/actions/upload-release-asset/issues/28#issuecomment-617208601
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: github.ref_type == 'tag'
        shell: bash
        run: |
          set -x
          assets=("./eclipsePlugin/build/distributions/eclipsePlugin.zip")
          for asset in ./spotbugs/build/distributions/*; do
            assets+=("$asset")
          done
          gh release create ${{ github.ref_name }} "${assets[@]}" --notes-file build/release.md --title "${{ steps.get_version.outputs.VERSION }}" --draft
      - name: Publish draft Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: github.ref_type == 'tag'
        shell: bash
        run: |
          gh release edit ${{ github.ref_name }} --draft=false
