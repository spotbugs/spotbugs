name: Build
on: [push, pull_request]

permissions:
  contents: read # to fetch code (actions/checkout)

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.sha }}
  cancel-in-progress: true

env:
  eclipse-version: 4.24
  eclipse-date: 202206070700

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        java: [17.0.1+12, 17, 21, 24]
      max-parallel: 6
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    continue-on-error: true

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: gradle
      - uses: gradle/actions/wrapper-validation@ed408507eac070d1f99cc633dbcf757c94c7933a # v4
      - name: Cache Eclipse
        id: cache-eclipse
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: eclipse-sdk
          key: eclipse-sdk-${{ matrix.os }}-${{ env.eclipse-version }}-${{ env.eclipse-date }}
      - name: Download Eclipse on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          curl --continue-at - --create-dirs --location 'https://www.eclipse.org/downloads/download.php?file=/eclipse/downloads/drops4/R-${{ env.eclipse-version }}-${{ env.eclipse-date }}/eclipse-SDK-${{ env.eclipse-version }}-linux-gtk-x86_64.tar.gz&mirror_id=1' --output eclipse-sdk/eclipse.tar.gz
          tar xzf eclipse-sdk/eclipse.tar.gz eclipse
          echo "eclipseRoot.dir=$(pwd)/eclipse" | tee eclipsePlugin/local.properties
      - name: Download Eclipse on Windows
        if: matrix.os == 'windows-latest'
        run: |
          Remove-item alias:curl
          curl --continue-at - --create-dirs --location 'https://www.eclipse.org/downloads/download.php?file=/eclipse/downloads/drops4/R-${{ env.eclipse-version }}-${{ env.eclipse-date }}/eclipse-SDK-${{ env.eclipse-version }}-win32-x86_64.zip&mirror_id=1' -o eclipse-sdk/eclipse.zip
          Expand-Archive "eclipse-sdk/eclipse.zip" -DestinationPath "." -Force
          $escapedPwd = $pwd.Path -replace '\\', '\\'
          [System.IO.File]::WriteAllLines("$pwd\\eclipsePlugin\\local.properties", "eclipseRoot.dir=$escapedPwd\\eclipse")
        shell: powershell
      - name: Download Eclipse on Mac
        if: matrix.os == 'macos-latest'
        run: |
          curl --continue-at - --create-dirs --location 'https://www.eclipse.org/downloads/download.php?file=/eclipse/downloads/drops4/R-${{ env.eclipse-version }}-${{ env.eclipse-date }}/eclipse-SDK-${{ env.eclipse-version }}-macosx-cocoa-aarch64.dmg&mirror_id=1' --output eclipse-sdk/eclipse.dmg
          hdiutil attach eclipse-sdk/eclipse.dmg
          # Mac uses BSD cp which doesn't have --recursive therefore -R is required
          cp -r /Volumes/Eclipse/Eclipse.app /Applications/
          hdiutil detach /Volumes/Eclipse
          echo "eclipseRoot.dir=/Applications/Eclipse.app" | tee eclipsePlugin/local.properties
      # Disable gpg decryption of certificate for time being until we get new keys established
      #- name: Pre-build setup
      #  if: github.repository_owner == 'spotbugs'
      #  run: gpg --quiet --batch --yes --decrypt --passphrase="$GPG_SECRET_PASSPHRASE" --output spotbugs.jks .github/workflows/spotbugs.jks.gpg;
      #  env:
      #    GPG_SECRET_PASSPHRASE: ${{ secrets.GPG_SECRET_PASSPHRASE }}
      - name: Build with Sonar JDK ${{ matrix.java }}, ${{ matrix.os }}
        # https://community.sonarsource.com/t/sonarcloud-now-not-updating-github-pr-and-checks/6595/17
        if: matrix.java == '21'
        run: ./gradlew spotlessCheck build smoketest ${SONAR_LOGIN:+sonar} --no-daemon "-Dsonar.token=$SONAR_LOGIN" --scan
        env:
          SONAR_LOGIN: ${{ secrets.SONAR_LOGIN }}
          ORG_GRADLE_PROJECT_keystorepass: ${{ secrets.KEYSTORE_PASS }}
      - name: Build JDK ${{ matrix.java }}, ${{ matrix.os }}
        # https://community.sonarsource.com/t/sonarcloud-now-not-updating-github-pr-and-checks/6595/17
        if: matrix.java != '21'
        run: ./gradlew spotlessCheck build smoketest --no-daemon --scan
        env:
          SONAR_LOGIN: ${{ secrets.SONAR_LOGIN }}
          ORG_GRADLE_PROJECT_keystorepass: ${{ secrets.KEYSTORE_PASS }}
