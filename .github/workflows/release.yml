name: release
on:
  push:
    branches:
      - master
    tags:
      - '**'

permissions: {}

env:
  eclipse-version: 4.24
  eclipse-date: 202206070700

jobs:
  build:
    permissions:
      contents: write # to push pages branch (peaceiris/actions-gh-pages)

    if: github.repository_owner == 'spotbugs'
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get previous tag for the change log
        id: previousTag
        run: |
          $name = git for-each-ref --merged=${{ github.ref_name }} --sort=creatordate --format='%(refname:short)' refs/tags | Select-Object -Last 2 | Select-Object -First 1
          echo "previousTag: $name"
          echo "previousTag=$name" >> $GITHUB_ENV

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: temurin
          cache: gradle
      - uses: gradle/actions/wrapper-validation@v4
      - name: Download Eclipse
        run: |
          Remove-item alias:curl
          curl --continue-at - --create-dirs -L 'https://www.eclipse.org/downloads/download.php?file=/eclipse/downloads/drops4/R-${{ env.eclipse-version }}-${{ env.eclipse-date }}/eclipse-SDK-${{ env.eclipse-version }}-win32-x86_64.zip&mirror_id=1' --output eclipse-sdk/eclipse.zip
          Expand-Archive "eclipse-sdk/eclipse.zip" -DestinationPath "." -Force
          $escapedPwd = $pwd.Path -replace '\\', '\\'
          [System.IO.File]::WriteAllLines("$pwd\\eclipsePlugin\\local.properties", "eclipseRoot.dir=$escapedPwd\\eclipse")
        shell: powershell
      - name: Build on tag
        if: (github.ref_type == 'tag') && (github.event.base_ref == 'refs/heads/master')
        run: |
          gpg --quiet --batch --yes --decrypt --passphrase="$GPG_SECRET_PASSPHRASE" --output spotbugs.jks .github/workflows/spotbugs.jks.gpg
          echo "sonatypeUsername=${SONATYPE_USERNAME}" >> gradle.properties
          echo "sonatypePassword=${SONATYPE_PASSWORD}" >> gradle.properties
          echo "keystorepass=${KEYSTORE_PASS}" >> gradle.properties
          ./gradlew assemble publishToSonatype closeAndReleaseSonatypeStagingRepository createReleaseBody --no-daemon
        env:
          GPG_SECRET_PASSPHRASE: ${{ secrets.GPG_SECRET_PASSPHRASE }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}
      - name: Build otherwise
        if: ${{ !((github.ref_type == 'tag') && (github.event.base_ref == 'refs/heads/master')) }}
        run: |
          gpg --quiet --batch --yes --decrypt --passphrase="$GPG_SECRET_PASSPHRASE" --output spotbugs.jks .github/workflows/spotbugs.jks.gpg
          echo "sonatypeUsername=${SONATYPE_USERNAME}" >> gradle.properties
          echo "sonatypePassword=${SONATYPE_PASSWORD}" >> gradle.properties
          echo "keystorepass=${KEYSTORE_PASS}" >> gradle.properties
          ./gradlew assemble publishToSonatype createReleaseBody --no-daemon
        env:
          GPG_SECRET_PASSPHRASE: ${{ secrets.GPG_SECRET_PASSPHRASE }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}
      - name: Deploy eclipse-latest
        uses: peaceiris/actions-gh-pages@v4
        with:
          external_repository: spotbugs/eclipse-latest
          personal_token: ${{ secrets.PERSONAL_TOKEN_FOR_PAGES }}
          publish_branch: gh-pages
          publish_dir: ./eclipsePlugin/build/site/eclipse-daily
      - name: Deploy eclipse-candidate
        uses: peaceiris/actions-gh-pages@v4
        if: startsWith(github.ref, 'refs/tags/')
        with:
          external_repository: spotbugs/eclipse-candidate
          personal_token: ${{ secrets.PERSONAL_TOKEN_FOR_PAGES }}
          publish_branch: gh-pages
          publish_dir: ./eclipsePlugin/build/site/eclipse-candidate
      - name: Deploy eclipse
        uses: peaceiris/actions-gh-pages@v4
        if: startsWith(github.ref, 'refs/tags/') && !contains(github.ref, '_RC') && !contains(github.ref, '_beta')
        with:
          external_repository: spotbugs/eclipse
          personal_token: ${{ secrets.PERSONAL_TOKEN_FOR_PAGES }}
          publish_branch: gh-pages
          publish_dir: ./eclipsePlugin/build/site/eclipse
      - name: Get the version
        if: startsWith(github.ref, 'refs/tags/')
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      - name: Create draft Release
        # attach zip, tgz and eclipse plugin to the GitHub Release
        # https://github.com/github/hub#github-actions
        # https://github.com/actions/upload-release-asset/issues/28#issuecomment-617208601
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: (github.ref_type == 'tag')
        run: |
          set -x
          curl -fsSL https://github.com/github/hub/raw/master/script/get | bash -s 2.14.1
          assets=("-a" "./eclipsePlugin/build/distributions/eclipsePlugin.zip")
          for asset in ./spotbugs/build/distributions/*; do
            assets+=("-a" "$asset")
          done
          bin/hub release create "${assets[@]}" -F build/release.md "${{ steps.get_version.outputs.VERSION }}" --draft
      - name: Publish draft Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: (github.ref_type == 'tag') && (github.event.base_ref == 'refs/heads/master')
        run: |
          bin/hub release edit ${{ github.ref_name }} --draft=false
