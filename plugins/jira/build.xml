<project name="jira" default="test">

    <property file="local.properties"/>

    <!--
        The build.properties contains global properties, which are common for all developers.
        Note:
        Ant properties cannot be overriden, so if local.properties and build.properties
        contains same keys, ant will use those from local.properties
    -->
    <property file="build.properties"/>

    <property name="src.dir" value="src/java"/>
    <property name="gensrc.dir" value="src/generated"/>
    <property name="classes.dir" value="build/classes-ant"/>
    <property name="lib.dir" value="lib"/>
    <property name="findbugs.home" value="${findbugsBase.dir}/findbugs"/>

    <path id="client.classpath">
        <fileset dir="${lib.dir}" includes="**/*.jar"/>

        <pathelement location="${findbugs.home}/build/classes"/>

        <fileset dir="${findbugs.home}/lib" includes="*.jar"/>

    </path>

    <path id="test.classpath">
        <fileset dir="test-lib" includes="**/*.jar"/>
    </path>

    <target name="validate">
        <xmlvalidate lenient="false" failonerror="yes">
            <attribute name="http://apache.org/xml/features/validation/schema" value="true"/>
            <attribute name="http://xml.org/sax/features/namespaces" value="true"/>
            <fileset dir="etc" includes="*.xml"/>
        </xmlvalidate>
    </target>

    <target name="clean">
        <delete dir="build"/>
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="build/classes"/>
        <mkdir dir="build/testClasses"/>
    </target>
    <target name="compile">
        <echo>Base ${findbugsBase.dir}</echo>
        <mkdir dir="${classes.dir}"/>
        <javac destdir="${classes.dir}"
               source="1.5"
               target="1.5"
               deprecation="off"
		includeantruntime="false"
               debug="on">
            <src path="${src.dir}"/>
            <src path="${gensrc.dir}"/>
            <classpath refid="client.classpath"/>
        </javac>
    </target>

    <target name="plugin-jar" depends="compile">
        <jar destfile="build/jira.jar">
            <fileset dir="etc">
                <include name="findbugs.xml"/>
                <include name="messages.xml"/>
            </fileset>
            <fileset dir="${classes.dir}">
                <include name="**/*.class"/>
            </fileset>

            <zipfileset src="lib/axis.jar"/>
            <zipfileset src="lib/commons-discovery-0.2.jar"/>
            <zipfileset src="lib/commons-logging-1.0.4.jar"/>
            <zipfileset src="lib/jaxrpc.jar"/>
            <zipfileset src="lib/saaj.jar"/>
            <zipfileset src="lib/wsdl4j-1.5.1.jar"/>
        </jar>
    </target>

    <target name="install" depends="plugin-jar">
        <copy todir="${findbugs.home}/plugin" flatten="true">
            <fileset dir="build" includes="jira.jar"/>
        </copy>
    </target>

    <target name="compile-tests" depends="compile">
        <mkdir dir="build/classes-tests-ant"/>

        <javac srcdir="src/junit" destdir="build/classes-tests-ant" source="1.8" target="1.8" debug="on" includeantruntime="false">
            <classpath>
                <path refid="client.classpath"/>
                <path location="${classes.dir}"/>
                <path location="test-lib/mockito-all-1.8.2.jar"/>
            </classpath>
        </javac>
    </target>

    <target name="test" depends="compile-tests">
        <mkdir dir="build"/>
        <mkdir dir="build/tests"/>
        <junit fork="yes" printsummary="true">
            <jvmarg value="-ea"/>
            <formatter type="xml"/>
            <!-- Hudson reads generated xml -->

            <classpath refid="client.classpath"/>
            <classpath path="${classes.dir}"/>
            <classpath path="build/classes-tests-ant"/>
            <classpath path="test-lib/mockito-all-1.8.2.jar"/>

            <batchtest todir="build/tests">
                <fileset dir="src/junit">
                    <include name="**/*Test.java"/>
                    <include name="**/*Tests.java"/>
                    <exclude name="**/Abstract*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

</project>


