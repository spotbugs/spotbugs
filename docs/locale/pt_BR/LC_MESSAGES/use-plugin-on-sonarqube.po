# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2021, spotbugs community
# This file is distributed under the same license as the spotbugs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: spotbugs 4.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-22 15:35-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../use-plugin-on-sonarqube.rst:2
msgid "Use SpotBugs Plugin on SonarQube"
msgstr "Uso do SpotBugs Plugin no SonarQube"

#: ../../use-plugin-on-sonarqube.rst:4
msgid ""
"`The SpotBugs SonarQube Plugin <https://github.com/spotbugs/sonar-"
"findbugs>`_ uses major SpotBugs plugins such as `fb-contrib <http://fb-"
"contrib.sourceforge.net/>`_ and `Find Security Bugs "
"<http://h3xstream.github.io/find-sec-bugs/>`_. However, if you want to "
"use another SpotBugs plugin, you need to build your own SonarQube plugin."
" For detailed requirements on SonarQube plugins, see `the SonarQube "
"official guidelines`_."
msgstr ""
"O `SpotBugs SonarQube Plugin  <https://github.com/spotbugs/sonar-"
"findbugs>`_ usa os principais plugins do SpotBugs, como `fb-contrib <http://fb-"
"contrib.sourceforge.net/>`_ and `Find Security Bugs "
"<http://h3xstream.github.io/find-sec-bugs/>`_. No entanto, se quiser usar outro "
"plugin, você precisa criar seu próprio plugin SonarQube. Para obter os requisitos "
"detalhados dos plugins do SonarQube, consulte as `diretrizes oficiais do SonarQube`_."

#: ../../use-plugin-on-sonarqube.rst:7
msgid "Create Maven Project"
msgstr "Criação do projeto Maven"

#: ../../use-plugin-on-sonarqube.rst:9
msgid ""
"Follow the interaction in the `SonarQube official guidelines "
"<https://docs.sonarqube.org/latest/extend/developing-plugin/>`_. It is "
"recommended to use sub-modules, to manage both the SpotBugs plugin and "
"the SonarQube plugin in one project. You can refer to `this module "
"<https://github.com/KengoTODA/guava-helper-for-java-8/tree/master"
"/sonarqube-plugin>`_ as an example."
msgstr ""
"Siga as `diretrizes oficiais do SonarQube "
"<https://docs.sonarqube.org/latest/extend/developing-plugin/>`_. "
"Recomenda-se o uso de submódulos para gerenciar o SpotBugs plugin e o "
"SonarQube plugin em um projeto. Consulte esse `módulo "
"<https://github.com/KengoTODA/guava-helper-for-java-8/tree/master"
"/sonarqube-plugin>`_ como exemplo."

"
#: ../../use-plugin-on-sonarqube.rst:12
msgid ""
"You also need to configure the ``sonar-packaging-maven-plugin``, to make "
"your plugin depend on `the SpotBugs SonarQube Plugin "
"<https://github.com/spotbugs/sonar-findbugs>`_. For instance, if you're "
"using SonarQube 6.7 LTS, your plugin requires SpotBugs SonarQube Plugin "
"version 3.7, so your configuration should be like below:"
msgstr ""
"Você também precisa configurar o ``sonar-packaging-maven-plugin`` para que seu "
"plugin dependa do `SpotBugs SonarQube Plugin "
"<https://github.com/spotbugs/sonar-findbugs>`_. Por exemplo, se você estiver usando "
"o SonarQube 6.7 LTS, seu plugin requer o SpotBugs SonarQube Plugin na versão 3.7. "
"Sua configuração deve ser:"

#: ../../use-plugin-on-sonarqube.rst:23
msgid "Generate rules.xml"
msgstr "Geração do arquivo rules.xml"

#: ../../use-plugin-on-sonarqube.rst:25
msgid ""
"SonarQube doesn't understand the Bug Pattern metadata provided for "
"SpotBugs, so we need to convert ``findbugs.xml`` and ``messages.xml`` to "
"the SonarQube format named ``rules.xml``."
msgstr ""
"o SonarQube não entende os metadados de Bug Pattern fornecidos pelo "
"SpotBugs. Dessa forma, é necessário converter ``findbugs.xml`` e ``messages.xml`` "
"para o formato do sonarQube nomeado como ``rules.xml``."

#: ../../use-plugin-on-sonarqube.rst:27
msgid ""
"If your SpotBugs plugin isn't complex, you can simply introduce `the "
"SonarQube rule xml generator Maven Plugin <https://github.com/KengoTODA"
"/sonarqube-rule-xml-generator>`_ to generate ``rules.xml``. Follow `the "
"interaction described in its README <https://github.com/KengoTODA"
"/sonarqube-rule-xml-generator#how-to-use>`_."
msgstr ""
"Se seu SpotBugs plugin não é complexo, você pode utilizar o `SonarQube rule "
"xml generator Maven Plugin <https://github.com/KengoTODA/sonarqube-rule-xml-generator>`_ "
"para gerar o arquivo ``rules.xml``. Siga as instruções descritas no `README "
"<https://github.com/KengoTODA"
"/sonarqube-rule-xml-generator#how-to-use>`_."

#: ../../use-plugin-on-sonarqube.rst:30
msgid "Update RulesDefinition.java"
msgstr "Atualização da classe RulesDefinition.java"

#: ../../use-plugin-on-sonarqube.rst:32
msgid ""
"Your ``SonarQubeRulesDefinition.java`` should load the generated "
"``rules.xml`` to the FindBugs repository."
msgstr ""
"Seu ``SonarQubeRulesDefinition.java`` deve carregar o arquivo "
"``rules.xml`` para o repositório do FindBugs."

#: ../../use-plugin-on-sonarqube.rst:34
msgid ""
"When you create a ``NewRepository`` instance, use "
"``FindbugsRulesDefinition.REPOSITORY_KEY`` as the repository key, and do "
"_not_ rename it by calling ``NewRepository#setName(String)``. It is "
"necessary to fulfill the requirement from `SonarQube API "
"<https://github.com/SonarSource/sonarqube/blob/6.7.4/sonar-plugin-"
"api/src/main/java/org/sonar/api/server/rule/RulesDefinition.java#L393-L395>`_."
" Here is an example:"
msgstr ""
"Ao criar uma nova instância ``NewRepository``, use "
"``FindbugsRulesDefinition.REPOSITORY_KEY`` como chave do repositório, e "
"não a renomeia com o nome ``NewRepository#setName(String)``. Isso é "
"necessário para satisfazer o requisito da `SonarQube API "
"<https://github.com/SonarSource/sonarqube/blob/6.7.4/sonar-plugin-"
"api/src/main/java/org/sonar/api/server/rule/RulesDefinition.java#L393-L395>`_. "
"Por exemplo:"

#: ../../use-plugin-on-sonarqube.rst:53
msgid "Update Plugin.java"
msgstr "Atualização da classe Plugin.java"

#: ../../use-plugin-on-sonarqube.rst:55
msgid ""
"``Plugin.java`` should be a simple implementation that just loads your "
"``RulesDefinition`` class. Here is an example:"
msgstr ""
"A classe ``Plugin.java`` deve ser uma implementação simples que apenas carrega a classe"
"``RulesDefinition``. Por exemplo:"
#: ../../use-plugin-on-sonarqube.rst:65
msgid "Deploy onto SonarQube"
msgstr "Deploy no SonarQube"

#: ../../use-plugin-on-sonarqube.rst:67
msgid ""
"``mvn package`` will generate a ``.jar`` file that works as a SonarQube "
"plugin. Follow `the SonarQube official guidelines`_ to deploy it onto "
"SonarQube."
msgstr ""
"O comando ``mvn package`` gera um arquivo ``.jar`` que funciona como um SonarQube "
"plugin. Siga as `diretrizes oficiais do SonarQube`_ para implantação no SonarQube."
#: ../../use-plugin-on-sonarqube.rst:69
msgid ""
"Note that you need to enable new rules manually in your SonarQube "
"profile, or newly added rules will not be used at analysis."
msgstr ""
"Observe que você precisa habilitar as regras manualmente no seu perfil "
"do SonarQube ou as novas regras adicionadas não serão utilizadas na análise."
