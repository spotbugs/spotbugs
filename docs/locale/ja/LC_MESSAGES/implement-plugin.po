# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2017, spotbugs community
# This file is distributed under the same license as the spotbugs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: spotbugs 3.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-06-28 19:04+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 1.3\n"

#: ../../implement-plugin.rst:2
msgid "Implement SpotBugs plugin"
msgstr ""

#: ../../implement-plugin.rst:5
msgid "Create Maven project"
msgstr ""

#: ../../implement-plugin.rst:7
msgid ""
"Use `spotbugs-archetype <https://github.com/spotbugs/spotbugs-"
"archetype>`_ to create Maven project. Then Maven archetype plugin will "
"ask you to decide plugin's groupId, artifactId, package and initial "
"version."
msgstr ""

#: ../../implement-plugin.rst:18
msgid "Write java codes to represent bug to find"
msgstr ""

#: ../../implement-plugin.rst:20
msgid ""
"In generated project, you can find a file named as `BadCase.java "
"<https://github.com/spotbugs/spotbugs-archetype/blob/spotbugs-"
"archetype-0.1.0/src/main/resources/archetype-"
"resources/src/test/java/BadCase.java>`_. Update this file to represent "
"the target bug to find."
msgstr ""

#: ../../implement-plugin.rst:23 ../../implement-plugin.rst:45
msgid ""
"If you have multiple patterns to represent, add more classes into "
"``src/test/java`` directory."
msgstr ""

#: ../../implement-plugin.rst:27
msgid "Write test case to ensure your detector can find bug"
msgstr ""

#: ../../implement-plugin.rst:29
msgid ""
"In generated project, you can find another file named as "
"`MyDetectorTest.java <https://github.com/spotbugs/spotbugs-archetype/blob"
"/spotbugs-archetype-0.1.0/src/main/resources/archetype-"
"resources/src/test/java/MyDetectorTest.java>`_. The "
"``spotbugs.performAnalysis(Path)`` in this test runs SpotBugs with your "
"plugin, and return all found bugs (here 1st argument of this method is a "
"path of class file compiled from ``BadCase.java``)."
msgstr ""

#: ../../implement-plugin.rst:32
msgid ""
"You can use `BugInstanceMatcher "
"<https://github.com/spotbugs/spotbugs/blob/master/test-"
"harness/src/main/java/edu/umd/cs/findbugs/test/matcher/BugInstanceMatcher.java>`_"
" to verify that your plugin can find bug as expected."
msgstr ""

#: ../../implement-plugin.rst:34
msgid ""
"Currently this test should fail, because we've not updated detector "
"itself yet."
msgstr ""

#: ../../implement-plugin.rst:38
msgid "Write java codes to avoid false-positive"
msgstr ""

#: ../../implement-plugin.rst:40
msgid ""
"To avoid false-positive, it is good to ensure that in which case detector"
" should NOT find bug."
msgstr ""

#: ../../implement-plugin.rst:42
msgid ""
"Update `GoodCase.java <https://github.com/spotbugs/spotbugs-"
"archetype/blob/spotbugs-archetype-0.1.0/src/main/resources/archetype-"
"resources/src/test/java/GoodCase.java>`_ in your project, and represent "
"such cases. After that, add a test method into ``MyDetectorTest.java`` "
"which verify that no bug found from this ``GoodCase`` class."
msgstr ""

#: ../../implement-plugin.rst:49
msgid "Update detector to pass all unit tests"
msgstr ""

#: ../../implement-plugin.rst:51
msgid "Now you have tests to ensure that your detector can work as expected."
msgstr ""

#: ../../implement-plugin.rst:55 ../../implement-plugin.rst:76
msgid "TBU"
msgstr ""

#: ../../implement-plugin.rst:59
msgid "Which super class you should choose"
msgstr ""

#: ../../implement-plugin.rst:62
msgid ""
"`AnnotationDetector "
"<https://javadoc.io/page/com.github.spotbugs/spotbugs/latest/edu/umd/cs/findbugs/bcel/AnnotationDetector.html>`_"
msgstr ""

#: ../../implement-plugin.rst:62
msgid ""
"Base detector which analyzes annotations on classes, fields, methods, and"
" method parameters."
msgstr ""

#: ../../implement-plugin.rst:65
msgid ""
"`BytecodeScanningDetector "
"<https://javadoc.io/page/com.github.spotbugs/spotbugs/latest/edu/umd/cs/findbugs/BytecodeScanningDetector.html>`_"
msgstr ""

#: ../../implement-plugin.rst:65
msgid "Base detector which analyzes java bytecode in class files."
msgstr ""

#: ../../implement-plugin.rst:69
msgid ""
"`OpcodeStackDetector "
"<https://javadoc.io/page/com.github.spotbugs/spotbugs/latest/edu/umd/cs/findbugs/bcel/OpcodeStackDetector.html>`_"
msgstr ""

#: ../../implement-plugin.rst:68
msgid ""
"Sub class of ``BytecodeScanningDetector``, which can scan the bytecode of"
" a method and use an `operand stack "
"<https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-2.html#jvms-2.6.2>`_."
msgstr ""

#: ../../implement-plugin.rst:72
msgid "Update findbugs.xml and messages.xml"
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid ""
#~ "In generated project, you can find "
#~ "another file named as `MyDetectorTest.java "
#~ "<https://github.com/spotbugs/spotbugs-archetype/blob"
#~ "/spotbugs-archetype-0.1.0/src/main/resources/archetype-"
#~ "resources/src/test/java/MyDetectorTest.java>`_. The "
#~ "``spotbugs.performAnalysis(Path)`` in this test "
#~ "runs SpotBugs with your plugin, and "
#~ "return all found bugs (here 1st "
#~ "argument is a path of class file"
#~ " compiled from ``BadCase.java``)."
#~ msgstr ""

