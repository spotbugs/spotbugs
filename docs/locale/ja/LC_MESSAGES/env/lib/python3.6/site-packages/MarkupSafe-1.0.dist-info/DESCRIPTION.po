# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2017, spotbugs community
# This file is distributed under the same license as the spotbugs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: spotbugs 3.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-08-08 08:37+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 1.3\n"

#: ../../env/lib/python3.6/site-packages/MarkupSafe-1.0.dist-info/DESCRIPTION.rst:2
msgid "MarkupSafe"
msgstr ""

#: ../../env/lib/python3.6/site-packages/MarkupSafe-1.0.dist-info/DESCRIPTION.rst:4
msgid "Implements a unicode subclass that supports HTML strings:"
msgstr ""

#: ../../env/lib/python3.6/site-packages/MarkupSafe-1.0.dist-info/DESCRIPTION.rst:15
msgid ""
"If you want to make an object unicode that is not yet unicode but don't "
"want to lose the taint information, you can use the ``soft_unicode`` "
"function.  (On Python 3 you can also use ``soft_str`` which is a "
"different name for the same function)."
msgstr ""

#: ../../env/lib/python3.6/site-packages/MarkupSafe-1.0.dist-info/DESCRIPTION.rst:29
msgid "HTML Representations"
msgstr ""

#: ../../env/lib/python3.6/site-packages/MarkupSafe-1.0.dist-info/DESCRIPTION.rst:31
msgid ""
"Objects can customize their HTML markup equivalent by overriding the "
"``__html__`` function:"
msgstr ""

#: ../../env/lib/python3.6/site-packages/MarkupSafe-1.0.dist-info/DESCRIPTION.rst:46
msgid "Silent Escapes"
msgstr ""

#: ../../env/lib/python3.6/site-packages/MarkupSafe-1.0.dist-info/DESCRIPTION.rst:48
msgid ""
"Since MarkupSafe 0.10 there is now also a separate escape function called"
" ``escape_silent`` that returns an empty string for ``None`` for "
"consistency with other systems that return empty strings for ``None`` "
"when escaping (for instance Pylons' webhelpers)."
msgstr ""

#: ../../env/lib/python3.6/site-packages/MarkupSafe-1.0.dist-info/DESCRIPTION.rst:53
msgid ""
"If you also want to use this for the escape method of the Markup object, "
"you can create your own subclass that does that:"
msgstr ""

#: ../../env/lib/python3.6/site-packages/MarkupSafe-1.0.dist-info/DESCRIPTION.rst:68
msgid "New-Style String Formatting"
msgstr ""

#: ../../env/lib/python3.6/site-packages/MarkupSafe-1.0.dist-info/DESCRIPTION.rst:70
msgid ""
"Starting with MarkupSafe 0.21 new style string formats from Python 2.6 "
"and 3.x are now fully supported.  Previously the escape behavior of those"
" functions was spotty at best.  The new implementations operates under "
"the following algorithm:"
msgstr ""

#: ../../env/lib/python3.6/site-packages/MarkupSafe-1.0.dist-info/DESCRIPTION.rst:75
msgid ""
"if an object has an ``__html_format__`` method it is called as "
"replacement for ``__format__`` with the format specifier.  It either has "
"to return a string or markup object."
msgstr ""

#: ../../env/lib/python3.6/site-packages/MarkupSafe-1.0.dist-info/DESCRIPTION.rst:78
msgid "if an object has an ``__html__`` method it is called."
msgstr ""

#: ../../env/lib/python3.6/site-packages/MarkupSafe-1.0.dist-info/DESCRIPTION.rst:79
msgid ""
"otherwise the default format system of Python kicks in and the result is "
"HTML escaped."
msgstr ""

#: ../../env/lib/python3.6/site-packages/MarkupSafe-1.0.dist-info/DESCRIPTION.rst:82
msgid "Here is how you can implement your own formatting:"
msgstr ""

#: ../../env/lib/python3.6/site-packages/MarkupSafe-1.0.dist-info/DESCRIPTION.rst:105
msgid "And to format that user:"
msgstr ""

#: ../../env/lib/python3.6/site-packages/MarkupSafe-1.0.dist-info/DESCRIPTION.rst:113
msgid "Markupsafe supports Python 2.6, 2.7 and Python 3.3 and higher."
msgstr ""

