# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2019, spotbugs community
# This file is distributed under the same license as the spotbugs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: spotbugs 3.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-12-02 07:55+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../filter.rst:2
msgid "Filter file"
msgstr "フィルタファイル"

#: ../../filter.rst:4
msgid ""
"Filter files may be used to include or exclude bug reports for particular"
" classes and methods. This chapter explains how to use filter files."
msgstr "フィルタファイルを使用して、特定のクラスやメソッドのバグレポートに含めたり除外したりできます。この章では、フィルタファイルの使用方法について説明します。"

#: ../../filter.rst:7
msgid "Introduction to Filter Files"
msgstr "フィルタファイルの概要"

#: ../../filter.rst:9
msgid ""
"Conceptually, a filter matches bug instances against a set of criteria. "
"By defining a filter, you can select bug instances for special treatment;"
" for example, to exclude or include them in a report."
msgstr "概念的には、フィルタはバグインスタンスを基準のセットと照合します。フィルタを定義することで、特別扱いのバグインスタンスを選択できます。たとえば、レポートに含めたり除外したりできます。"

#: ../../filter.rst:12
msgid ""
"A filter file is an XML document with a top-level ``FindBugsFilter`` "
"element which has some number of Match elements as children. Each Match "
"element represents a predicate which is applied to generated bug "
"instances. Usually, a filter will be used to exclude bug instances. For "
"example::"
msgstr ""
"フィルタファイルは、最上位の ``FindBugsFilter`` 要素を持つXML文書で、いくつかの ``Match`` "
"要素が子要素として含まれています。それぞれの ``Match`` "
"要素は、生成されたバグインスタンスに適用される述語を表します。通常、バグインスタンスを除外するためにフィルタが使用されます。たとえば::"

#: ../../filter.rst:18
msgid ""
"However, a filter could also be used to select bug instances to "
"specifically report::"
msgstr "また一方で、具体的に報告するバグインスタンスを選択するためにフィルタを使用することもできます。"

#: ../../filter.rst:22
msgid ""
"``Match`` elements contain children, which are conjuncts of the "
"predicate. In other words, each of the children must be ``true`` for the "
"predicate to be ``true``."
msgstr ""
"``Match`` 要素には、述語を結合した子要素が含まれます。言い換えれば、述語が ``真`` であるためには、それぞれの子要素も ``真`` "
"でなければなりません。"

#: ../../filter.rst:26
msgid "Types of Match clauses"
msgstr "マッチング条件の種類"

#: ../../filter.rst:29
msgid "<Bug>"
msgstr ""

#: ../../filter.rst:31
msgid ""
"This element specifies a particular bug ``pattern`` or ``patterns`` to "
"match. The ``pattern`` attribute is a comma-separated list of bug pattern"
" types. You can find the bug pattern types for particular warnings by "
"looking at the output produced by the **-xml** output option (the type "
"attribute of BugInstance elements), or from the :doc:`bugDescriptions`."
msgstr ""
"この要素は、特定のバグパターンまたは一致するパターンを指定します。``pattern`` "
"属性は、コンマ区切りのバグパターンタイプのリストです。特定の警告のバグパターンタイプは **-xml** 出力オプション (BugInstance"
" 要素のtype属性）によって生成された出力を調べることで見つけられます。または、:doc:`bugDescriptions` "
"を参照してください。"

#: ../../filter.rst:34
msgid ""
"For more coarse-grained matching, use ``code`` attribute. It takes a "
"comma-separated list of bug abbreviations. For most-coarse grained "
"matching use ``category`` attribute, that takes a comma separated list of"
" bug category names: ``CORRECTNESS``, ``MT_CORRECTNESS``, "
"``BAD_PRACTICICE``, ``PERFORMANCE``, ``STYLE``."
msgstr ""
"もっと粒度の粗い照合をしたいときは、``code`` "
"属性を使用します。コンマ区切りのバグ略語のリストを指定します。粒度の粗い照合では、``category`` "
"属性を使用してコンマ区切りのバグカテゴリのリストを指定します。バグカテゴリ名は、``CORRECTNESS``、``MT_CORRECTNESS``、``BAD_PRACTICICE``、``PERFORMANCE``、``STYLE``"
" です。"

#: ../../filter.rst:36
msgid ""
"If more than one of the attributes mentioned above are specified on the "
"same <Bug> element, all bug patterns that match either one of specified "
"pattern names, or abbreviations, or categories will be matched."
msgstr ""
"同じ <Bug> "
"要素に上記の属性が複数指定されていたときは、指定されたパターン名、略語、カテゴリのいずれかと一致するすべてのバグパターンが一致します。"

#: ../../filter.rst:38
msgid ""
"As a backwards compatibility measure, <BugPattern> and <BugCode> elements"
" may be used instead of <Bug> element. Each of these uses a name "
"attribute for specifying accepted values list. Support for these elements"
" may be removed in a future release."
msgstr ""
"下位互換性のために、<Bug> 要素の代わりに <BugPattern> と <BugCode> "
"要素を使用できます。それぞれの要素は、受け入れられた値のリストを指定するための ``name`` 属性を使用します。\n"
"これらの要素のサポートは、将来のリリースで削除される可能性があります。"

#: ../../filter.rst:41
msgid "<Confidence>"
msgstr ""

#: ../../filter.rst:43
msgid ""
"This element matches warnings with a particular bug confidence. The "
"``value`` attribute should be an integer value: 1 to match high-"
"confidence warnings, 2 to match normal-confidence warnings, or 3 to match"
" low-confidence warnings. ``<Confidence>`` replaced ``<Priority>`` in "
"2.0.0 release."
msgstr ""
"この要素は、警告を特定のバグ信頼度と照合します。``value`` 属性は、整数値でなければなりません。1は信頼度 (High)、2は信頼度 "
"(Medium)、3は信頼度 (Low) の警告と一致します。2.0.0リリースで、``<Confidence>`` は "
"``<Priority>`` に換えられました。"

#: ../../filter.rst:46
msgid "<Priority>"
msgstr ""

#: ../../filter.rst:48
msgid "Same as ``<Confidence>``, exists for backward compatibility."
msgstr "``<Confidence>`` と同じです。下位互換性を保つために残されています。"

#: ../../filter.rst:51
msgid "<Rank>"
msgstr ""

#: ../../filter.rst:53
#, fuzzy
msgid ""
"This element matches warnings having at least a specified bug rank. The "
"``value`` attribute should be an integer value between 1 and 20, where 1 "
"to 4 are scariest, 5 to 9 scary, 10 to 14 troubling, and 15 to 20 of "
"concern bugs."
msgstr ""
"この要素は、警告を特定のバグランクと照合します。``value`` 属性は、1から20までの整数値でなければなりません。1から4 "
"は恐るべきバグ、 5から9は恐ろしいバグ、 10から14は厄介なバグ、 15から 20 は心配なバグを表します。"

#: ../../filter.rst:56
msgid "<Package>"
msgstr ""

#: ../../filter.rst:58
msgid ""
"This element matches warnings associated with classes within the package "
"specified using ``name`` attribute. Nested packages are not included "
"(along the lines of Java import statement). However matching multiple "
"packages can be achieved easily using regex name match."
msgstr ""
"この要素は、``name`` 属性で指定されたパッケージ内のクラスに関連した警告と照合します。ネストしたパッケージは含まれていません (Java "
"import文に従っています）。しかし、正規表現を使用すると複数のパッケージに一致させることが簡単に実現できます。"

#: ../../filter.rst:61
msgid "<Class>"
msgstr ""

#: ../../filter.rst:63
msgid ""
"This element matches warnings associated with a particular class. The "
"``name`` attribute is used to specify the exact or regex match pattern "
"for the class name. The ``role`` attribute is the class role."
msgstr ""
"この要素は、特定のクラスに関連した警告と照合します。``name`` "
"属性は、クラス名の正確な正規表現パターンを指定するために使用されます。``role`` 属性はクラスの役割です。"

#: ../../filter.rst:65
msgid ""
"As a backward compatibility measure, instead of element of this type, you"
" can use ``class`` attribute on a ``Match`` element to specify exact an "
"class name or ``classregex`` attribute to specify a regular expression to"
" match the class name against."
msgstr ""
"下位互換性のために、<Class> 要素の代わりに ``Match`` 要素の ``class`` "
"属性を使用して厳密なクラス名を指定できます。また、 ``classregex`` "
"属性を使用してクラス名と一致する正規表現を指定することもできます。"

#: ../../filter.rst:67
msgid ""
"If the ``Match`` element contains neither a ``Class`` element, nor a "
"``class`` / ``classregex`` attribute, the predicate will apply to all "
"classes. Such predicate is likely to match more bug instances than you "
"want, unless it is refined further down with appropriate method or field "
"predicates."
msgstr ""
"``Match`` 要素に ``Class`` 要素も ``class`` / ``classregex`` "
"属性も含まれていないときは、述語は全てのクラスに適用されます。そのような述語は適切なメソッドやフィールド述語を使用してさらに細かく分類されないかぎり、必要以上のバグインスタンスに一致する可能性があります。"

#: ../../filter.rst:70
msgid "<Source>"
msgstr ""

#: ../../filter.rst:72
msgid ""
"This element matches warnings associated with a particular source file. "
"The ``name`` attribute is used to specify the exact or regex match "
"pattern for the source file name."
msgstr ""
"この要素は、特定のソースファイルに関連した警告と照合します。``name`` "
"属性は、ソースファイル名の正確な正規表現パターンを指定するために使用されます。"

#: ../../filter.rst:75
msgid "<Method>"
msgstr ""

#: ../../filter.rst:77
msgid ""
"This element specifies a method. The ``name`` attribute is used to "
"specify the exact or regex match pattern for the method name. The "
"``params`` attribute is a comma-separated list of the types of the "
"method's parameters. The ``returns`` attribute is the method's return "
"type. The ``role`` attribute is the method role. In ``params`` and "
"``returns``, class names must be fully qualified. (E.g., "
"``\"java.lang.String\"`` instead of just ``\"String\"``.) If one of the "
"latter attributes is specified the other is required for creating a "
"method signature. Note that you can provide either ``name`` attribute or "
"``params`` and ``returns`` attributes or all three of them. This way you "
"can provide various kinds of name and signature based matches."
msgstr ""
"この要素は、メソッドを指定します。``name`` 属性は、メソッド名の正確な正規表現パターンを指定するために使用されます。``params`` "
"属性は、メソッドパラメータの型のコンマ区切りリストです。``returns`` 属性は、メソッドの戻り値の型です。``role`` "
"属性は、メソッドの役割です。``params`` と ``returns`` はクラスの完全修飾名でなければなりません。(たとえば "
"``\"String\"`` ではなく ``\"java.lang.String\"`` を使用します）"
"後者の属性のいずれかが指定されているときは、もう一方がメソッドシグネチャを作成するために必要です。``name`` 属性、``params`` と"
" ``returns`` 属性、あるいはすべての属性を指定できます。このように、さまざまな種類の名前とシグネチャに基づく照合条件を指定できます。"

#: ../../filter.rst:80
msgid "<Field>"
msgstr ""

#: ../../filter.rst:82
msgid ""
"This element specifies a field. The ``name`` attribute is used to specify"
" the exact or regex match pattern for the field name. You can also filter"
" fields according to their signature - use ``type`` attribute to specify "
"fully qualified type of the field. You can specify either or both of "
"these attributes in order to perform name / signature based matches. The "
"``role`` attribute is the field role."
msgstr ""
"この要素は、フィールドを指定します。``name`` "
"属性は、フィールド名の正確な正規表現パターンを指定するために使用されます。シグネチャに基づいてフィールドをフィルタリングすることもできます。フィールドの完全修飾型を指定するためには"
" ``type`` 属性を使用します。名前やシグネチャに基づいた照合を実行するために、これらの属性の一方または両方を指定できます。``role``"
" 属性はフィールドの役割です。"

#: ../../filter.rst:85
msgid "<Local>"
msgstr ""

#: ../../filter.rst:87
msgid ""
"This element specifies a local variable. The ``name`` attribute is used "
"to specify the exact or regex match pattern for the local variable name. "
"Local variables are variables defined within a method."
msgstr ""
"この要素は、ローカル変数を指定します。``name`` "
"属性は、ローカル変数名の正確な正規表現パターンを指定するために使用されます。ローカル変数は、メソッド内で定義される変数です。"

#: ../../filter.rst:90
msgid "<Type>"
msgstr ""

#: ../../filter.rst:92
msgid ""
"This element matches warnings associated with a particular type. The "
"``descriptor`` attribute is used to specify the exact or regex match "
"pattern for type descriptor. If the descriptor starts with the ~ "
"character the rest of attribute content is interpreted as a Java regular "
"expression. The ``role`` attribute is the class role, and the "
"``typeParameters`` is the type parameters. Both of ``role`` and "
"``typeParameters`` are optional attributes."
msgstr ""
"この要素は、特定の型に関連した警告と照合します。``descriptor`` "
"属性は、型修飾子の正確な正規表現パターンを指定するために使用されます。ディスクリプタが ~ "
"文字で始まるときは、残りの属性コンテンツはJavaの正規表現として解釈されます。``role`` "
"属性は、クラスの役割です。``typeParameters`` 属性は、型パラメータです。``role`` と "
"``typeParameters`` はオプション属性です。"

#: ../../filter.rst:95
msgid "<Or>"
msgstr ""

#: ../../filter.rst:97
msgid ""
"This element combines ``Match`` clauses as disjuncts. I.e., you can put "
"two ``Method`` elements in an ``Or`` clause in order to match either "
"method."
msgstr ""
"この要素は、マッチング条件を論理和として組み合わせます。つまり、いずれかのメソッドと照合させるために2つの ``Method`` 要素を "
"``Or`` 要素に入れられます。"

#: ../../filter.rst:100
msgid "<And>"
msgstr ""

#: ../../filter.rst:102
msgid ""
"This element combines ``Match`` clauses which both must evaluate to "
"``true``. I.e., you can put ``Bug`` and ``Confidence`` elements in an "
"``And`` clause in order to match specific bugs with given confidence "
"only."
msgstr ""
"この要素は、マッチング条件を論理積として組み合わせます。つまり、特定のバグに与えられた信頼度だけと照合させるために  ``Bug`` 要素と "
"``Confidence`` 要素を ``And`` 要素に入れられます。"

#: ../../filter.rst:105
msgid "<Not>"
msgstr ""

#: ../../filter.rst:107
msgid ""
"This element inverts the included child ``Match``. I.e., you can put a "
"``Bug`` element in a ``Not`` clause in order to match any bug excluding "
"the given one."
msgstr ""
"この要素は、含まれている子要素の ``Match`` を反転させます。つまり、与えられたバグ以外のバグと照合させるために ``Bug`` 要素を "
"``Not`` 要素に入れられます。"

#: ../../filter.rst:110
msgid "Java element name matching"
msgstr "Java 要素名との一致"

#: ../../filter.rst:112
msgid ""
"If the ``name`` attribute of ``Class``, ``Source``, ``Method`` or "
"``Field`` starts with the ``~`` character the rest of attribute content "
"is interpreted as a Java regular expression that is matched against the "
"names of the Java element in question."
msgstr ""
"``Class``、``Source``、``Method``、``Field`` の ``name`` 属性が ~ "
"文字で始まるときは、残りの属性コンテンツはJava要素名と照合されるJavaの正規表現として解釈されます。"

#: ../../filter.rst:114
msgid ""
"Note that the pattern is matched against whole element name and therefore"
" ``.*`` clauses need to be used at pattern beginning and/or end to "
"perform substring matching."
msgstr ""
"パターンは、要素名全体と照合されるので、部分文字列で照合をしたいときは、パターンの先頭や最後に ``.*`` "
"を使用する必要があることに注意してください。"

#: ../../filter.rst:116
msgid ""
"See `java.util.regex.Pattern "
"<https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html>`_"
" documentation for pattern syntax."
msgstr ""
"パターン構文については `java.util.regex.Pattern "
"<https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html>`_"
" を参照してください。"

#: ../../filter.rst:119
msgid "Caveats"
msgstr "注意事項"

#: ../../filter.rst:121
msgid ""
"``Match`` clauses can only match information that is actually contained "
"in the bug instances. Every bug instance has a class, so in general, "
"excluding bugs by class will work."
msgstr ""
"``Match`` "
"節は実際にバグインスタンスに含まれている情報にしかマッチできません。すべてのバグインスタンスにはクラスがあるので、一般的にクラスによるバグの除外はうまくいきます。"

#: ../../filter.rst:124
msgid ""
"Some bug instances have two (or more) classes. For example, the DE "
"(dropped exception) bugs report both the class containing the method "
"where the dropped exception happens, and the class which represents the "
"type of the dropped exception. Only the *first* (primary) class is "
"matched against ``Match`` clauses. So, for example, if you want to "
"suppress IC (initialization circularity) reports for classes "
"\"com.foobar.A\" and \"com.foobar.B\", you would use two ``Match`` "
"clauses:"
msgstr ""
"いくつかのバグインスタンスは2つか、それ以上のクラスを持っています。たとえば、DE (無視された例外）"
"バグは、無視された例外が発生するメソッドを含むクラスと無視された例外の型を表すクラスの両方を報告します。*1番目* (主）"
"のクラスだけがマッチング条件とマッチします。たとえば、クラス「com.foobar.A」と「com.foobar.B」のIC "
"(初期化時の循環）レポートを抑制したいときは、2 つの ``Match`` 要素を使用してマッチング条件を指定します。"

#: ../../filter.rst:140
msgid ""
"By explicitly matching both classes, you ensure that the IC bug instance "
"will be matched regardless of which class involved in the circularity "
"happens to be listed first in the bug instance. (Of course, this approach"
" might accidentally suppress circularities involving \"com.foobar.A\" or "
"\"com.foobar.B\" and a third class.)"
msgstr ""
"両方のクラスを明示的に照合することで、循環に関与しているクラスがバグインスタンスで最初にリストされたとしてもIC "
"バグインスタンスがマッチすることを保証します。(もちろん、このアプローチでは、「com.foobar.A」または「com.foobar.B」と第 "
"3 のクラスを含む循環が誤って抑制される可能性があります。)"

#: ../../filter.rst:142
msgid ""
"Many kinds of bugs report what method they occur in. For those bug "
"instances, you can put Method clauses in the Match element and they "
"should work as expected."
msgstr ""
"さまざまな種類のバグは、どのようなメソッドで発生するかを報告します。これらのバグインスタンスに対しては、``Method`` 節を "
"``Match`` 要素に入れられるので、期待どおりに動作するはずです。"

#: ../../filter.rst:145
msgid "Examples"
msgstr "例"

#: ../../filter.rst:148
msgid "Match all bug reports for a class"
msgstr "特定のクラスに対するすべてのバグレポートと一致させる"

#: ../../filter.rst:157
msgid "Match certain tests from a class by specifying their abbreviations"
msgstr "略語を指定してクラスから特定のテストと一致させる"

#: ../../filter.rst:167
msgid "Match certain tests from all classes by specifying their abbreviations"
msgstr "略語を指定して、全てのクラスの特定のテストと一致させる"

#: ../../filter.rst:176
msgid "Match certain tests from all classes by specifying their category"
msgstr "カテゴリを指定して、全てのクラスの特定のテストと一致させる"

#: ../../filter.rst:185
msgid "Match bug types from specified methods of a class by their abbreviations"
msgstr "クラスのメソッドの略称を指定して、バグタイプと一致させる"

#: ../../filter.rst:199
msgid "Match a particular bug pattern in a particular method"
msgstr "特定のメソッドで特定のバグパターンと一致させる"

#: ../../filter.rst:211
msgid ""
"Match a particular bug pattern with a given priority in a particular "
"method"
msgstr "特定のメソッドで特定のバグパターンと優先度で一致させる"

#: ../../filter.rst:224
msgid ""
"Match minor bugs introduced by AspectJ compiler (you are probably not "
"interested in these unless you are an AspectJ developer)"
msgstr "AspectJ コンパイラによって導入されたマイナーなバグに一致させる (AspectJ 開発者でないかぎり、おそらく関心がない)"

#: ../../filter.rst:239
msgid "Match bugs in specific parts of the code base"
msgstr "コードベースの特定の部分と一致させる"

#: ../../filter.rst:260
msgid "Match bugs on fields or methods with specific signatures"
msgstr "特定のシグネチャを持つフィールドやメソッドのバグに一致させる"

#: ../../filter.rst:276
msgid "Match bugs using the Not filter operator"
msgstr "Not フィルタ演算子を使用してバグと一致させる"

#: ../../filter.rst:294
msgid ""
"Full exclusion filter file to match all classes generated from Groovy "
"source files"
msgstr "Groovy ソースファイルから生成されたすべてのクラスに一致する完全除外フィルタファイル"

#: ../../filter.rst:306
msgid "Complete Example"
msgstr "完全な例"

