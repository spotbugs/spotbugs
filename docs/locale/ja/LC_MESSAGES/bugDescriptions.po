# Translations template for PROJECT.
# Copyright (C) 2017 ORGANIZATION
# This file is distributed under the same license as the PROJECT project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PROJECT VERSION\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2021-03-23 17:21+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../bugDescriptions.rst:2
msgid "Bug descriptions"
msgstr "検知可能なバグの詳細"

#: ../../bugDescriptions.rst:4
msgid "This document lists the standard bug patterns reported by SpotBugs."
msgstr "このページではSpotBugsが標準で検知可能なバグを一覧で紹介しています。"

#: ../../generated/bugDescriptionList.inc:2
msgid "Bad practice (BAD_PRACTICE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4
msgid ""
"Violations of recommended and essential coding practice. Examples include"
" hash code and equals problems, cloneable idiom, dropped exceptions, "
"Serializable problems, and misuse of finalize. We strive to make this "
"analysis accurate, although some groups may not care about some of the "
"bad practices."
msgstr ""

#: ../../generated/bugDescriptionList.inc:13
msgid "<a id='JUA_DONT_ASSERT_INSTANCEOF_IN_TESTS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:18
msgid ""
"JUA:  Asserting value of instanceof in tests is not recommended.  "
"(JUA_DONT_ASSERT_INSTANCEOF_IN_TESTS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:20
msgid ""
"<p>Asserting type checks in tests is not recommended as a class cast "
"exception message could better indicate\n"
"the cause of an instance of the wrong class being used than an instanceof"
" assertion.</p>\n"
"\n"
"<p>When debugging tests that fail due to bad casts, it may be more useful"
" to observe the output of the\n"
"resulting ClassCastException which could provide information about the "
"actual encountered type.\n"
"Asserting the type before casting would instead result in a less "
"informative <code>\"false is not true\"</code>\n"
"message.</p>\n"
"\n"
"<p>If JUnit is used with hamcrest, the <a "
"href=\"https://junit.org/junit4/javadoc/latest/index.html?org/hamcrest/core/IsInstanceOf.html\"><code>IsInstanceOf</code></a>"
"\n"
"class from hamcrest could be used instead.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:36
msgid "<a id='CNT_ROUGH_CONSTANT_VALUE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:41
msgid "CNT: Rough value of known constant found (CNT_ROUGH_CONSTANT_VALUE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:43
msgid ""
"<p>It's recommended to use the predefined library constant for code "
"clarity and better precision.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:50
msgid "<a id='NP_BOOLEAN_RETURN_NULL'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:55
msgid ""
"NP: Method with Boolean return type returns explicit null "
"(NP_BOOLEAN_RETURN_NULL)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:57
msgid ""
"   <p>\n"
"A method that returns either Boolean.TRUE, Boolean.FALSE or null is an "
"accident waiting to happen.\n"
"This method can be invoked as though it returned a value of type boolean,"
" and\n"
"the compiler will insert automatic unboxing of the Boolean value. If a "
"null value is returned,\n"
"this will result in a NullPointerException.\n"
"   </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:69
msgid "<a id='SW_SWING_METHODS_INVOKED_IN_SWING_THREAD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:74
msgid ""
"SW: Certain swing methods needs to be invoked in Swing thread "
"(SW_SWING_METHODS_INVOKED_IN_SWING_THREAD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:76
msgid ""
"<p>(<a "
"href=\"http://web.archive.org/web/20090526170426/http://java.sun.com/developer/JDCTechTips/2003/tt1208.html\">From"
" JDC Tech Tip</a>): The Swing methods\n"
"show(), setVisible(), and pack() will create the associated peer for the "
"frame.\n"
"With the creation of the peer, the system creates the event dispatch "
"thread.\n"
"This makes things problematic because the event dispatch thread could be "
"notifying\n"
"listeners while pack and validate are still processing. This situation "
"could result in\n"
"two threads going through the Swing component-based GUI -- it's a serious"
" flaw that\n"
"could result in deadlocks or other related threading issues. A pack call "
"causes\n"
"components to be realized. As they are being realized (that is, not "
"necessarily\n"
"visible), they could trigger listener notification on the event dispatch "
"thread.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:92
msgid "<a id='FI_FINALIZER_ONLY_NULLS_FIELDS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:97
msgid "FI: Finalizer only nulls fields (FI_FINALIZER_ONLY_NULLS_FIELDS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:99
msgid ""
"  <p> This finalizer does nothing except null out fields. This is "
"completely pointless, and requires that\n"
"the object be garbage collected, finalized, and then garbage collected "
"again. You should just remove the finalize\n"
"method.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:108
msgid "<a id='FI_FINALIZER_NULLS_FIELDS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:113
msgid "FI: Finalizer nulls fields (FI_FINALIZER_NULLS_FIELDS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:115
msgid ""
"<p> This finalizer nulls out fields.  This is usually an error, as it "
"does not aid garbage collection,\n"
"and the object is going to be garbage collected anyway.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:123
msgid "<a id='UI_INHERITANCE_UNSAFE_GETRESOURCE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:128
msgid ""
"UI: Usage of GetResource may be unsafe if class is extended "
"(UI_INHERITANCE_UNSAFE_GETRESOURCE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:130
msgid ""
"<p>Calling <code>this.getClass().getResource(...)</code> could give\n"
"results other than expected if this class is extended by a class in\n"
"another package.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:139
msgid "<a id='AM_CREATES_EMPTY_ZIP_FILE_ENTRY'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:144
msgid "AM: Creates an empty zip file entry (AM_CREATES_EMPTY_ZIP_FILE_ENTRY)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:146
msgid ""
"<p>The code calls <code>putNextEntry()</code>, immediately\n"
"followed by a call to <code>closeEntry()</code>. This results\n"
"in an empty ZipFile entry. The contents of the entry\n"
"should be written to the ZipFile between the calls to\n"
"<code>putNextEntry()</code> and\n"
"<code>closeEntry()</code>.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:158
msgid "<a id='AM_CREATES_EMPTY_JAR_FILE_ENTRY'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:163
msgid "AM: Creates an empty jar file entry (AM_CREATES_EMPTY_JAR_FILE_ENTRY)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:165
msgid ""
"<p>The code calls <code>putNextEntry()</code>, immediately\n"
"followed by a call to <code>closeEntry()</code>. This results\n"
"in an empty JarFile entry. The contents of the entry\n"
"should be written to the JarFile between the calls to\n"
"<code>putNextEntry()</code> and\n"
"<code>closeEntry()</code>.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:177
msgid "<a id='IMSE_DONT_CATCH_IMSE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:182
msgid ""
"IMSE: Dubious catching of IllegalMonitorStateException "
"(IMSE_DONT_CATCH_IMSE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:184
msgid ""
"<p>IllegalMonitorStateException is generally only\n"
"   thrown in case of a design flaw in your code (calling wait or\n"
"   notify on an object you do not hold a lock on).</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:193
msgid "<a id='CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:198
msgid ""
"CN: Class defines clone() but doesn't implement Cloneable "
"(CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:200
msgid ""
"<p> This class defines a clone() method but the class doesn't implement "
"Cloneable.\n"
"There are some situations in which this is OK (e.g., you want to control "
"how subclasses\n"
"can clone themselves), but just make sure that this is what you intended."
"\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:210
msgid "<a id='CN_IDIOM'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:215
msgid ""
"CN: Class implements Cloneable but does not define or use clone method "
"(CN_IDIOM)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:217
msgid ""
"<p>\n"
"   Class implements Cloneable but does not define or\n"
"   use the clone method.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:226
msgid "<a id='CN_IDIOM_NO_SUPER_CALL'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:231
msgid "CN: clone method does not call super.clone() (CN_IDIOM_NO_SUPER_CALL)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:233
msgid ""
"<p> This non-final class defines a clone() method that does not call "
"super.clone().\n"
"If this class (\"<i>A</i>\") is extended by a subclass (\"<i>B</i>\"),\n"
"and the subclass <i>B</i> calls super.clone(), then it is likely that\n"
"<i>B</i>'s clone() method will return an object of type <i>A</i>,\n"
"which violates the standard contract for clone().</p>\n"
"\n"
"<p> If all clone() methods call super.clone(), then they are guaranteed\n"
"to use Object.clone(), which always returns an object of the correct "
"type.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:247
msgid "<a id='DE_MIGHT_DROP'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:252
msgid "DE: Method might drop exception (DE_MIGHT_DROP)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:254
msgid ""
"<p> This method might drop an exception.&nbsp; In general, exceptions\n"
"should be handled or reported in some way, or they should be thrown\n"
"out of the method.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:263
msgid "<a id='DE_MIGHT_IGNORE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:268
msgid "DE: Method might ignore exception (DE_MIGHT_IGNORE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:270
msgid ""
"<p> This method might ignore an exception.&nbsp; In general, exceptions\n"
"should be handled or reported in some way, or they should be thrown\n"
"out of the method.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:279
msgid "<a id='DM_EXIT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:284
msgid "Dm: Method invokes System.exit(...) (DM_EXIT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:286
msgid ""
"<p> Invoking System.exit shuts down the entire Java virtual machine. This"
"\n"
" should only been done when it is appropriate. Such calls make it\n"
" hard or impossible for your code to be invoked by other code.\n"
" Consider throwing a RuntimeException instead.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:296
msgid "<a id='NM_FUTURE_KEYWORD_USED_AS_IDENTIFIER'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:301
msgid ""
"Nm: Use of identifier that is a keyword in later versions of Java "
"(NM_FUTURE_KEYWORD_USED_AS_IDENTIFIER)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:303
msgid ""
"<p>The identifier is a word that is reserved as a keyword in later "
"versions of Java, and your code will need to be changed\n"
"in order to compile it in later versions of Java.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:312
msgid "<a id='NM_FUTURE_KEYWORD_USED_AS_MEMBER_IDENTIFIER'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:317
msgid ""
"Nm: Use of identifier that is a keyword in later versions of Java "
"(NM_FUTURE_KEYWORD_USED_AS_MEMBER_IDENTIFIER)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:319
msgid ""
"<p>This identifier is used as a keyword in later versions of Java. This "
"code, and\n"
"any code that references this API,\n"
"will need to be changed in order to compile it in later versions of "
"Java.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:329
msgid "<a id='JCIP_FIELD_ISNT_FINAL_IN_IMMUTABLE_CLASS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:334
msgid ""
"JCIP: Fields of immutable classes should be final "
"(JCIP_FIELD_ISNT_FINAL_IN_IMMUTABLE_CLASS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:336
msgid ""
"<p> The class is annotated with net.jcip.annotations.Immutable or "
"javax.annotation.concurrent.Immutable,\n"
"and the rules for those annotations require that all fields are final.\n"
" .</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:345
msgid "<a id='DM_RUN_FINALIZERS_ON_EXIT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:350
msgid ""
"Dm: Method invokes dangerous method runFinalizersOnExit "
"(DM_RUN_FINALIZERS_ON_EXIT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:352
msgid ""
"  <p> <em>Never call System.runFinalizersOnExit\n"
"or Runtime.runFinalizersOnExit for any reason: they are among the most\n"
"dangerous methods in the Java libraries.</em> -- Joshua Bloch</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:361
msgid "<a id='NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:366
msgid ""
"NP: equals() method does not check for null argument "
"(NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:368
msgid ""
"<p>\n"
"This implementation of equals(Object) violates the contract defined\n"
"by java.lang.Object.equals() because it does not check for null\n"
"being passed as the argument.  All equals() methods should return\n"
"false if passed a null value.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:380
msgid "<a id='FI_EMPTY'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:385
msgid "FI: Empty finalizer should be deleted (FI_EMPTY)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:387
msgid ""
"<p> Empty <code>finalize()</code> methods are useless, so they should\n"
"be deleted.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:395
msgid "<a id='FI_NULLIFY_SUPER'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:400
msgid "FI: Finalizer nullifies superclass finalizer (FI_NULLIFY_SUPER)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:402
msgid ""
"<p> This empty <code>finalize()</code> method explicitly negates the\n"
"effect of any finalizer defined by its superclass.&nbsp; Any finalizer\n"
"actions defined for the superclass will not be performed.&nbsp;\n"
"Unless this is intended, delete this method.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:412
msgid "<a id='FI_USELESS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:417
msgid "FI: Finalizer does nothing but call superclass finalizer (FI_USELESS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:419
msgid ""
"<p> The only thing this <code>finalize()</code> method does is call\n"
"the superclass's <code>finalize()</code> method, making it\n"
"redundant.&nbsp; Delete it.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:428
msgid "<a id='FI_MISSING_SUPER_CALL'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:433
msgid "FI: Finalizer does not call superclass finalizer (FI_MISSING_SUPER_CALL)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:435
msgid ""
"<p> This <code>finalize()</code> method does not make a call to its\n"
"superclass's <code>finalize()</code> method.&nbsp; So, any finalizer\n"
"actions defined for the superclass will not be performed.&nbsp;\n"
"Add a call to <code>super.finalize()</code>.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:445
msgid "<a id='FI_EXPLICIT_INVOCATION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:450
msgid "FI: Explicit invocation of finalizer (FI_EXPLICIT_INVOCATION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:452
msgid ""
"  <p> This method contains an explicit invocation of the "
"<code>finalize()</code>\n"
"  method on an object.&nbsp; Because finalizer methods are supposed to be"
"\n"
"  executed once, and only by the VM, this is a bad idea.</p>\n"
"<p>If a connected set of objects beings finalizable, then the VM will "
"invoke the\n"
"finalize method on all the finalizable object, possibly at the same time "
"in different threads.\n"
"Thus, it is a particularly bad idea, in the finalize method for a class "
"X, invoke finalize\n"
"on objects referenced by X, because they may already be getting finalized"
" in a separate thread.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:465
msgid "<a id='EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:470
msgid ""
"Eq: Equals checks for incompatible operand "
"(EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:472
msgid ""
"  <p> This equals method is checking to see if the argument is some "
"incompatible type\n"
"(i.e., a class that is neither a supertype nor subtype of the class that "
"defines\n"
"the equals method). For example, the Foo class might have an equals "
"method\n"
"that looks like:\n"
"</p>\n"
"<pre><code>public boolean equals(Object o) {\n"
"    if (o instanceof Foo)\n"
"        return name.equals(((Foo)o).name);\n"
"    else if (o instanceof String)\n"
"        return name.equals(o);\n"
"    else return false;\n"
"}\n"
"</code></pre>\n"
"\n"
"<p>This is considered bad practice, as it makes it very hard to implement"
" an equals method that\n"
"is symmetric and transitive. Without those properties, very unexpected "
"behaviors are possible.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:495
msgid "<a id='EQ_GETCLASS_AND_CLASS_CONSTANT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:500
msgid "Eq: equals method fails for subtypes (EQ_GETCLASS_AND_CLASS_CONSTANT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:502
msgid ""
"  <p> This class has an equals method that will be broken if it is "
"inherited by subclasses.\n"
"It compares a class literal with the class of the argument (e.g., in "
"class <code>Foo</code>\n"
"it might check if <code>Foo.class == o.getClass()</code>).\n"
"It is better to check if <code>this.getClass() == o.getClass()</code>.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:513
msgid "<a id='EQ_SELF_NO_OBJECT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:518
msgid "Eq: Covariant equals() method defined (EQ_SELF_NO_OBJECT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:520
#: ../../generated/bugDescriptionList.inc:785
msgid ""
"<p> This class defines a covariant version of "
"<code>equals()</code>.&nbsp;\n"
"To correctly override the <code>equals()</code> method in\n"
"<code>java.lang.Object</code>, the parameter of <code>equals()</code>\n"
"must have type <code>java.lang.Object</code>.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:530
msgid "<a id='CO_SELF_NO_OBJECT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:535
msgid "Co: Covariant compareTo() method defined (CO_SELF_NO_OBJECT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:537
#: ../../generated/bugDescriptionList.inc:802
msgid ""
"<p> This class defines a covariant version of "
"<code>compareTo()</code>.&nbsp;\n"
"To correctly override the <code>compareTo()</code> method in the\n"
"<code>Comparable</code> interface, the parameter of "
"<code>compareTo()</code>\n"
"must have type <code>java.lang.Object</code>.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:547
msgid "<a id='CO_COMPARETO_RESULTS_MIN_VALUE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:552
msgid ""
"Co: compareTo()/compare() returns Integer.MIN_VALUE "
"(CO_COMPARETO_RESULTS_MIN_VALUE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:554
msgid ""
"  <p> In some situation, this compareTo or compare method returns\n"
"the  constant Integer.MIN_VALUE, which is an exceptionally bad practice.\n"
"  The only thing that matters about the return value of compareTo is the "
"sign of the result.\n"
"    But people will sometimes negate the return value of compareTo, "
"expecting that this will negate\n"
"    the sign of the result. And it will, except in the case where the "
"value returned is Integer.MIN_VALUE.\n"
"    So just return -1 rather than Integer.MIN_VALUE."
msgstr ""

#: ../../generated/bugDescriptionList.inc:566
msgid "<a id='CO_COMPARETO_INCORRECT_FLOATING'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:571
msgid ""
"Co: compareTo()/compare() incorrectly handles float or double value "
"(CO_COMPARETO_INCORRECT_FLOATING)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:573
msgid ""
"  <p>This method compares double or float values using pattern like this:"
" val1 &gt; val2 ? 1 : val1 &lt; val2 ? -1 : 0.\n"
"This pattern works incorrectly for -0.0 and NaN values which may result "
"in incorrect sorting result or broken collection\n"
"(if compared values are used as keys). Consider using Double.compare or "
"Float.compare static methods which handle all\n"
"the special cases correctly.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:583
msgid "<a id='RV_NEGATING_RESULT_OF_COMPARETO'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:588
msgid ""
"RV: Negating the result of compareTo()/compare() "
"(RV_NEGATING_RESULT_OF_COMPARETO)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:590
msgid ""
"  <p> This code negatives the return value of a compareTo or compare "
"method.\n"
"This is a questionable or bad programming practice, since if the return\n"
"value is Integer.MIN_VALUE, negating the return value won't\n"
"negate the sign of the result. You can achieve the same intended result\n"
"by reversing the order of the operands rather than by negating the "
"results.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:602
msgid "<a id='ES_COMPARING_STRINGS_WITH_EQ'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:607
msgid ""
"ES: Comparison of String objects using == or != "
"(ES_COMPARING_STRINGS_WITH_EQ)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:609
msgid ""
"  <p>This code compares <code>java.lang.String</code> objects for "
"reference\n"
"equality using the == or != operators.\n"
"Unless both strings are either constants in a source file, or have been\n"
"interned using the <code>String.intern()</code> method, the same string\n"
"value may be represented by two different String objects. Consider\n"
"using the <code>equals(Object)</code> method instead.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:621
msgid "<a id='ES_COMPARING_PARAMETER_STRING_WITH_EQ'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:626
msgid ""
"ES: Comparison of String parameter using == or != "
"(ES_COMPARING_PARAMETER_STRING_WITH_EQ)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:628
msgid ""
"  <p>This code compares a <code>java.lang.String</code> parameter for "
"reference\n"
"equality using the == or != operators. Requiring callers to\n"
"pass only String constants or interned strings to a method is "
"unnecessarily\n"
"fragile, and rarely leads to measurable performance gains. Consider\n"
"using the <code>equals(Object)</code> method instead.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:639
msgid "<a id='EQ_COMPARETO_USE_OBJECT_EQUALS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:644
msgid ""
"Eq: Class defines compareTo(...) and uses Object.equals() "
"(EQ_COMPARETO_USE_OBJECT_EQUALS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:646
msgid ""
"  <p> This class defines a <code>compareTo(...)</code> method but "
"inherits its\n"
"  <code>equals()</code> method from <code>java.lang.Object</code>.\n"
"    Generally, the value of compareTo should return zero if and only if\n"
"    equals returns true. If this is violated, weird and unpredictable\n"
"    failures will occur in classes such as PriorityQueue.\n"
"    In Java 5 the PriorityQueue.remove method uses the compareTo method,\n"
"    while in Java 6 it uses the equals method.</p>\n"
"\n"
"<p>From the JavaDoc for the compareTo method in the Comparable interface:"
"\n"
"<blockquote>\n"
"It is strongly recommended, but not strictly required that "
"<code>(x.compareTo(y)==0) == (x.equals(y))</code>.\n"
"Generally speaking, any class that implements the Comparable interface "
"and violates this condition\n"
"should clearly indicate this fact. The recommended language\n"
"is \"Note: this class has a natural ordering that is inconsistent with "
"equals.\"\n"
"</blockquote></p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:667
msgid "<a id='HE_HASHCODE_USE_OBJECT_EQUALS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:672
msgid ""
"HE: Class defines hashCode() and uses Object.equals() "
"(HE_HASHCODE_USE_OBJECT_EQUALS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:674
msgid ""
"  <p> This class defines a <code>hashCode()</code> method but inherits "
"its\n"
"  <code>equals()</code> method from <code>java.lang.Object</code>\n"
"  (which defines equality by comparing object references).&nbsp; Although"
"\n"
"  this will probably satisfy the contract that equal objects must have\n"
"  equal hashcodes, it is probably not what was intended by overriding\n"
"  the <code>hashCode()</code> method.&nbsp; (Overriding "
"<code>hashCode()</code>\n"
"  implies that the object's identity is based on criteria more "
"complicated\n"
"  than simple reference equality.)</p>\n"
"<p>If you don't think instances of this class will ever be inserted into "
"a HashMap/HashTable,\n"
"the recommended <code>hashCode</code> implementation to use is:</p>\n"
"<pre><code>public int hashCode() {\n"
"    assert false : \"hashCode not designed\";\n"
"    return 42; // any arbitrary constant will do\n"
"}\n"
"</code></pre>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:695
msgid "<a id='HE_HASHCODE_NO_EQUALS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:700
msgid "HE: Class defines hashCode() but not equals() (HE_HASHCODE_NO_EQUALS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:702
msgid ""
"<p> This class defines a <code>hashCode()</code> method but not an\n"
"<code>equals()</code> method.&nbsp; Therefore, the class may\n"
"violate the invariant that equal objects must have equal hashcodes.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:711
msgid "<a id='HE_EQUALS_USE_HASHCODE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:716
msgid ""
"HE: Class defines equals() and uses Object.hashCode() "
"(HE_EQUALS_USE_HASHCODE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:718
msgid ""
"  <p> This class overrides <code>equals(Object)</code>, but does not\n"
"  override <code>hashCode()</code>, and inherits the implementation of\n"
"  <code>hashCode()</code> from <code>java.lang.Object</code> (which "
"returns\n"
"  the identity hash code, an arbitrary value assigned to the object\n"
"  by the VM).&nbsp; Therefore, the class is very likely to violate the\n"
"  invariant that equal objects must have equal hashcodes.</p>\n"
"\n"
"<p>If you don't think instances of this class will ever be inserted into "
"a HashMap/HashTable,\n"
"the recommended <code>hashCode</code> implementation to use is:</p>\n"
"<pre><code>public int hashCode() {\n"
"    assert false : \"hashCode not designed\";\n"
"    return 42; // any arbitrary constant will do\n"
"}\n"
"</code></pre>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:738
msgid "<a id='HE_INHERITS_EQUALS_USE_HASHCODE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:743
msgid ""
"HE: Class inherits equals() and uses Object.hashCode() "
"(HE_INHERITS_EQUALS_USE_HASHCODE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:745
msgid ""
"  <p> This class inherits <code>equals(Object)</code> from an abstract\n"
"  superclass, and <code>hashCode()</code> from\n"
"<code>java.lang.Object</code> (which returns\n"
"  the identity hash code, an arbitrary value assigned to the object\n"
"  by the VM).&nbsp; Therefore, the class is very likely to violate the\n"
"  invariant that equal objects must have equal hashcodes.</p>\n"
"\n"
"  <p>If you don't want to define a hashCode method, and/or don't\n"
"   believe the object will ever be put into a HashMap/Hashtable,\n"
"   define the <code>hashCode()</code> method\n"
"   to throw <code>UnsupportedOperationException</code>.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:762
msgid "<a id='HE_EQUALS_NO_HASHCODE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:767
msgid "HE: Class defines equals() but not hashCode() (HE_EQUALS_NO_HASHCODE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:769
msgid ""
"<p> This class overrides <code>equals(Object)</code>, but does not\n"
"override <code>hashCode()</code>.&nbsp; Therefore, the class may violate "
"the\n"
"invariant that equal objects must have equal hashcodes.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:778
msgid "<a id='EQ_ABSTRACT_SELF'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:783
msgid "Eq: Abstract class defines covariant equals() method (EQ_ABSTRACT_SELF)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:795
msgid "<a id='CO_ABSTRACT_SELF'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:800
msgid "Co: Abstract class defines covariant compareTo() method (CO_ABSTRACT_SELF)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:812
msgid "<a id='IC_SUPERCLASS_USES_SUBCLASS_DURING_INITIALIZATION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:817
msgid ""
"IC: Superclass uses subclass during initialization "
"(IC_SUPERCLASS_USES_SUBCLASS_DURING_INITIALIZATION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:819
msgid ""
"  <p> During the initialization of a class, the class makes an active use"
" of a subclass.\n"
"That subclass will not yet be initialized at the time of this use.\n"
"For example, in the following code, <code>foo</code> will be null.</p>\n"
"<pre><code>public class CircularClassInitialization {\n"
"    static class InnerClassSingleton extends CircularClassInitialization "
"{\n"
"        static InnerClassSingleton singleton = new InnerClassSingleton();"
"\n"
"    }\n"
"\n"
"    static CircularClassInitialization foo = "
"InnerClassSingleton.singleton;\n"
"}\n"
"</code></pre>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:836
msgid "<a id='SI_INSTANCE_BEFORE_FINALS_ASSIGNED'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:841
msgid ""
"SI: Static initializer creates instance before all static final fields "
"assigned (SI_INSTANCE_BEFORE_FINALS_ASSIGNED)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:843
msgid ""
"<p> The class's static initializer creates an instance of the class\n"
"before all of the static final fields are assigned.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:851
msgid "<a id='IT_NO_SUCH_ELEMENT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:856
msgid ""
"It: Iterator next() method can't throw NoSuchElementException "
"(IT_NO_SUCH_ELEMENT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:858
msgid ""
"<p> This class implements the <code>java.util.Iterator</code> "
"interface.&nbsp;\n"
"However, its <code>next()</code> method is not capable of throwing\n"
"<code>java.util.NoSuchElementException</code>.&nbsp; The "
"<code>next()</code>\n"
"method should be changed so it throws <code>NoSuchElementException</code>"
"\n"
"if is called when there are no more elements to return.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:869
msgid "<a id='ME_MUTABLE_ENUM_FIELD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:874
msgid "ME: Enum field is public and mutable (ME_MUTABLE_ENUM_FIELD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:876
msgid ""
"<p>A mutable public field is defined inside a public enum, thus can be "
"changed by malicious code or by accident from another package.\n"
"Though mutable enum fields may be used for lazy initialization, it's a "
"bad practice to expose them to the outer world.\n"
"Consider declaring this field final and/or package-private.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:885
msgid "<a id='ME_ENUM_FIELD_SETTER'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:890
msgid ""
"ME: Public enum method unconditionally sets its field "
"(ME_ENUM_FIELD_SETTER)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:892
msgid ""
"<p>This public method declared in public enum unconditionally sets enum "
"field, thus this field can be changed by malicious code\n"
"or by accident from another package. Though mutable enum fields may be "
"used for lazy initialization, it's a bad practice to expose them to the "
"outer world.\n"
"Consider removing this method or declaring it package-private.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:901
msgid "<a id='NM_METHOD_NAMING_CONVENTION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:906
msgid ""
"Nm: Method names should start with a lower case letter "
"(NM_METHOD_NAMING_CONVENTION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:908
msgid ""
"  <p>\n"
"Methods should be verbs, in mixed case with the first letter lowercase, "
"with the first letter of each internal word capitalized.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:917
msgid "<a id='NM_FIELD_NAMING_CONVENTION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:922
msgid ""
"Nm: Field names should start with a lower case letter "
"(NM_FIELD_NAMING_CONVENTION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:924
msgid ""
"  <p>\n"
"Names of fields that are not final should be in mixed case with a "
"lowercase first letter and the first letters of subsequent words "
"capitalized.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:933
msgid "<a id='NM_SAME_SIMPLE_NAME_AS_INTERFACE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:938
msgid ""
"Nm: Class names shouldn't shadow simple name of implemented interface "
"(NM_SAME_SIMPLE_NAME_AS_INTERFACE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:940
msgid ""
"  <p> This class/interface has a simple name that is identical to that of"
" an implemented/extended interface, except\n"
"that the interface is in a different package (e.g., "
"<code>alpha.Foo</code> extends <code>beta.Foo</code>).\n"
"This can be exceptionally confusing, create lots of situations in which "
"you have to look at import statements\n"
"to resolve references and creates many\n"
"opportunities to accidentally define methods that do not override methods"
" in their superclasses.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:952
msgid "<a id='NM_SAME_SIMPLE_NAME_AS_SUPERCLASS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:957
msgid ""
"Nm: Class names shouldn't shadow simple name of superclass "
"(NM_SAME_SIMPLE_NAME_AS_SUPERCLASS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:959
msgid ""
"  <p> This class has a simple name that is identical to that of its "
"superclass, except\n"
"that its superclass is in a different package (e.g., "
"<code>alpha.Foo</code> extends <code>beta.Foo</code>).\n"
"This can be exceptionally confusing, create lots of situations in which "
"you have to look at import statements\n"
"to resolve references and creates many\n"
"opportunities to accidentally define methods that do not override methods"
" in their superclasses.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:971
msgid "<a id='NM_CLASS_NAMING_CONVENTION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:976
msgid ""
"Nm: Class names should start with an upper case letter "
"(NM_CLASS_NAMING_CONVENTION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:978
msgid ""
"  <p> Class names should be nouns, in mixed case with the first letter of"
" each internal word capitalized. Try to keep your class names simple and "
"descriptive. Use whole words-avoid acronyms and abbreviations (unless the"
" abbreviation is much more widely used than the long form, such as URL or"
" HTML).\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:986
msgid "<a id='NM_VERY_CONFUSING_INTENTIONAL'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:991
msgid ""
"Nm: Very confusing method names (but perhaps intentional) "
"(NM_VERY_CONFUSING_INTENTIONAL)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:993
msgid ""
"  <p> The referenced methods have names that differ only by "
"capitalization.\n"
"This is very confusing because if the capitalization were\n"
"identical then one of the methods would override the other. From the "
"existence of other methods, it\n"
"seems that the existence of both of these methods is intentional, but is "
"sure is confusing.\n"
"You should try hard to eliminate one of them, unless you are forced to "
"have both due to frozen APIs.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1005
msgid "<a id='NM_WRONG_PACKAGE_INTENTIONAL'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1010
msgid ""
"Nm: Method doesn't override method in superclass due to wrong package for"
" parameter (NM_WRONG_PACKAGE_INTENTIONAL)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1012
msgid ""
"  <p> The method in the subclass doesn't override a similar method in a "
"superclass because the type of a parameter doesn't exactly match\n"
"the type of the corresponding parameter in the superclass. For example, "
"if you have:</p>\n"
"<pre><code>import alpha.Foo;\n"
"\n"
"public class A {\n"
"    public int f(Foo x) { return 17; }\n"
"}\n"
"----\n"
"import beta.Foo;\n"
"\n"
"public class B extends A {\n"
"    public int f(Foo x) { return 42; }\n"
"    public int f(alpha.Foo x) { return 27; }\n"
"}\n"
"</code></pre>\n"
"<p>The <code>f(Foo)</code> method defined in class <code>B</code> doesn't"
"\n"
"override the\n"
"<code>f(Foo)</code> method defined in class <code>A</code>, because the "
"argument\n"
"types are <code>Foo</code>'s from different packages.\n"
"</p>\n"
"\n"
"<p>In this case, the subclass does define a method with a signature "
"identical to the method in the superclass,\n"
"so this is presumably understood. However, such methods are exceptionally"
" confusing. You should strongly consider\n"
"removing or deprecating the method with the similar but not identical "
"signature.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1043
msgid "<a id='NM_CONFUSING'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1048
msgid "Nm: Confusing method names (NM_CONFUSING)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1050
msgid ""
"<p> The referenced methods have names that differ only by "
"capitalization.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1057
msgid "<a id='NM_CLASS_NOT_EXCEPTION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1062
msgid ""
"Nm: Class is not derived from an Exception, even though it is named as "
"such (NM_CLASS_NOT_EXCEPTION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1064
msgid ""
"<p> This class is not derived from another exception, but ends with "
"'Exception'. This will\n"
"be confusing to users of this class.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1072
msgid "<a id='RR_NOT_CHECKED'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1077
msgid "RR: Method ignores results of InputStream.read() (RR_NOT_CHECKED)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1079
msgid ""
"<p> This method ignores the return value of one of the variants of\n"
"<code>java.io.InputStream.read()</code> which can return multiple "
"bytes.&nbsp;\n"
"If the return value is not checked, the caller will not be able to "
"correctly\n"
"handle the case where fewer bytes were read than the caller "
"requested.&nbsp;\n"
"This is a particularly insidious kind of bug, because in many programs,\n"
"reads from input streams usually do read the full amount of data "
"requested,\n"
"causing the program to fail only sporadically.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1092
msgid "<a id='SR_NOT_CHECKED'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1097
msgid "RR: Method ignores results of InputStream.skip() (SR_NOT_CHECKED)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1099
msgid ""
"<p> This method ignores the return value of\n"
"<code>java.io.InputStream.skip()</code> which can skip multiple "
"bytes.&nbsp;\n"
"If the return value is not checked, the caller will not be able to "
"correctly\n"
"handle the case where fewer bytes were skipped than the caller "
"requested.&nbsp;\n"
"This is a particularly insidious kind of bug, because in many programs,\n"
"skips from input streams usually do skip the full amount of data "
"requested,\n"
"causing the program to fail only sporadically. With Buffered streams, "
"however,\n"
"skip() will only skip data in the buffer, and will routinely fail to skip"
" the\n"
"requested number of bytes.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1114
msgid "<a id='SE_NO_SUITABLE_CONSTRUCTOR'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1119
msgid ""
"Se: Class is Serializable but its superclass doesn't define a void "
"constructor (SE_NO_SUITABLE_CONSTRUCTOR)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1121
msgid ""
"<p> This class implements the <code>Serializable</code> interface\n"
" and its superclass does not. When such an object is deserialized,\n"
" the fields of the superclass need to be initialized by\n"
" invoking the void constructor of the superclass.\n"
" Since the superclass does not have one,\n"
" serialization and deserialization will fail at runtime.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1133
msgid "<a id='SE_NO_SUITABLE_CONSTRUCTOR_FOR_EXTERNALIZATION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1138
msgid ""
"Se: Class is Externalizable but doesn't define a void constructor "
"(SE_NO_SUITABLE_CONSTRUCTOR_FOR_EXTERNALIZATION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1140
msgid ""
"<p> This class implements the <code>Externalizable</code> interface, but "
"does\n"
"not define a public void constructor. When Externalizable objects are "
"deserialized,\n"
" they first need to be constructed by invoking the public void\n"
" constructor. Since this class does not have one,\n"
" serialization and deserialization will fail at runtime.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1151
msgid "<a id='SE_COMPARATOR_SHOULD_BE_SERIALIZABLE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1156
msgid ""
"Se: Comparator doesn't implement Serializable "
"(SE_COMPARATOR_SHOULD_BE_SERIALIZABLE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1158
msgid ""
"  <p> This class implements the <code>Comparator</code> interface. You\n"
"should consider whether or not it should also implement the "
"<code>Serializable</code>\n"
"interface. If a comparator is used to construct an ordered collection\n"
"such as a <code>TreeMap</code>, then the <code>TreeMap</code>\n"
"will be serializable only if the comparator is also serializable.\n"
"As most comparators have little or no state, making them serializable\n"
"is generally easy and good defensive programming.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1172
msgid "<a id='SE_NO_SERIALVERSIONID'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1177
msgid ""
"SnVI: Class is Serializable, but doesn't define serialVersionUID "
"(SE_NO_SERIALVERSIONID)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1179
msgid ""
"<p> This class implements the <code>Serializable</code> interface, but "
"does\n"
"not define a <code>serialVersionUID</code> field.&nbsp;\n"
"A change as simple as adding a reference to a .class object\n"
"  will add synthetic fields to the class,\n"
" which will unfortunately change the implicit\n"
" serialVersionUID (e.g., adding a reference to <code>String.class</code>\n"
" will generate a static field <code>class$java$lang$String</code>).\n"
" Also, different source code to bytecode compilers may use different\n"
" naming conventions for synthetic variables generated for\n"
" references to class objects or inner classes.\n"
" To ensure interoperability of Serializable across versions,\n"
" consider adding an explicit serialVersionUID.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1197
msgid "<a id='SE_READ_RESOLVE_MUST_RETURN_OBJECT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1202
msgid ""
"Se: The readResolve method must be declared with a return type of Object."
" (SE_READ_RESOLVE_MUST_RETURN_OBJECT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1204
msgid ""
"  <p> In order for the readResolve method to be recognized by the "
"serialization\n"
"mechanism, it must be declared to have a return type of Object.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1213
msgid "<a id='SE_TRANSIENT_FIELD_NOT_RESTORED'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1218
msgid ""
"Se: Transient field that isn't set by deserialization. "
"(SE_TRANSIENT_FIELD_NOT_RESTORED)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1220
msgid ""
"  <p> This class contains a field that is updated at multiple places in "
"the class, thus it seems to be part of the state of the class. However, "
"since the field is marked as transient and not set in readObject or "
"readResolve, it will contain the default value in any\n"
"deserialized instance of the class.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1229
msgid "<a id='SE_NONFINAL_SERIALVERSIONID'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1234
msgid "Se: serialVersionUID isn't final (SE_NONFINAL_SERIALVERSIONID)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1236
msgid ""
"<p> This class defines a <code>serialVersionUID</code> field that is not "
"final.&nbsp;\n"
"The field should be made final\n"
" if it is intended to specify\n"
" the version UID for purposes of serialization.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1246
msgid "<a id='SE_NONSTATIC_SERIALVERSIONID'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1251
msgid "Se: serialVersionUID isn't static (SE_NONSTATIC_SERIALVERSIONID)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1253
msgid ""
"<p> This class defines a <code>serialVersionUID</code> field that is not "
"static.&nbsp;\n"
"The field should be made static\n"
" if it is intended to specify\n"
" the version UID for purposes of serialization.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1263
msgid "<a id='SE_NONLONG_SERIALVERSIONID'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1268
msgid "Se: serialVersionUID isn't long (SE_NONLONG_SERIALVERSIONID)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1270
msgid ""
"<p> This class defines a <code>serialVersionUID</code> field that is not "
"long.&nbsp;\n"
"The field should be made long\n"
" if it is intended to specify\n"
" the version UID for purposes of serialization.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1280
msgid "<a id='SE_BAD_FIELD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1285
msgid ""
"Se: Non-transient non-serializable instance field in serializable class "
"(SE_BAD_FIELD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1287
msgid ""
"<p> This Serializable class defines a non-primitive instance field which "
"is neither transient,\n"
"Serializable, or <code>java.lang.Object</code>, and does not appear to "
"implement\n"
"the <code>Externalizable</code> interface or the\n"
"<code>readObject()</code> and <code>writeObject()</code> methods.&nbsp;\n"
"Objects of this class will not be deserialized correctly if a non-"
"Serializable\n"
"object is stored in this field.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1299
msgid "<a id='SE_INNER_CLASS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1304
msgid "Se: Serializable inner class (SE_INNER_CLASS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1306
msgid ""
"<p> This Serializable class is an inner class.  Any attempt to serialize\n"
"it will also serialize the associated outer instance. The outer instance "
"is serializable,\n"
"so this won't fail, but it might serialize a lot more data than intended."
"\n"
"If possible, making the inner class a static inner class (also known as a"
" nested class) should solve the\n"
"problem."
msgstr ""

#: ../../generated/bugDescriptionList.inc:1317
msgid "<a id='SE_BAD_FIELD_INNER_CLASS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1322
msgid ""
"Se: Non-serializable class has a serializable inner class "
"(SE_BAD_FIELD_INNER_CLASS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1324
msgid ""
"<p> This Serializable class is an inner class of a non-serializable "
"class.\n"
"Thus, attempts to serialize it will also attempt to associate instance of"
" the outer\n"
"class with which it is associated, leading to a runtime error.\n"
"</p>\n"
"<p>If possible, making the inner class a static inner class should solve "
"the\n"
"problem. Making the outer class serializable might also work, but that "
"would\n"
"mean serializing an instance of the inner class would always also "
"serialize the instance\n"
"of the outer class, which it often not what you really want."
msgstr ""

#: ../../generated/bugDescriptionList.inc:1338
msgid "<a id='SE_BAD_FIELD_STORE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1343
msgid ""
"Se: Non-serializable value stored into instance field of a serializable "
"class (SE_BAD_FIELD_STORE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1345
msgid ""
"<p> A non-serializable value is stored into a non-transient field\n"
"of a serializable class.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1353
msgid "<a id='RV_RETURN_VALUE_IGNORED_BAD_PRACTICE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1358
msgid ""
"RV: Method ignores exceptional return value "
"(RV_RETURN_VALUE_IGNORED_BAD_PRACTICE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1360
msgid ""
"   <p> This method returns a value that is not checked. The return value "
"should be checked\n"
"since it can indicate an unusual or unexpected function execution. For\n"
"example, the <code>File.delete()</code> method returns false\n"
"if the file could not be successfully deleted (rather than\n"
"throwing an Exception).\n"
"If you don't check the result, you won't notice if the method invocation\n"
"signals unexpected behavior by returning an atypical return value.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1374
msgid "<a id='NP_TOSTRING_COULD_RETURN_NULL'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1379
msgid "NP: toString method may return null (NP_TOSTRING_COULD_RETURN_NULL)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1381
msgid ""
"  <p>\n"
"This toString method seems to return null in some circumstances. A "
"liberal reading of the\n"
"spec could be interpreted as allowing this, but it is probably a bad idea"
" and could cause\n"
"other code to break. Return the empty string or some other appropriate "
"string rather than null.\n"
"  </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1392
msgid "<a id='NP_CLONE_COULD_RETURN_NULL'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1397
msgid "NP: Clone method may return null (NP_CLONE_COULD_RETURN_NULL)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1399
msgid ""
"  <p>\n"
"This clone method seems to return null in some circumstances, but clone "
"is never\n"
"allowed to return a null value.  If you are convinced this path is "
"unreachable, throw an AssertionError\n"
"instead.\n"
"  </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1410
msgid "<a id='OS_OPEN_STREAM'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1415
msgid "OS: Method may fail to close stream (OS_OPEN_STREAM)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1417
msgid ""
"<p> The method creates an IO stream object, does not assign it to any\n"
"fields, pass it to other methods that might close it,\n"
"or return it, and does not appear to close\n"
"the stream on all paths out of the method.&nbsp; This may result in\n"
"a file descriptor leak.&nbsp; It is generally a good\n"
"idea to use a <code>finally</code> block to ensure that streams are\n"
"closed.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1430
msgid "<a id='OS_OPEN_STREAM_EXCEPTION_PATH'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1435
msgid ""
"OS: Method may fail to close stream on exception "
"(OS_OPEN_STREAM_EXCEPTION_PATH)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1437
msgid ""
"<p> The method creates an IO stream object, does not assign it to any\n"
"fields, pass it to other methods, or return it, and does not appear to "
"close\n"
"it on all possible exception paths out of the method.&nbsp;\n"
"This may result in a file descriptor leak.&nbsp; It is generally a good\n"
"idea to use a <code>finally</code> block to ensure that streams are\n"
"closed.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1449
msgid "<a id='RC_REF_COMPARISON_BAD_PRACTICE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1454
msgid ""
"RC: Suspicious reference comparison to constant "
"(RC_REF_COMPARISON_BAD_PRACTICE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1456
msgid ""
"<p> This method compares a reference value to a constant using the == or "
"!= operator,\n"
"where the correct way to compare instances of this type is generally\n"
"with the equals() method.\n"
"It is possible to create distinct instances that are equal but do not "
"compare as == since\n"
"they are different objects.\n"
"Examples of classes which should generally\n"
"not be compared by reference are java.lang.Integer, java.lang.Float, "
"etc.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1469
msgid "<a id='RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1474
msgid ""
"RC: Suspicious reference comparison of Boolean values "
"(RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1476
msgid ""
"<p> This method compares two Boolean values using the == or != operator.\n"
"Normally, there are only two Boolean values (Boolean.TRUE and "
"Boolean.FALSE),\n"
"but it is possible to create other Boolean objects using the <code>new "
"Boolean(b)</code>\n"
"constructor. It is best to avoid such objects, but if they do exist,\n"
"then checking Boolean objects for equality using == or != will give "
"results\n"
"than are different than you would get using <code>.equals(...)</code>.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1489
msgid "<a id='VA_FORMAT_STRING_USES_NEWLINE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1494
msgid ""
"FS: Format string should use %n rather than \\n "
"(VA_FORMAT_STRING_USES_NEWLINE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1496
msgid ""
"<p>\n"
"This format string includes a newline character (\\n). In format strings,"
" it is generally\n"
" preferable to use %n, which will produce the platform-specific line "
"separator.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1506
msgid "<a id='BIT_SIGNED_CHECK'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1511
msgid "BIT: Check for sign of bitwise operation (BIT_SIGNED_CHECK)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1513
msgid ""
"<p> This method compares an expression such as\n"
"<code>((event.detail &amp; SWT.SELECTED) &gt; 0)</code>.\n"
"Using bit arithmetic and then comparing with the greater than operator "
"can\n"
"lead to unexpected results (of course depending on the value of\n"
"SWT.SELECTED). If SWT.SELECTED is a negative number, this is a candidate\n"
"for a bug. Even when SWT.SELECTED is not negative, it seems good practice"
"\n"
"to use '!= 0' instead of '&gt; 0'.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1527
msgid "<a id='ODR_OPEN_DATABASE_RESOURCE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1532
msgid ""
"ODR: Method may fail to close database resource "
"(ODR_OPEN_DATABASE_RESOURCE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1534
msgid ""
"<p> The method creates a database resource (such as a database connection"
"\n"
"or row set), does not assign it to any\n"
"fields, pass it to other methods, or return it, and does not appear to "
"close\n"
"the object on all paths out of the method.&nbsp; Failure to\n"
"close database resources on all paths out of a method may\n"
"result in poor performance, and could cause the application to\n"
"have problems communicating with the database.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1548
msgid "<a id='ODR_OPEN_DATABASE_RESOURCE_EXCEPTION_PATH'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1553
msgid ""
"ODR: Method may fail to close database resource on exception "
"(ODR_OPEN_DATABASE_RESOURCE_EXCEPTION_PATH)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1555
msgid ""
"<p> The method creates a database resource (such as a database connection"
"\n"
"or row set), does not assign it to any\n"
"fields, pass it to other methods, or return it, and does not appear to "
"close\n"
"the object on all exception paths out of the method.&nbsp; Failure to\n"
"close database resources on all paths out of a method may\n"
"result in poor performance, and could cause the application to\n"
"have problems communicating with the database.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1568
msgid "<a id='ISC_INSTANTIATE_STATIC_CLASS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1573
msgid ""
"ISC: Needless instantiation of class that only supplies static methods "
"(ISC_INSTANTIATE_STATIC_CLASS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1575
msgid ""
"<p> This class allocates an object that is based on a class that only "
"supplies static methods. This object\n"
"does not need to be created, just access the static methods directly "
"using the class name as a qualifier.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1583
msgid "<a id='DMI_RANDOM_USED_ONLY_ONCE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1588
msgid "DMI: Random object created and used only once (DMI_RANDOM_USED_ONLY_ONCE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1590
msgid ""
"<p> This code creates a java.util.Random object, uses it to generate one "
"random number, and then discards\n"
"the Random object. This produces mediocre quality random numbers and is "
"inefficient.\n"
"If possible, rewrite the code so that the Random object is created once "
"and saved, and each time a new random number\n"
"is required invoke a method on the existing Random object to obtain it.\n"
"</p>\n"
"\n"
"<p>If it is important that the generated Random numbers not be guessable,"
" you <em>must</em> not create a new Random for each random\n"
"number; the values are too easily guessable. You should strongly consider"
" using a java.security.SecureRandom instead\n"
"(and avoid allocating a new SecureRandom for each random number needed).\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1606
msgid "<a id='BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1611
msgid ""
"BC: Equals method should not assume anything about the type of its "
"argument (BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1613
msgid ""
"<p>\n"
"The <code>equals(Object o)</code> method shouldn't make any assumptions\n"
"about the type of <code>o</code>. It should simply return\n"
"false if <code>o</code> is not the same type as <code>this</code>.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1624
msgid "<a id='J2EE_STORE_OF_NON_SERIALIZABLE_OBJECT_INTO_SESSION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1629
msgid ""
"J2EE: Store of non serializable object into HttpSession "
"(J2EE_STORE_OF_NON_SERIALIZABLE_OBJECT_INTO_SESSION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1631
msgid ""
"<p>\n"
"This code seems to be storing a non-serializable object into an "
"HttpSession.\n"
"If this session is passivated or migrated, an error will result.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1641
msgid "<a id='GC_UNCHECKED_TYPE_IN_GENERIC_CALL'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1646
msgid "GC: Unchecked type in generic call (GC_UNCHECKED_TYPE_IN_GENERIC_CALL)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1648
msgid ""
" <p> This call to a generic collection method passes an argument\n"
"while compile type Object where a specific type from\n"
"the generic type parameters is expected.\n"
"Thus, neither the standard Java type system nor static analysis\n"
"can provide useful information on whether the\n"
"object being passed as a parameter is of an appropriate type.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1661
msgid "<a id='PZ_DONT_REUSE_ENTRY_OBJECTS_IN_ITERATORS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1666
msgid ""
"PZ: Don't reuse entry objects in iterators "
"(PZ_DONT_REUSE_ENTRY_OBJECTS_IN_ITERATORS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1668
msgid ""
" <p> The entrySet() method is allowed to return a view of the\n"
" underlying Map in which an Iterator and Map.Entry. This clever\n"
" idea was used in several Map implementations, but introduces the "
"possibility\n"
" of nasty coding mistakes. If a map <code>m</code> returns\n"
" such an iterator for an entrySet, then\n"
" <code>c.addAll(m.entrySet())</code> will go badly wrong. All of\n"
" the Map implementations in OpenJDK 1.7 have been rewritten to avoid "
"this,\n"
" you should to.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1683
msgid "<a id='DMI_ENTRY_SETS_MAY_REUSE_ENTRY_OBJECTS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1688
msgid ""
"DMI: Adding elements of an entry set may fail due to reuse of Entry "
"objects (DMI_ENTRY_SETS_MAY_REUSE_ENTRY_OBJECTS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1690
msgid ""
" <p> The entrySet() method is allowed to return a view of the\n"
" underlying Map in which a single Entry object is reused and returned\n"
" during the iteration.  As of Java 1.6, both IdentityHashMap\n"
" and EnumMap did so. When iterating through such a Map,\n"
" the Entry value is only valid until you advance to the next iteration.\n"
" If, for example, you try to pass such an entrySet to an addAll method,\n"
" things will go badly wrong.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1704
msgid "<a id='DMI_USING_REMOVEALL_TO_CLEAR_COLLECTION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1709
msgid ""
"DMI: Don't use removeAll to clear a collection "
"(DMI_USING_REMOVEALL_TO_CLEAR_COLLECTION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1711
msgid ""
"     <p> If you want to remove all elements from a collection "
"<code>c</code>, use <code>c.clear</code>,\n"
"not <code>c.removeAll(c)</code>. Calling  <code>c.removeAll(c)</code> to "
"clear a collection\n"
"is less clear, susceptible to errors from typos, less efficient and\n"
"for some collections, might throw a "
"<code>ConcurrentModificationException</code>.\n"
"    </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1723
msgid "Correctness (CORRECTNESS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1725
msgid ""
"Probable bug - an apparent coding mistake resulting in code that was "
"probably not what the developer intended. We strive for a low false "
"positive rate."
msgstr ""

#: ../../generated/bugDescriptionList.inc:1730
msgid "<a id='OVERRIDING_METHODS_MUST_INVOKE_SUPER'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1735
msgid ""
"CN: Super method is annotated with @OverridingMethodsMustInvokeSuper, but"
" the overriding method isn't calling the super method. "
"(OVERRIDING_METHODS_MUST_INVOKE_SUPER)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1737
msgid ""
"<p>Super method is annotated with @OverridingMethodsMustInvokeSuper, but "
"the overriding method isn't calling the super method.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1744
msgid "<a id='NP_OPTIONAL_RETURN_NULL'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1749
msgid ""
"NP: Method with Optional return type returns explicit null "
"(NP_OPTIONAL_RETURN_NULL)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1751
msgid ""
"   <p>\n"
"The usage of Optional return type (java.util.Optional or "
"com.google.common.base.Optional)\n"
"always means that explicit null returns were not desired by design.\n"
"Returning a null value in such case is a contract violation and will most"
" likely break client code.\n"
"   </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1762
msgid "<a id='NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1767
msgid ""
"NP: Non-null field is not initialized "
"(NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1769
msgid ""
"   <p> The field is marked as non-null, but isn't written to by the "
"constructor.\n"
"The field might be initialized elsewhere during constructor, or might "
"always\n"
"be initialized before use.\n"
"   </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1779
msgid "<a id='VR_UNRESOLVABLE_REFERENCE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1784
msgid ""
"VR: Class makes reference to unresolvable class or method "
"(VR_UNRESOLVABLE_REFERENCE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1786
msgid ""
"  <p>\n"
"  This class makes a reference to a class or method that can not be\n"
"resolved using against the libraries it is being analyzed with.\n"
"  </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1796
msgid "<a id='IL_INFINITE_LOOP'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1801
msgid "IL: An apparent infinite loop (IL_INFINITE_LOOP)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1803
msgid ""
"<p>This loop doesn't seem to have a way to terminate (other than by "
"perhaps\n"
"throwing an exception).</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1811
msgid "<a id='IO_APPENDING_TO_OBJECT_OUTPUT_STREAM'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1816
msgid ""
"IO: Doomed attempt to append to an object output stream "
"(IO_APPENDING_TO_OBJECT_OUTPUT_STREAM)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1818
msgid ""
" <p>\n"
"This code opens a file in append mode and then wraps the result in an "
"object output stream.\n"
"This won't allow you to append to an existing object output stream stored"
" in a file. If you want to be\n"
"able to append to an object output stream, you need to keep the object "
"output stream open.\n"
" </p>\n"
" <p>The only situation in which opening a file in append mode and the "
"writing an object output stream\n"
" could work is if on reading the file you plan to open it in random "
"access mode and seek to the byte offset\n"
" where the append started.\n"
" </p>\n"
"\n"
" <p>\n"
" TODO: example.\n"
" </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1837
msgid "<a id='IL_INFINITE_RECURSIVE_LOOP'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1842
msgid "IL: An apparent infinite recursive loop (IL_INFINITE_RECURSIVE_LOOP)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1844
msgid ""
"<p>This method unconditionally invokes itself. This would seem to "
"indicate\n"
"an infinite recursive loop that will result in a stack overflow.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1852
msgid "<a id='IL_CONTAINER_ADDED_TO_ITSELF'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1857
msgid "IL: A collection is added to itself (IL_CONTAINER_ADDED_TO_ITSELF)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1859
msgid ""
"<p>A collection is added to itself. As a result, computing the hashCode "
"of this\n"
"set will throw a StackOverflowException.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1868
msgid "<a id='RpC_REPEATED_CONDITIONAL_TEST'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1873
msgid "RpC: Repeated conditional tests (RpC_REPEATED_CONDITIONAL_TEST)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1875
msgid ""
"<p>The code contains a conditional test is performed twice, one right "
"after the other\n"
"(e.g., <code>x == 0 || x == 0</code>). Perhaps the second occurrence is "
"intended to be something else\n"
"(e.g., <code>x == 0 || y == 0</code>).\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1885
msgid "<a id='FL_MATH_USING_FLOAT_PRECISION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1890
msgid ""
"FL: Method performs math using floating point precision "
"(FL_MATH_USING_FLOAT_PRECISION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1892
msgid ""
"<p>\n"
"   The method performs math operations using floating point precision.\n"
"   Floating point precision is very imprecise. For example,\n"
"   16777216.0f + 1.0f = 16777216.0f. Consider using double math "
"instead.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1902
msgid "<a id='CAA_COVARIANT_ARRAY_ELEMENT_STORE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1907
msgid ""
"CAA: Possibly incompatible element is stored in covariant array "
"(CAA_COVARIANT_ARRAY_ELEMENT_STORE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1909
msgid ""
"<p>Value is stored into the array and the value type doesn't match the "
"array type.\n"
"It's known from the analysis that actual array type is narrower than the "
"declared type of its variable or field\n"
"and this assignment doesn't satisfy the original array type. This "
"assignment may cause ArrayStoreException\n"
"at runtime.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1920
msgid "<a id='DMI_VACUOUS_CALL_TO_EASYMOCK_METHOD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1925
msgid ""
"Dm: Useless/vacuous call to EasyMock method "
"(DMI_VACUOUS_CALL_TO_EASYMOCK_METHOD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1927
msgid ""
"    <p>This call doesn't pass any objects to the EasyMock method, so the "
"call doesn't do anything.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1936
msgid ""
"<a "
"id='DMI_FUTILE_ATTEMPT_TO_CHANGE_MAXPOOL_SIZE_OF_SCHEDULED_THREAD_POOL_EXECUTOR'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1941
msgid ""
"Dm: Futile attempt to change max pool size of ScheduledThreadPoolExecutor"
" "
"(DMI_FUTILE_ATTEMPT_TO_CHANGE_MAXPOOL_SIZE_OF_SCHEDULED_THREAD_POOL_EXECUTOR)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1943
msgid ""
"    <p>(<a "
"href=\"http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/ScheduledThreadPoolExecutor.html\">Javadoc</a>)"
"\n"
"While ScheduledThreadPoolExecutor inherits from ThreadPoolExecutor, a few"
" of the inherited tuning methods are not useful for it. In particular, "
"because it acts as a fixed-sized pool using corePoolSize threads and an "
"unbounded queue, adjustments to maximumPoolSize have no useful effect.\n"
"    </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1953
msgid "<a id='DMI_BIGDECIMAL_CONSTRUCTED_FROM_DOUBLE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1958
msgid ""
"DMI: BigDecimal constructed from double that isn't represented precisely "
"(DMI_BIGDECIMAL_CONSTRUCTED_FROM_DOUBLE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1960
msgid ""
"    <p>\n"
"This code creates a BigDecimal from a double value that doesn't translate"
" well to a\n"
"decimal number.\n"
"For example, one might assume that writing new BigDecimal(0.1) in Java "
"creates a BigDecimal which is exactly equal to 0.1 (an unscaled value of "
"1, with a scale of 1), but it is actually equal to "
"0.1000000000000000055511151231257827021181583404541015625.\n"
"You probably want to use the BigDecimal.valueOf(double d) method, which "
"uses the String representation\n"
"of the double to create the BigDecimal (e.g., BigDecimal.valueOf(0.1) "
"gives 0.1).\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1974
msgid "<a id='DMI_SCHEDULED_THREAD_POOL_EXECUTOR_WITH_ZERO_CORE_THREADS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1979
msgid ""
"Dm: Creation of ScheduledThreadPoolExecutor with zero core threads "
"(DMI_SCHEDULED_THREAD_POOL_EXECUTOR_WITH_ZERO_CORE_THREADS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1981
#, python-format
msgid ""
"    <p>(<a "
"href=\"http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/ScheduledThreadPoolExecutor.html#ScheduledThreadPoolExecutor%28int%29\">Javadoc</a>)"
"\n"
"A ScheduledThreadPoolExecutor with zero core threads will never execute "
"anything; changes to the max pool size are ignored.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1991
msgid "<a id='DMI_ANNOTATION_IS_NOT_VISIBLE_TO_REFLECTION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1996
msgid ""
"Dm: Can't use reflection to check for presence of annotation without "
"runtime retention (DMI_ANNOTATION_IS_NOT_VISIBLE_TO_REFLECTION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:1998
msgid ""
"  <p> Unless an annotation has itself been annotated with  "
"@Retention(RetentionPolicy.RUNTIME), the annotation can't be observed "
"using reflection\n"
"(e.g., by using the isAnnotationPresent method).\n"
"   .</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2007
msgid "<a id='NP_ARGUMENT_MIGHT_BE_NULL'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2012
msgid "NP: Method does not check for null argument (NP_ARGUMENT_MIGHT_BE_NULL)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2014
msgid ""
"  <p>\n"
"A parameter to this method has been identified as a value that should\n"
"always be checked to see whether or not it is null, but it is being "
"dereferenced\n"
"without a preceding null check.\n"
"  </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2025
msgid "<a id='RV_ABSOLUTE_VALUE_OF_RANDOM_INT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2030
msgid ""
"RV: Bad attempt to compute absolute value of signed random integer "
"(RV_ABSOLUTE_VALUE_OF_RANDOM_INT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2032
msgid ""
"<p> This code generates a random signed integer and then computes\n"
"the absolute value of that random integer.  If the number returned by the"
" random number\n"
"generator is <code>Integer.MIN_VALUE</code>, then the result will be "
"negative as well (since\n"
"<code>Math.abs(Integer.MIN_VALUE) == Integer.MIN_VALUE</code>). (Same "
"problem arises for long values as well).\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2043
msgid "<a id='RV_ABSOLUTE_VALUE_OF_HASHCODE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2048
msgid ""
"RV: Bad attempt to compute absolute value of signed 32-bit hashcode "
"(RV_ABSOLUTE_VALUE_OF_HASHCODE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2050
msgid ""
"<p> This code generates a hashcode and then computes\n"
"the absolute value of that hashcode.  If the hashcode\n"
"is <code>Integer.MIN_VALUE</code>, then the result will be negative as "
"well (since\n"
"<code>Math.abs(Integer.MIN_VALUE) == Integer.MIN_VALUE</code>).\n"
"</p>\n"
"<p>One out of 2^32 strings have a hashCode of Integer.MIN_VALUE,\n"
"including \"polygenelubricants\" \"GydZG_\" and \"\"DESIGNING "
"WORKHOUSES\".\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2064
msgid "<a id='RV_01_TO_INT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2069
msgid "RV: Random value from 0 to 1 is coerced to the integer 0 (RV_01_TO_INT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2071
msgid ""
"  <p>A random value from 0 to 1 is being coerced to the integer value 0. "
"You probably\n"
"want to multiply the random value by something else before coercing it to"
" an integer, or use the <code>Random.nextInt(n)</code> method.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2080
msgid "<a id='DM_INVALID_MIN_MAX'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2085
msgid "Dm: Incorrect combination of Math.max and Math.min (DM_INVALID_MIN_MAX)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2087
msgid ""
"<p>This code tries to limit the value bounds using the construct like "
"Math.min(0, Math.max(100, value)). However the order of\n"
"the constants is incorrect: it should be Math.min(100, Math.max(0, "
"value)). As the result this code always produces the same result\n"
"(or NaN if the value is NaN).</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2096
msgid "<a id='EQ_COMPARING_CLASS_NAMES'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2101
msgid ""
"Eq: equals method compares class names rather than class objects "
"(EQ_COMPARING_CLASS_NAMES)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2103
msgid ""
"  <p> This method checks to see if two objects are the same class by "
"checking to see if the names\n"
"of their classes are equal. You can have different classes with the same "
"name if they are loaded by\n"
"different class loaders. Just check to see if the class objects are the "
"same.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2113
msgid "<a id='EQ_ALWAYS_TRUE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2118
msgid "Eq: equals method always returns true (EQ_ALWAYS_TRUE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2120
msgid ""
"  <p> This class defines an equals method that always returns true. This "
"is imaginative, but not very smart.\n"
"Plus, it means that the equals method is not symmetric.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2129
msgid "<a id='EQ_ALWAYS_FALSE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2134
msgid "Eq: equals method always returns false (EQ_ALWAYS_FALSE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2136
msgid ""
"  <p> This class defines an equals method that always returns false. This"
" means that an object is not equal to itself, and it is impossible to "
"create useful Maps or Sets of this class. More fundamentally, it means\n"
"that equals is not reflexive, one of the requirements of the equals "
"method.</p>\n"
"<p>The likely intended semantics are object identity: that an object is "
"equal to itself. This is the behavior inherited from class "
"<code>Object</code>. If you need to override an equals inherited from a "
"different\n"
"superclass, you can use:</p>\n"
"<pre><code>public boolean equals(Object o) {\n"
"    return this == o;\n"
"}\n"
"</code></pre>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2150
msgid "<a id='EQ_OVERRIDING_EQUALS_NOT_SYMMETRIC'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2155
msgid ""
"Eq: equals method overrides equals in superclass and may not be symmetric"
" (EQ_OVERRIDING_EQUALS_NOT_SYMMETRIC)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2157
msgid ""
"  <p> This class defines an equals method that overrides an equals method"
" in a superclass. Both equals methods\n"
"use <code>instanceof</code> in the determination of whether two objects "
"are equal. This is fraught with peril,\n"
"since it is important that the equals method is symmetrical (in other "
"words, <code>a.equals(b) == b.equals(a)</code>).\n"
"If B is a subtype of A, and A's equals method checks that the argument is"
" an instanceof A, and B's equals method\n"
"checks that the argument is an instanceof B, it is quite likely that the "
"equivalence relation defined by these\n"
"methods is not symmetric.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2170
msgid "<a id='EQ_DONT_DEFINE_EQUALS_FOR_ENUM'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2175
msgid ""
"Eq: Covariant equals() method defined for enum "
"(EQ_DONT_DEFINE_EQUALS_FOR_ENUM)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2177
msgid ""
"  <p> This class defines an enumeration, and equality on enumerations are"
" defined\n"
"using object identity. Defining a covariant equals method for an "
"enumeration\n"
"value is exceptionally bad practice, since it would likely result\n"
"in having two different enumeration values that compare as equals using\n"
"the covariant enum method, and as not equal when compared normally.\n"
"Don't do it.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2190
msgid "<a id='EQ_SELF_USE_OBJECT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2195
msgid ""
"Eq: Covariant equals() method defined, Object.equals(Object) inherited "
"(EQ_SELF_USE_OBJECT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2197
msgid ""
"<p> This class defines a covariant version of the <code>equals()</code>\n"
"method, but inherits the normal <code>equals(Object)</code> method\n"
"defined in the base <code>java.lang.Object</code> class.&nbsp;\n"
"The class should probably define a <code>boolean equals(Object)</code> "
"method.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2208
msgid "<a id='EQ_OTHER_USE_OBJECT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2213
msgid ""
"Eq: equals() method defined that doesn't override Object.equals(Object) "
"(EQ_OTHER_USE_OBJECT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2215
msgid ""
"<p> This class defines an <code>equals()</code>\n"
"method, that doesn't override the normal <code>equals(Object)</code> "
"method\n"
"defined in the base <code>java.lang.Object</code> class.&nbsp;\n"
"The class should probably define a <code>boolean equals(Object)</code> "
"method.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2226
msgid "<a id='EQ_OTHER_NO_OBJECT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2231
msgid ""
"Eq: equals() method defined that doesn't override equals(Object) "
"(EQ_OTHER_NO_OBJECT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2233
msgid ""
"<p> This class defines an <code>equals()</code>\n"
"method, that doesn't override the normal <code>equals(Object)</code> "
"method\n"
"defined in the base <code>java.lang.Object</code> class.&nbsp; Instead, "
"it\n"
"inherits an <code>equals(Object)</code> method from a superclass.\n"
"The class should probably define a <code>boolean equals(Object)</code> "
"method.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2245
msgid "<a id='HE_SIGNATURE_DECLARES_HASHING_OF_UNHASHABLE_CLASS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2250
msgid ""
"HE: Signature declares use of unhashable class in hashed construct "
"(HE_SIGNATURE_DECLARES_HASHING_OF_UNHASHABLE_CLASS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2252
msgid ""
"  <p> A method, field or class declares a generic signature where a non-"
"hashable class\n"
"is used in context where a hashable class is required.\n"
"A class that declares an equals method but inherits a hashCode() method\n"
"from Object is unhashable, since it doesn't fulfill the requirement that\n"
"equal objects have equal hashCodes.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2264
msgid "<a id='HE_USE_OF_UNHASHABLE_CLASS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2269
msgid ""
"HE: Use of class without a hashCode() method in a hashed data structure "
"(HE_USE_OF_UNHASHABLE_CLASS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2271
msgid ""
"  <p> A class defines an equals(Object)  method but not a hashCode() "
"method,\n"
"and thus doesn't fulfill the requirement that equal objects have equal "
"hashCodes.\n"
"An instance of this class is used in a hash data structure, making the "
"need to\n"
"fix this problem of highest importance."
msgstr ""

#: ../../generated/bugDescriptionList.inc:2281
msgid "<a id='UR_UNINIT_READ'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2286
msgid "UR: Uninitialized read of field in constructor (UR_UNINIT_READ)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2288
msgid ""
"<p> This constructor reads a field which has not yet been assigned a "
"value.&nbsp;\n"
"This is often caused when the programmer mistakenly uses the field "
"instead\n"
"of one of the constructor's parameters.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2297
msgid "<a id='UR_UNINIT_READ_CALLED_FROM_SUPER_CONSTRUCTOR'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2302
msgid ""
"UR: Uninitialized read of field method called from constructor of "
"superclass (UR_UNINIT_READ_CALLED_FROM_SUPER_CONSTRUCTOR)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2304
msgid ""
"  <p> This method is invoked in the constructor of the superclass. At "
"this point,\n"
"    the fields of the class have not yet initialized.</p>\n"
"<p>To make this more concrete, consider the following classes:</p>\n"
"<pre><code>abstract class A {\n"
"    int hashCode;\n"
"    abstract Object getValue();\n"
"\n"
"    A() {\n"
"        hashCode = getValue().hashCode();\n"
"    }\n"
"}\n"
"\n"
"class B extends A {\n"
"    Object value;\n"
"\n"
"    B(Object v) {\n"
"        this.value = v;\n"
"    }\n"
"\n"
"    Object getValue() {\n"
"        return value;\n"
"    }\n"
"}\n"
"</code></pre>\n"
"<p>When a <code>B</code> is constructed,\n"
"the constructor for the <code>A</code> class is invoked\n"
"<em>before</em> the constructor for <code>B</code> sets "
"<code>value</code>.\n"
"Thus, when the constructor for <code>A</code> invokes "
"<code>getValue</code>,\n"
"an uninitialized value is read for <code>value</code>.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2340
msgid "<a id='NM_VERY_CONFUSING'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2345
msgid "Nm: Very confusing method names (NM_VERY_CONFUSING)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2347
msgid ""
"  <p> The referenced methods have names that differ only by "
"capitalization.\n"
"This is very confusing because if the capitalization were\n"
"identical then one of the methods would override the other.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2357
msgid "<a id='NM_WRONG_PACKAGE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2362
msgid ""
"Nm: Method doesn't override method in superclass due to wrong package for"
" parameter (NM_WRONG_PACKAGE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2364
msgid ""
"  <p> The method in the subclass doesn't override a similar method in a "
"superclass because the type of a parameter doesn't exactly match\n"
"the type of the corresponding parameter in the superclass. For example, "
"if you have:</p>\n"
"<pre><code>import alpha.Foo;\n"
"\n"
"public class A {\n"
"    public int f(Foo x) { return 17; }\n"
"}\n"
"----\n"
"import beta.Foo;\n"
"\n"
"public class B extends A {\n"
"    public int f(Foo x) { return 42; }\n"
"}\n"
"</code></pre>\n"
"<p>The <code>f(Foo)</code> method defined in class <code>B</code> doesn't"
"\n"
"override the\n"
"<code>f(Foo)</code> method defined in class <code>A</code>, because the "
"argument\n"
"types are <code>Foo</code>'s from different packages.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2389
msgid "<a id='NM_METHOD_CONSTRUCTOR_CONFUSION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2394
msgid ""
"Nm: Apparent method/constructor confusion "
"(NM_METHOD_CONSTRUCTOR_CONFUSION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2396
msgid ""
"  <p> This regular method has the same name as the class it is defined "
"in. It is likely that this was intended to be a constructor.\n"
"      If it was intended to be a constructor, remove the declaration of a"
" void return value.\n"
"    If you had accidentally defined this method, realized the mistake, "
"defined a proper constructor\n"
"    but can't get rid of this method due to backwards compatibility, "
"deprecate the method.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2407
msgid "<a id='NM_LCASE_HASHCODE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2412
msgid "Nm: Class defines hashcode(); should it be hashCode()? (NM_LCASE_HASHCODE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2414
msgid ""
"<p> This class defines a method called <code>hashcode()</code>.&nbsp; "
"This method\n"
"does not override the <code>hashCode()</code> method in "
"<code>java.lang.Object</code>,\n"
"which is probably what was intended.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2423
msgid "<a id='NM_LCASE_TOSTRING'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2428
msgid "Nm: Class defines tostring(); should it be toString()? (NM_LCASE_TOSTRING)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2430
msgid ""
"<p> This class defines a method called <code>tostring()</code>.&nbsp; "
"This method\n"
"does not override the <code>toString()</code> method in "
"<code>java.lang.Object</code>,\n"
"which is probably what was intended.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2439
msgid "<a id='NM_BAD_EQUAL'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2444
msgid ""
"Nm: Class defines equal(Object); should it be equals(Object)? "
"(NM_BAD_EQUAL)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2446
msgid ""
"<p> This class defines a method <code>equal(Object)</code>.&nbsp; This "
"method does\n"
"not override the <code>equals(Object)</code> method in "
"<code>java.lang.Object</code>,\n"
"which is probably what was intended.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2455
msgid "<a id='SE_READ_RESOLVE_IS_STATIC'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2460
msgid ""
"Se: The readResolve method must not be declared as a static method. "
"(SE_READ_RESOLVE_IS_STATIC)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2462
msgid ""
"  <p> In order for the readResolve method to be recognized by the "
"serialization\n"
"mechanism, it must not be declared as a static method.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2471
msgid "<a id='SE_METHOD_MUST_BE_PRIVATE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2476
msgid ""
"Se: Method must be private in order for serialization to work "
"(SE_METHOD_MUST_BE_PRIVATE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2478
msgid ""
"<p> This class implements the <code>Serializable</code> interface, and "
"defines a method\n"
"for custom serialization/deserialization. But since that method isn't "
"declared private,\n"
"it will be silently ignored by the serialization/deserialization API.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2487
msgid "<a id='SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2492
msgid ""
"SF: Dead store due to switch statement fall through "
"(SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2494
msgid ""
"  <p> A value stored in the previous switch case is overwritten here due "
"to a switch fall through. It is likely that\n"
"    you forgot to put a break or return at the end of the previous case.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2503
msgid "<a id='SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH_TO_THROW'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2508
msgid ""
"SF: Dead store due to switch statement fall through to throw "
"(SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH_TO_THROW)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2510
msgid ""
"  <p> A value stored in the previous switch case is ignored here due to a"
" switch fall through to a place where\n"
"    an exception is thrown. It is likely that\n"
"    you forgot to put a break or return at the end of the previous case.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2520
msgid "<a id='NP_UNWRITTEN_FIELD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2525
msgid "NP: Read of unwritten field (NP_UNWRITTEN_FIELD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2527
msgid ""
"  <p> The program is dereferencing a field that does not seem to ever "
"have a non-null value written to it.\n"
"Unless the field is initialized via some mechanism not seen by the "
"analysis,\n"
"dereferencing this value will generate a null pointer exception.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2537
msgid "<a id='UWF_NULL_FIELD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2542
msgid "UwF: Field only ever set to null (UWF_NULL_FIELD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2544
msgid ""
"  <p> All writes to this field are of the constant value null, and thus\n"
"all reads of the field will return null.\n"
"Check for errors, or remove it if it is useless.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2553
msgid "<a id='UWF_UNWRITTEN_FIELD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2558
msgid "UwF: Unwritten field (UWF_UNWRITTEN_FIELD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2560
msgid ""
"  <p> This field is never written.&nbsp; All reads of it will return the "
"default\n"
"value. Check for errors (should it have been initialized?), or remove it "
"if it is useless.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2568
msgid "<a id='SIC_THREADLOCAL_DEADLY_EMBRACE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2573
msgid ""
"SIC: Deadly embrace of non-static inner class and thread local "
"(SIC_THREADLOCAL_DEADLY_EMBRACE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2575
msgid ""
"  <p> This class is an inner class, but should probably be a static inner"
" class.\n"
"  As it is, there is a serious danger of a deadly embrace between the "
"inner class\n"
"  and the thread local in the outer class. Because the inner class isn't "
"static,\n"
"  it retains a reference to the outer class.\n"
"  If the thread local contains a reference to an instance of the inner\n"
"  class, the inner and outer instance will both be reachable\n"
"  and not eligible for garbage collection.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2589
msgid "<a id='RANGE_ARRAY_INDEX'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2594
msgid "RANGE: Array index is out of bounds (RANGE_ARRAY_INDEX)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2596
msgid ""
"<p> Array operation is performed, but array index is out of bounds, which"
" will result in ArrayIndexOutOfBoundsException at runtime.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2603
msgid "<a id='RANGE_ARRAY_OFFSET'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2608
msgid "RANGE: Array offset is out of bounds (RANGE_ARRAY_OFFSET)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2610
msgid ""
"<p> Method is called with array parameter and offset parameter, but the "
"offset is out of bounds. This will result in IndexOutOfBoundsException at"
" runtime. </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2617
msgid "<a id='RANGE_ARRAY_LENGTH'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2622
msgid "RANGE: Array length is out of bounds (RANGE_ARRAY_LENGTH)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2624
msgid ""
"<p> Method is called with array parameter and length parameter, but the "
"length is out of bounds. This will result in IndexOutOfBoundsException at"
" runtime. </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2631
msgid "<a id='RANGE_STRING_INDEX'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2636
msgid "RANGE: String index is out of bounds (RANGE_STRING_INDEX)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2638
msgid ""
"<p> String method is called and specified string index is out of bounds. "
"This will result in StringIndexOutOfBoundsException at runtime. </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2645
msgid "<a id='RV_RETURN_VALUE_IGNORED'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2650
msgid "RV: Method ignores return value (RV_RETURN_VALUE_IGNORED)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2652
msgid ""
"   <p> The return value of this method should be checked. One common\n"
"cause of this warning is to invoke a method on an immutable object,\n"
"thinking that it updates the object. For example, in the following code\n"
"fragment,</p>\n"
"<pre><code>String dateString = getHeaderField(name);\n"
"dateString.trim();\n"
"</code></pre>\n"
"<p>the programmer seems to be thinking that the trim() method will update"
"\n"
"the String referenced by dateString. But since Strings are immutable, the"
" trim()\n"
"function returns a new String value, which is being ignored here. The "
"code\n"
"should be corrected to: </p>\n"
"<pre><code>String dateString = getHeaderField(name);\n"
"dateString = dateString.trim();\n"
"</code></pre>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2672
msgid "<a id='RV_EXCEPTION_NOT_THROWN'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2677
msgid ""
"RV: Exception created and dropped rather than thrown "
"(RV_EXCEPTION_NOT_THROWN)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2679
msgid ""
"   <p> This code creates an exception (or error) object, but doesn't do "
"anything with it. For example,\n"
"something like </p>\n"
"<pre><code>if (x &lt; 0) {\n"
"    new IllegalArgumentException(\"x must be nonnegative\");\n"
"}\n"
"</code></pre>\n"
"<p>It was probably the intent of the programmer to throw the created "
"exception:</p>\n"
"<pre><code>if (x &lt; 0) {\n"
"    throw new IllegalArgumentException(\"x must be nonnegative\");\n"
"}\n"
"</code></pre>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2696
msgid "<a id='RV_CHECK_COMPARETO_FOR_SPECIFIC_RETURN_VALUE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2701
msgid ""
"RV: Code checks for specific values returned by compareTo "
"(RV_CHECK_COMPARETO_FOR_SPECIFIC_RETURN_VALUE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2703
msgid ""
"   <p> This code invoked a compareTo or compare method, and checks to see"
" if the return value is a specific value,\n"
"such as 1 or -1. When invoking these methods, you should only check the "
"sign of the result, not for any specific\n"
"non-zero value. While many or most compareTo and compare methods only "
"return -1, 0 or 1, some of them\n"
"will return other values."
msgstr ""

#: ../../generated/bugDescriptionList.inc:2713
msgid "<a id='NP_ALWAYS_NULL'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2718
msgid "NP: Null pointer dereference (NP_ALWAYS_NULL)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2720
msgid ""
"<p> A null pointer is dereferenced here.&nbsp; This will lead to a\n"
"<code>NullPointerException</code> when the code is executed.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2728
msgid "<a id='NP_CLOSING_NULL'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2733
msgid "NP: close() invoked on a value that is always null (NP_CLOSING_NULL)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2735
msgid ""
"<p> close() is being invoked on a value that is always null. If this "
"statement is executed,\n"
"a null pointer exception will occur. But the big risk here you never "
"close\n"
"something that should be closed."
msgstr ""

#: ../../generated/bugDescriptionList.inc:2744
msgid "<a id='NP_STORE_INTO_NONNULL_FIELD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2749
msgid ""
"NP: Store of null value into field annotated @Nonnull "
"(NP_STORE_INTO_NONNULL_FIELD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2751
msgid ""
"<p> A value that could be null is stored into a field that has been "
"annotated as @Nonnull. </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2758
msgid "<a id='NP_ALWAYS_NULL_EXCEPTION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2763
msgid ""
"NP: Null pointer dereference in method on exception path "
"(NP_ALWAYS_NULL_EXCEPTION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2765
msgid ""
"<p> A pointer which is null on an exception path is dereferenced "
"here.&nbsp;\n"
"This will lead to a <code>NullPointerException</code> when the code is "
"executed.&nbsp;\n"
"Note that because SpotBugs currently does not prune infeasible exception "
"paths,\n"
"this may be a false warning.</p>\n"
"\n"
"<p> Also note that SpotBugs considers the default case of a switch "
"statement to\n"
"be an exception path, since the default case is often infeasible.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2778
msgid "<a id='NP_NULL_ON_SOME_PATH'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2783
msgid "NP: Possible null pointer dereference (NP_NULL_ON_SOME_PATH)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2785
msgid ""
"<p> There is a branch of statement that, <em>if executed,</em>  "
"guarantees that\n"
"a null value will be dereferenced, which\n"
"would generate a <code>NullPointerException</code> when the code is "
"executed.\n"
"Of course, the problem might be that the branch or statement is "
"infeasible and that\n"
"the null pointer exception can't ever be executed; deciding that is "
"beyond the ability of SpotBugs.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2797
msgid "<a id='NP_NULL_ON_SOME_PATH_EXCEPTION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2802
msgid ""
"NP: Possible null pointer dereference in method on exception path "
"(NP_NULL_ON_SOME_PATH_EXCEPTION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2804
msgid ""
"<p> A reference value which is null on some exception control path is\n"
"dereferenced here.&nbsp; This may lead to a "
"<code>NullPointerException</code>\n"
"when the code is executed.&nbsp;\n"
"Note that because SpotBugs currently does not prune infeasible exception "
"paths,\n"
"this may be a false warning.</p>\n"
"\n"
"<p> Also note that SpotBugs considers the default case of a switch "
"statement to\n"
"be an exception path, since the default case is often infeasible.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2818
msgid "<a id='NP_NULL_PARAM_DEREF'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2823
msgid "NP: Method call passes null for non-null parameter (NP_NULL_PARAM_DEREF)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2825
msgid ""
"  <p>\n"
"  This method call passes a null value for a non-null method parameter.\n"
"Either the parameter is annotated as a parameter that should\n"
"always be non-null, or analysis has shown that it will always be\n"
"dereferenced.\n"
"  </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2837
msgid "<a id='NP_NULL_PARAM_DEREF_NONVIRTUAL'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2842
msgid ""
"NP: Non-virtual method call passes null for non-null parameter "
"(NP_NULL_PARAM_DEREF_NONVIRTUAL)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2844
msgid ""
"  <p>\n"
"  A possibly-null value is passed to a non-null method parameter.\n"
"Either the parameter is annotated as a parameter that should\n"
"always be non-null, or analysis has shown that it will always be\n"
"dereferenced.\n"
"  </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2856
msgid "<a id='NP_NULL_PARAM_DEREF_ALL_TARGETS_DANGEROUS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2861
msgid ""
"NP: Method call passes null for non-null parameter "
"(NP_NULL_PARAM_DEREF_ALL_TARGETS_DANGEROUS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2863
msgid ""
"  <p>\n"
"  A possibly-null value is passed at a call site where all known\n"
"  target methods require the parameter to be non-null.\n"
"Either the parameter is annotated as a parameter that should\n"
"always be non-null, or analysis has shown that it will always be\n"
"dereferenced.\n"
"  </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2876
msgid "<a id='NP_NONNULL_PARAM_VIOLATION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2881
msgid ""
"NP: Method call passes null to a non-null parameter "
"(NP_NONNULL_PARAM_VIOLATION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2883
msgid ""
"  <p>\n"
"  This method passes a null value as the parameter of a method which\n"
"must be non-null. Either this parameter has been explicitly marked\n"
"as @Nonnull, or analysis has determined that this parameter is\n"
"always dereferenced.\n"
"  </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2895
msgid "<a id='NP_NONNULL_RETURN_VIOLATION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2900
msgid ""
"NP: Method may return null, but is declared @Nonnull "
"(NP_NONNULL_RETURN_VIOLATION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2902
msgid ""
"<p>\n"
"This method may return a null value, but the method (or a superclass "
"method\n"
"which it overrides) is declared to return @Nonnull.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2912
msgid "<a id='NP_GUARANTEED_DEREF'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2917
msgid "NP: Null value is guaranteed to be dereferenced (NP_GUARANTEED_DEREF)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2919
msgid ""
"      <p>\n"
"      There is a statement or branch that if executed guarantees that\n"
"      a value is null at this point, and that\n"
"      value that is guaranteed to be dereferenced\n"
"      (except on forward paths involving runtime exceptions).\n"
"      </p>\n"
"<p>Note that a check such as\n"
"    <code>if (x == null) throw new NullPointerException();</code>\n"
"    is treated as a dereference of <code>x</code>.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2934
msgid "<a id='NP_GUARANTEED_DEREF_ON_EXCEPTION_PATH'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2939
msgid ""
"NP: Value is null and guaranteed to be dereferenced on exception path "
"(NP_GUARANTEED_DEREF_ON_EXCEPTION_PATH)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2941
msgid ""
"<p>\n"
"There is a statement or branch on an exception path\n"
"  that if executed guarantees that\n"
"a value is null at this point, and that\n"
"value that is guaranteed to be dereferenced\n"
"(except on forward paths involving runtime exceptions).\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2954
msgid "<a id='DMI_ARGUMENTS_WRONG_ORDER'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2959
msgid "DMI: Reversed method arguments (DMI_ARGUMENTS_WRONG_ORDER)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2961
msgid ""
"<p> The arguments to this method call seem to be in the wrong order.\n"
"For example, a call <code>Preconditions.checkNotNull(\"message\", "
"message)</code>\n"
"has reserved arguments: the value to be checked is the first argument.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2971
msgid "<a id='RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2976
msgid ""
"RCN: Nullcheck of value previously dereferenced "
"(RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2978
msgid ""
"<p> A value is checked here to see whether it is null, but this value "
"can't\n"
"be null because it was previously dereferenced and if it were null a null"
" pointer\n"
"exception would have occurred at the earlier dereference.\n"
"Essentially, this code and the previous dereference\n"
"disagree as to whether this value is allowed to be null. Either the check"
" is redundant\n"
"or the previous dereference is erroneous.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2990
msgid "<a id='RC_REF_COMPARISON'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2995
msgid "RC: Suspicious reference comparison (RC_REF_COMPARISON)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:2997
msgid ""
"<p> This method compares two reference values using the == or != "
"operator,\n"
"where the correct way to compare instances of this type is generally\n"
"with the equals() method.\n"
"It is possible to create distinct instances that are equal but do not "
"compare as == since\n"
"they are different objects.\n"
"Examples of classes which should generally\n"
"not be compared by reference are java.lang.Integer, java.lang.Float, "
"etc.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3010
msgid "<a id='VA_PRIMITIVE_ARRAY_PASSED_TO_OBJECT_VARARG'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3015
msgid ""
"VA: Primitive array passed to function expecting a variable number of "
"object arguments (VA_PRIMITIVE_ARRAY_PASSED_TO_OBJECT_VARARG)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3017
msgid ""
"<p>\n"
"This code passes a primitive array to a function that takes a variable "
"number of object arguments.\n"
"This creates an array of length one to hold the primitive array and "
"passes it to the function.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3027
msgid "<a id='EC_UNRELATED_TYPES_USING_POINTER_EQUALITY'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3032
msgid ""
"EC: Using pointer equality to compare different types "
"(EC_UNRELATED_TYPES_USING_POINTER_EQUALITY)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3034
msgid ""
"<p> This method uses pointer equality to compare two references that seem"
" to be of\n"
"different types.  The result of this comparison will always be false at "
"runtime.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3043
msgid "<a id='EC_UNRELATED_TYPES'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3048
msgid "EC: Call to equals() comparing different types (EC_UNRELATED_TYPES)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3050
msgid ""
"<p> This method calls equals(Object) on two references of different\n"
"class types and analysis suggests they will be to objects of different "
"classes\n"
"at runtime. Further, examination of the equals methods that would be "
"invoked suggest that either\n"
"this call will always return false, or else the equals method is not be "
"symmetric (which is\n"
"a property required by the contract\n"
"for equals in class Object).\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3063
msgid "<a id='EC_ARRAY_AND_NONARRAY'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3068
msgid "EC: equals() used to compare array and nonarray (EC_ARRAY_AND_NONARRAY)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3070
msgid ""
"<p>\n"
"This method invokes the .equals(Object o) to compare an array and a "
"reference that doesn't seem\n"
"to be an array. If things being compared are of different types, they are"
" guaranteed to be unequal\n"
"and the comparison is almost certainly an error. Even if they are both "
"arrays, the equals method\n"
"on arrays only determines of the two arrays are the same object.\n"
"To compare the\n"
"contents of the arrays, use java.util.Arrays.equals(Object[], Object[]).\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3084
msgid "<a id='EC_NULL_ARG'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3089
msgid "EC: Call to equals(null) (EC_NULL_ARG)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3091
msgid ""
"<p> This method calls equals(Object), passing a null value as\n"
"the argument. According to the contract of the equals() method,\n"
"this call should always return <code>false</code>.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3100
msgid "<a id='EC_UNRELATED_INTERFACES'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3105
msgid ""
"EC: Call to equals() comparing different interface types "
"(EC_UNRELATED_INTERFACES)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3107
msgid ""
"<p> This method calls equals(Object) on two references of unrelated\n"
"interface types, where neither is a subtype of the other,\n"
"and there are no known non-abstract classes which implement both "
"interfaces.\n"
"Therefore, the objects being compared\n"
"are unlikely to be members of the same class at runtime\n"
"(unless some application classes were not analyzed, or dynamic class\n"
"loading can occur at runtime).\n"
"According to the contract of equals(),\n"
"objects of different\n"
"classes should always compare as unequal; therefore, according to the\n"
"contract defined by java.lang.Object.equals(Object),\n"
"the result of this comparison will always be false at runtime.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3126
msgid "<a id='EC_UNRELATED_CLASS_AND_INTERFACE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3131
msgid ""
"EC: Call to equals() comparing unrelated class and interface "
"(EC_UNRELATED_CLASS_AND_INTERFACE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3133
msgid ""
"<p>\n"
"This method calls equals(Object) on two references,  one of which is a "
"class\n"
"and the other an interface, where neither the class nor any of its\n"
"non-abstract subclasses implement the interface.\n"
"Therefore, the objects being compared\n"
"are unlikely to be members of the same class at runtime\n"
"(unless some application classes were not analyzed, or dynamic class\n"
"loading can occur at runtime).\n"
"According to the contract of equals(),\n"
"objects of different\n"
"classes should always compare as unequal; therefore, according to the\n"
"contract defined by java.lang.Object.equals(Object),\n"
"the result of this comparison will always be false at runtime.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3153
msgid "<a id='SA_LOCAL_SELF_ASSIGNMENT_INSTEAD_OF_FIELD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3158
msgid ""
"SA: Self assignment of local rather than assignment to field "
"(SA_LOCAL_SELF_ASSIGNMENT_INSTEAD_OF_FIELD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3160
msgid ""
"<p> This method contains a self assignment of a local variable, and there"
"\n"
"is a field with an identical name.\n"
"assignment appears to have been ; e.g.</p>\n"
"<pre><code>    int foo;\n"
"    public void setFoo(int foo) {\n"
"        foo = foo;\n"
"    }\n"
"</code></pre>\n"
"<p>The assignment is useless. Did you mean to assign to the field "
"instead?</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3175
msgid "<a id='INT_BAD_COMPARISON_WITH_INT_VALUE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3180
msgid ""
"INT: Bad comparison of int value with long constant "
"(INT_BAD_COMPARISON_WITH_INT_VALUE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3182
msgid ""
"<p> This code compares an int value with a long constant that is outside\n"
"the range of values that can be represented as an int value.\n"
"This comparison is vacuous and possibly incorrect.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3192
msgid "<a id='INT_BAD_COMPARISON_WITH_SIGNED_BYTE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3197
msgid "INT: Bad comparison of signed byte (INT_BAD_COMPARISON_WITH_SIGNED_BYTE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3199
msgid ""
"<p> Signed bytes can only have a value in the range -128 to 127. "
"Comparing\n"
"a signed byte with a value outside that range is vacuous and likely to be"
" incorrect.\n"
"To convert a signed byte <code>b</code> to an unsigned value in the range"
" 0..255,\n"
"use <code>0xff &amp; b</code>.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3210
msgid "<a id='INT_BAD_COMPARISON_WITH_NONNEGATIVE_VALUE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3215
msgid ""
"INT: Bad comparison of nonnegative value with negative constant or zero "
"(INT_BAD_COMPARISON_WITH_NONNEGATIVE_VALUE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3217
msgid ""
"<p> This code compares a value that is guaranteed to be non-negative with"
" a negative constant or zero.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3225
msgid "<a id='BIT_ADD_OF_SIGNED_BYTE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3230
msgid "BIT: Bitwise add of signed byte value (BIT_ADD_OF_SIGNED_BYTE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3232
msgid ""
"<p> Adds a byte value and a value which is known to have the 8 lower bits"
" clear.\n"
"Values loaded from a byte array are sign extended to 32 bits\n"
"before any bitwise operations are performed on the value.\n"
"Thus, if <code>b[0]</code> contains the value <code>0xff</code>, and\n"
"<code>x</code> is initially 0, then the code\n"
"<code>((x &lt;&lt; 8) + b[0])</code>  will sign extend <code>0xff</code>\n"
"to get <code>0xffffffff</code>, and thus give the value\n"
"<code>0xffffffff</code> as the result.\n"
"</p>\n"
"\n"
"<p>In particular, the following code for packing a byte array into an int"
" is badly wrong: </p>\n"
"<pre><code>int result = 0;\n"
"for(int i = 0; i &lt; 4; i++)\n"
"    result = ((result &lt;&lt; 8) + b[i]);\n"
"</code></pre>\n"
"<p>The following idiom will work instead: </p>\n"
"<pre><code>int result = 0;\n"
"for(int i = 0; i &lt; 4; i++)\n"
"    result = ((result &lt;&lt; 8) + (b[i] &amp; 0xff));\n"
"</code></pre>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3258
msgid "<a id='BIT_IOR_OF_SIGNED_BYTE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3263
msgid "BIT: Bitwise OR of signed byte value (BIT_IOR_OF_SIGNED_BYTE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3265
msgid ""
"<p> Loads a byte value (e.g., a value loaded from a byte array or "
"returned by a method\n"
"with return type byte)  and performs a bitwise OR with\n"
"that value. Byte values are sign extended to 32 bits\n"
"before any bitwise operations are performed on the value.\n"
"Thus, if <code>b[0]</code> contains the value <code>0xff</code>, and\n"
"<code>x</code> is initially 0, then the code\n"
"<code>((x &lt;&lt; 8) | b[0])</code>  will sign extend <code>0xff</code>\n"
"to get <code>0xffffffff</code>, and thus give the value\n"
"<code>0xffffffff</code> as the result.\n"
"</p>\n"
"\n"
"<p>In particular, the following code for packing a byte array into an int"
" is badly wrong: </p>\n"
"<pre><code>int result = 0;\n"
"for(int i = 0; i &lt; 4; i++) {\n"
"    result = ((result &lt;&lt; 8) | b[i]);\n"
"}\n"
"</code></pre>\n"
"<p>The following idiom will work instead: </p>\n"
"<pre><code>int result = 0;\n"
"for(int i = 0; i &lt; 4; i++) {\n"
"    result = ((result &lt;&lt; 8) | (b[i] &amp; 0xff));\n"
"}\n"
"</code></pre>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3294
msgid "<a id='BIT_SIGNED_CHECK_HIGH_BIT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3299
msgid ""
"BIT: Check for sign of bitwise operation involving negative number "
"(BIT_SIGNED_CHECK_HIGH_BIT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3301
msgid ""
"<p> This method compares a bitwise expression such as\n"
"<code>((val &amp; CONSTANT) &gt; 0)</code> where CONSTANT is the negative"
" number.\n"
"Using bit arithmetic and then comparing with the greater than operator "
"can\n"
"lead to unexpected results. This comparison is unlikely to work as "
"expected. The good practice is\n"
"to use '!= 0' instead of '&gt; 0'.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3313
msgid "<a id='BIT_AND'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3318
msgid "BIT: Incompatible bit masks (BIT_AND)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3320
msgid ""
"<p> This method compares an expression of the form (e &amp; C) to D,\n"
"which will always compare unequal\n"
"due to the specific values of constants C and D.\n"
"This may indicate a logic error or typo.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3330
msgid "<a id='BIT_AND_ZZ'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3335
msgid "BIT: Check to see if ((...) & 0) == 0 (BIT_AND_ZZ)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3337
msgid ""
"<p> This method compares an expression of the form <code>(e &amp; "
"0)</code> to 0,\n"
"which will always compare equal.\n"
"This may indicate a logic error or typo.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3346
msgid "<a id='BIT_IOR'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3351
msgid "BIT: Incompatible bit masks (BIT_IOR)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3353
msgid ""
"<p> This method compares an expression of the form <code>(e | C)</code> "
"to D.\n"
"which will always compare unequal\n"
"due to the specific values of constants C and D.\n"
"This may indicate a logic error or typo.</p>\n"
"\n"
"<p> Typically, this bug occurs because the code wants to perform\n"
"a membership test in a bit set, but uses the bitwise OR\n"
"operator (\"|\") instead of bitwise AND (\"&amp;\").</p>\n"
"\n"
"<p>Also such bug may appear in expressions like <code>(e &amp; A | B) == "
"C</code>\n"
"which is parsed like <code>((e &amp; A) | B) == C</code> while <code>(e "
"&amp; (A | B)) == C</code> was intended.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3370
msgid "<a id='SA_FIELD_SELF_ASSIGNMENT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3375
msgid "SA: Self assignment of field (SA_FIELD_SELF_ASSIGNMENT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3377
msgid ""
"<p> This method contains a self assignment of a field; e.g.\n"
"</p>\n"
"<pre><code>int x;\n"
"public void foo() {\n"
"    x = x;\n"
"}\n"
"</code></pre>\n"
"<p>Such assignments are useless, and may indicate a logic error or "
"typo.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3391
msgid "<a id='SA_FIELD_SELF_COMPUTATION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3396
msgid ""
"SA: Nonsensical self computation involving a field (e.g., x & x) "
"(SA_FIELD_SELF_COMPUTATION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3398
msgid ""
"<p> This method performs a nonsensical computation of a field with "
"another\n"
"reference to the same field (e.g., x&x or x-x). Because of the nature\n"
"of the computation, this operation doesn't seem to make sense,\n"
"and may indicate a typo or\n"
"a logic error.  Double check the computation.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3410
msgid "<a id='SA_LOCAL_SELF_COMPUTATION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3415
msgid ""
"SA: Nonsensical self computation involving a variable (e.g., x & x) "
"(SA_LOCAL_SELF_COMPUTATION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3417
msgid ""
"<p> This method performs a nonsensical computation of a local variable "
"with another\n"
"reference to the same variable (e.g., x&x or x-x). Because of the nature\n"
"of the computation, this operation doesn't seem to make sense,\n"
"and may indicate a typo or\n"
"a logic error.  Double check the computation.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3429
msgid "<a id='SA_FIELD_SELF_COMPARISON'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3434
msgid "SA: Self comparison of field with itself (SA_FIELD_SELF_COMPARISON)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3436
msgid ""
"<p> This method compares a field with itself, and may indicate a typo or\n"
"a logic error.  Make sure that you are comparing the right things.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3445
msgid "<a id='SA_LOCAL_SELF_COMPARISON'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3450
msgid "SA: Self comparison of value with itself (SA_LOCAL_SELF_COMPARISON)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3452
msgid ""
"<p> This method compares a local variable with itself, and may indicate a"
" typo or\n"
"a logic error.  Make sure that you are comparing the right things.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3461
msgid "<a id='UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3466
msgid ""
"UMAC: Uncallable method defined in anonymous class "
"(UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3468
msgid ""
"<p> This anonymous class defines a method that is not directly invoked "
"and does not override\n"
"a method in a superclass. Since methods in other classes cannot directly "
"invoke methods\n"
"declared in an anonymous class, it seems that this method is uncallable. "
"The method\n"
"might simply be dead code, but it is also possible that the method is "
"intended to\n"
"override a method declared in a superclass, and due to a typo or other "
"error the method does not,\n"
"in fact, override the method it is intended to.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3480
msgid "<a id='IJU_ASSERT_METHOD_INVOKED_FROM_RUN_METHOD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3485
msgid ""
"IJU: JUnit assertion in run method will not be noticed by JUnit "
"(IJU_ASSERT_METHOD_INVOKED_FROM_RUN_METHOD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3487
msgid ""
"<p> A JUnit assertion is performed in a run method. Failed JUnit "
"assertions\n"
"just result in exceptions being thrown.\n"
"Thus, if this exception occurs in a thread other than the thread that "
"invokes\n"
"the test method, the exception will terminate the thread but not result\n"
"in the test failing.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3499
msgid "<a id='IJU_BAD_SUITE_METHOD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3504
msgid "IJU: TestCase declares a bad suite method (IJU_BAD_SUITE_METHOD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3506
msgid ""
"<p> Class is a JUnit TestCase and defines a suite() method.\n"
"However, the suite method needs to be declared as either</p>\n"
"<pre><code>public static junit.framework.Test suite()\n"
"</code></pre>\n"
"<p>\n"
"or\n"
"</p>\n"
"<pre><code>public static junit.framework.TestSuite suite()\n"
"</code></pre>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3521
msgid "<a id='IJU_SETUP_NO_SUPER'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3526
msgid ""
"IJU: TestCase defines setUp that doesn't call super.setUp() "
"(IJU_SETUP_NO_SUPER)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3528
msgid ""
"<p> Class is a JUnit TestCase and implements the setUp method. The setUp "
"method should call\n"
"super.setUp(), but doesn't.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3536
msgid "<a id='IJU_TEARDOWN_NO_SUPER'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3541
msgid ""
"IJU: TestCase defines tearDown that doesn't call super.tearDown() "
"(IJU_TEARDOWN_NO_SUPER)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3543
msgid ""
"<p> Class is a JUnit TestCase and implements the tearDown method. The "
"tearDown method should call\n"
"super.tearDown(), but doesn't.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3551
msgid "<a id='IJU_SUITE_NOT_STATIC'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3556
msgid "IJU: TestCase implements a non-static suite method (IJU_SUITE_NOT_STATIC)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3558
msgid ""
"<p> Class is a JUnit TestCase and implements the suite() method.\n"
" The suite method should be declared as being static, but isn't.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3566
msgid "<a id='IJU_NO_TESTS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3571
msgid "IJU: TestCase has no tests (IJU_NO_TESTS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3573
msgid ""
"<p> Class is a JUnit TestCase but has not implemented any test "
"methods.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3580
msgid "<a id='BOA_BADLY_OVERRIDDEN_ADAPTER'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3585
msgid ""
"BOA: Class overrides a method implemented in super class Adapter wrongly "
"(BOA_BADLY_OVERRIDDEN_ADAPTER)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3587
msgid ""
"<p> This method overrides a method found in a parent class, where that "
"class is an Adapter that implements\n"
"a listener defined in the java.awt.event or javax.swing.event package. As"
" a result, this method will not\n"
"get called when the event occurs.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3596
msgid "<a id='SQL_BAD_RESULTSET_ACCESS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3601
#, fuzzy
msgid ""
"SQL: Method attempts to access a result set field with index 0 "
"(SQL_BAD_RESULTSET_ACCESS)"
msgstr ""
"SQL: Method attempts to access a result set field with index 0 "
"(BRSA_BAD_RESULTSET_ACCESS)"

#: ../../generated/bugDescriptionList.inc:3603
msgid ""
"<p> A call to getXXX or updateXXX methods of a result set was made where "
"the\n"
"field index is 0. As ResultSet fields start at index 1, this is always a "
"mistake.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3611
msgid "<a id='SQL_BAD_PREPARED_STATEMENT_ACCESS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3616
msgid ""
"SQL: Method attempts to access a prepared statement parameter with index "
"0 (SQL_BAD_PREPARED_STATEMENT_ACCESS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3618
msgid ""
"<p> A call to a setXXX method of a prepared statement was made where the\n"
"parameter index is 0. As parameter indexes start at index 1, this is "
"always a mistake.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3626
msgid "<a id='SIO_SUPERFLUOUS_INSTANCEOF'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3631
msgid ""
"SIO: Unnecessary type check done using instanceof operator "
"(SIO_SUPERFLUOUS_INSTANCEOF)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3633
msgid ""
"<p> Type check performed using the instanceof operator where it can be "
"statically determined whether the object\n"
"is of the type requested. </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3641
msgid "<a id='BAC_BAD_APPLET_CONSTRUCTOR'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3646
msgid ""
"BAC: Bad Applet Constructor relies on uninitialized AppletStub "
"(BAC_BAD_APPLET_CONSTRUCTOR)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3648
msgid ""
"<p>\n"
"This constructor calls methods in the parent Applet that rely on the "
"AppletStub. Since the AppletStub\n"
"isn't initialized until the init() method of this applet is called, these"
" methods will not perform\n"
"correctly.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3659
msgid "<a id='EC_INCOMPATIBLE_ARRAY_COMPARE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3664
msgid ""
"EC: equals(...) used to compare incompatible arrays "
"(EC_INCOMPATIBLE_ARRAY_COMPARE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3666
msgid ""
"<p>\n"
"This method invokes the .equals(Object o) to compare two arrays, but the "
"arrays of\n"
"of incompatible types (e.g., String[] and StringBuffer[], or String[] and"
" int[]).\n"
"They will never be equal. In addition, when equals(...) is used to "
"compare arrays it\n"
"only checks to see if they are the same array, and ignores the contents "
"of the arrays.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3678
msgid "<a id='EC_BAD_ARRAY_COMPARE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3683
msgid ""
"EC: Invocation of equals() on an array, which is equivalent to == "
"(EC_BAD_ARRAY_COMPARE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3685
msgid ""
"<p>\n"
"This method invokes the .equals(Object o) method on an array. Since "
"arrays do not override the equals\n"
"method of Object, calling equals on an array is the same as comparing "
"their addresses. To compare the\n"
"contents of the arrays, use <code>java.util.Arrays.equals(Object[], "
"Object[])</code>.\n"
"To compare the addresses of the arrays, it would be\n"
"less confusing to explicitly check pointer equality using "
"<code>==</code>.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3698
msgid "<a id='STI_INTERRUPTED_ON_CURRENTTHREAD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3703
msgid ""
"STI: Unneeded use of currentThread() call, to call interrupted() "
"(STI_INTERRUPTED_ON_CURRENTTHREAD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3705
msgid ""
"<p>\n"
"This method invokes the Thread.currentThread() call, just to call the "
"interrupted() method. As interrupted() is a\n"
"static method, is more simple and clear to use Thread.interrupted().\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3715
msgid "<a id='STI_INTERRUPTED_ON_UNKNOWNTHREAD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3720
msgid ""
"STI: Static Thread.interrupted() method invoked on thread instance "
"(STI_INTERRUPTED_ON_UNKNOWNTHREAD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3722
msgid ""
"<p>\n"
"This method invokes the Thread.interrupted() method on a Thread object "
"that appears to be a Thread object that is\n"
"not the current thread. As the interrupted() method is static, the "
"interrupted method will be called on a different\n"
"object than the one the author intended.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3733
msgid "<a id='DLS_DEAD_LOCAL_INCREMENT_IN_RETURN'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3738
msgid ""
"DLS: Useless increment in return statement "
"(DLS_DEAD_LOCAL_INCREMENT_IN_RETURN)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3740
msgid ""
"<p>This statement has a return such as <code>return x++;</code> / "
"<code>return x--;</code>.\n"
"A postfix increment/decrement does not impact the value of the "
"expression,\n"
"so this increment/decrement has no effect.\n"
"Please verify that this statement does the right thing.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3751
msgid "<a id='DLS_DEAD_STORE_OF_CLASS_LITERAL'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3756
msgid "DLS: Dead store of class literal (DLS_DEAD_STORE_OF_CLASS_LITERAL)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3758
msgid ""
"<p>\n"
"This instruction assigns a class literal to a variable and then never "
"uses it.\n"
"<a "
"href=\"http://www.oracle.com/technetwork/java/javase/compatibility-137462.html#literal\">The"
" behavior of this differs in Java 1.4 and in Java 5.</a>\n"
"In Java 1.4 and earlier, a reference to <code>Foo.class</code> would "
"force the static initializer\n"
"for <code>Foo</code> to be executed, if it has not been executed already."
"\n"
"In Java 5 and later, it does not.\n"
"</p>\n"
"<p>See Sun's <a "
"href=\"http://www.oracle.com/technetwork/java/javase/compatibility-137462.html#literal\">article"
" on Java SE compatibility</a>\n"
"for more details and examples, and suggestions on how to force class "
"initialization in Java 5.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3774
msgid "<a id='IP_PARAMETER_IS_DEAD_BUT_OVERWRITTEN'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3779
msgid ""
"IP: A parameter is dead upon entry to a method but overwritten "
"(IP_PARAMETER_IS_DEAD_BUT_OVERWRITTEN)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3781
msgid ""
"<p>\n"
"The initial value of this parameter is ignored, and the parameter\n"
"is overwritten here. This often indicates a mistaken belief that\n"
"the write to the parameter will be conveyed back to\n"
"the caller.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3793
msgid "<a id='MF_METHOD_MASKS_FIELD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3798
msgid ""
"MF: Method defines a variable that obscures a field "
"(MF_METHOD_MASKS_FIELD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3800
msgid ""
"<p> This method defines a local variable with the same name as a field\n"
"in this class or a superclass.  This may cause the method to\n"
"read an uninitialized value from the field, leave the field "
"uninitialized,\n"
"or both.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3810
msgid "<a id='MF_CLASS_MASKS_FIELD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3815
msgid ""
"MF: Class defines field that masks a superclass field "
"(MF_CLASS_MASKS_FIELD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3817
msgid ""
"<p> This class defines a field with the same name as a visible\n"
"instance field in a superclass.  This is confusing, and\n"
"may indicate an error if methods update or access one of\n"
"the fields when they wanted the other.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3827
msgid "<a id='FE_TEST_IF_EQUAL_TO_NOT_A_NUMBER'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3832
msgid "FE: Doomed test for equality to NaN (FE_TEST_IF_EQUAL_TO_NOT_A_NUMBER)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3834
msgid ""
"<p>\n"
"This code checks to see if a floating point value is equal to the special"
"\n"
"Not A Number value (e.g., <code>if (x == Double.NaN)</code>). However,\n"
"because of the special semantics of <code>NaN</code>, no value\n"
"is equal to <code>Nan</code>, including <code>NaN</code>. Thus,\n"
"<code>x == Double.NaN</code> always evaluates to false.\n"
"\n"
"To check to see if a value contained in <code>x</code>\n"
"is the special Not A Number value, use\n"
"<code>Double.isNaN(x)</code> (or <code>Float.isNaN(x)</code> if\n"
"<code>x</code> is floating point precision).\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3852
msgid "<a id='ICAST_INT_2_LONG_AS_INSTANT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3857
msgid ""
"ICAST: int value converted to long and used as absolute time "
"(ICAST_INT_2_LONG_AS_INSTANT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3859
msgid ""
"<p>\n"
"This code converts a 32-bit int value to a 64-bit long value, and then\n"
"passes that value for a method parameter that requires an absolute time "
"value.\n"
"An absolute time value is the number\n"
"of milliseconds since the standard base time known as \"the epoch\", "
"namely January 1, 1970, 00:00:00 GMT.\n"
"For example, the following method, intended to convert seconds since the "
"epoch into a Date, is badly\n"
"broken:</p>\n"
"<pre><code>Date getDate(int seconds) { return new Date(seconds * 1000); }"
"\n"
"</code></pre>\n"
"<p>The multiplication is done using 32-bit arithmetic, and then converted"
" to a 64-bit value.\n"
"When a 32-bit value is converted to 64-bits and used to express an "
"absolute time\n"
"value, only dates in December 1969 and January 1970 can be "
"represented.</p>\n"
"\n"
"<p>Correct implementations for the above method are:</p>\n"
"<pre><code>// Fails for dates after 2037\n"
"Date getDate(int seconds) { return new Date(seconds * 1000L); }\n"
"\n"
"// better, works for all dates\n"
"Date getDate(long seconds) { return new Date(seconds * 1000); }\n"
"</code></pre>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3885
msgid "<a id='ICAST_INT_CAST_TO_DOUBLE_PASSED_TO_CEIL'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3890
msgid ""
"ICAST: Integral value cast to double and then passed to Math.ceil "
"(ICAST_INT_CAST_TO_DOUBLE_PASSED_TO_CEIL)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3892
msgid ""
"<p>\n"
"This code converts an integral value (e.g., int or long)\n"
"to a double precision\n"
"floating point number and then\n"
"passing the result to the Math.ceil() function, which rounds a double to\n"
"the next higher integer value. This operation should always be a no-op,\n"
"since the converting an integer to a double should give a number with no "
"fractional part.\n"
"It is likely that the operation that generated the value to be passed\n"
"to Math.ceil was intended to be performed using double precision\n"
"floating point arithmetic.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3910
msgid "<a id='ICAST_INT_CAST_TO_FLOAT_PASSED_TO_ROUND'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3915
msgid ""
"ICAST: int value cast to float and then passed to Math.round "
"(ICAST_INT_CAST_TO_FLOAT_PASSED_TO_ROUND)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3917
msgid ""
"<p>\n"
"This code converts an int value to a float precision\n"
"floating point number and then\n"
"passing the result to the Math.round() function, which returns the "
"int/long closest\n"
"to the argument. This operation should always be a no-op,\n"
"since the converting an integer to a float should give a number with no "
"fractional part.\n"
"It is likely that the operation that generated the value to be passed\n"
"to Math.round was intended to be performed using\n"
"floating point arithmetic.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3934
msgid "<a id='NP_NULL_INSTANCEOF'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3939
#, fuzzy
msgid ""
"NP: A known null value is checked to see if it is an instance of a type "
"(NP_NULL_INSTANCEOF)"
msgstr ""
"NP: A known null value is checked to see if it is an instance of a type "
"(BC_NULL_INSTANCEOF)"

#: ../../generated/bugDescriptionList.inc:3941
msgid ""
"<p>\n"
"This instanceof test will always return false, since the value being "
"checked is guaranteed to be null.\n"
"Although this is safe, make sure it isn't\n"
"an indication of some misunderstanding or some other logic error.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3952
msgid "<a id='DMI_LONG_BITS_TO_DOUBLE_INVOKED_ON_INT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3957
msgid ""
"DMI: Double.longBitsToDouble invoked on an int "
"(DMI_LONG_BITS_TO_DOUBLE_INVOKED_ON_INT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3959
msgid ""
"<p> The Double.longBitsToDouble method is invoked, but a 32 bit int value"
" is passed\n"
"    as an argument. This almost certainly is not intended and is unlikely"
"\n"
"    to give the intended result.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3969
msgid "<a id='BC_IMPOSSIBLE_CAST'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3974
msgid "BC: Impossible cast (BC_IMPOSSIBLE_CAST)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3976
msgid ""
"<p>\n"
"This cast will always throw a ClassCastException.\n"
"SpotBugs tracks type information from instanceof checks,\n"
"and also uses more precise information about the types\n"
"of values returned from methods and loaded from fields.\n"
"Thus, it may have more precise information that just\n"
"the declared type of a variable, and can use this to determine\n"
"that a cast will always throw an exception at runtime.\n"
"\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3992
msgid "<a id='BC_IMPOSSIBLE_DOWNCAST'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3997
msgid "BC: Impossible downcast (BC_IMPOSSIBLE_DOWNCAST)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:3999
msgid ""
"<p>\n"
"This cast will always throw a ClassCastException.\n"
"The analysis believes it knows\n"
"the precise type of the value being cast, and the attempt to\n"
"downcast it to a subtype will always fail by throwing a "
"ClassCastException.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4011
msgid "<a id='BC_IMPOSSIBLE_DOWNCAST_OF_TOARRAY'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4016
msgid ""
"BC: Impossible downcast of toArray() result "
"(BC_IMPOSSIBLE_DOWNCAST_OF_TOARRAY)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4018
msgid ""
"<p>\n"
"This code is casting the result of calling <code>toArray()</code> on a "
"collection\n"
"to a type more specific than <code>Object[]</code>, as in:</p>\n"
"<pre><code>String[] getAsArray(Collection&lt;String&gt; c) {\n"
"    return (String[]) c.toArray();\n"
"}\n"
"</code></pre>\n"
"<p>This will usually fail by throwing a ClassCastException. The "
"<code>toArray()</code>\n"
"of almost all collections return an <code>Object[]</code>. They can't "
"really do anything else,\n"
"since the Collection object has no reference to the declared generic type"
" of the collection.\n"
"<p>The correct way to do get an array of a specific type from a "
"collection is to use\n"
"  <code>c.toArray(new String[]);</code>\n"
"  or <code>c.toArray(new String[c.size()]);</code> (the latter is "
"slightly more efficient).\n"
"<p>There is one common/known exception to this. The "
"<code>toArray()</code>\n"
"method of lists returned by <code>Arrays.asList(...)</code> will return a"
" covariantly\n"
"typed array. For example, <code>Arrays.asArray(new String[] { \"a\" "
"}).toArray()</code>\n"
"will return a <code>String []</code>. SpotBugs attempts to detect and "
"suppress\n"
"such cases, but may miss some.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4043
msgid "<a id='BC_IMPOSSIBLE_INSTANCEOF'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4048
msgid "BC: instanceof will always return false (BC_IMPOSSIBLE_INSTANCEOF)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4050
msgid ""
"<p>\n"
"This instanceof test will always return false. Although this is safe, "
"make sure it isn't\n"
"an indication of some misunderstanding or some other logic error.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4060
msgid "<a id='RE_POSSIBLE_UNINTENDED_PATTERN'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4065
msgid ""
"RE: \".\" or \"|\" used for regular expression "
"(RE_POSSIBLE_UNINTENDED_PATTERN)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4067
msgid ""
"<p>\n"
"A String function is being invoked and \".\" or \"|\" is being passed\n"
"to a parameter that takes a regular expression as an argument. Is this "
"what you intended?\n"
"For example\n"
"</p>\n"
"<ul>\n"
"<li>s.replaceAll(\".\", \"/\") will return a String in which "
"<em>every</em> character has been replaced by a '/' character</li>\n"
"<li>s.split(\".\") <em>always</em> returns a zero length array of "
"String</li>\n"
"<li>\"ab|cd\".replaceAll(\"|\", \"/\") will return \"/a/b/|/c/d/\"</li>\n"
"<li>\"ab|cd\".split(\"|\") will return array with six (!) elements: [, a,"
" b, |, c, d]</li>\n"
"</ul>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4084
msgid "<a id='RE_BAD_SYNTAX_FOR_REGULAR_EXPRESSION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4089
msgid ""
"RE: Invalid syntax for regular expression "
"(RE_BAD_SYNTAX_FOR_REGULAR_EXPRESSION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4091
msgid ""
"<p>\n"
"The code here uses a regular expression that is invalid according to the "
"syntax\n"
"for regular expressions. This statement will throw a "
"PatternSyntaxException when\n"
"executed.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4102
msgid "<a id='RE_CANT_USE_FILE_SEPARATOR_AS_REGULAR_EXPRESSION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4107
msgid ""
"RE: File.separator used for regular expression "
"(RE_CANT_USE_FILE_SEPARATOR_AS_REGULAR_EXPRESSION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4109
msgid ""
"<p>\n"
"The code here uses <code>File.separator</code>\n"
"where a regular expression is required. This will fail on Windows\n"
"platforms, where the <code>File.separator</code> is a backslash, which is"
" interpreted in a\n"
"regular expression as an escape character. Among other options, you can "
"just use\n"
"<code>File.separatorChar=='\\\\' ? \"\\\\\\\\\" : File.separator</code> "
"instead of\n"
"<code>File.separator</code>\n"
"\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4124
msgid "<a id='DLS_OVERWRITTEN_INCREMENT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4129
msgid "DLS: Overwritten increment (DLS_OVERWRITTEN_INCREMENT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4131
msgid ""
"<p>\n"
"The code performs an increment/decrement operation (e.g., "
"<code>i++</code> / <code>i--</code>) and then\n"
"immediately overwrites it. For example, <code>i = i++</code> / <code>i = "
"i--</code> immediately\n"
"overwrites the incremented/decremented value with the original value.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4142
msgid "<a id='ICAST_BAD_SHIFT_AMOUNT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4147
msgid ""
"BSHIFT: 32 bit int shifted by an amount not in the range -31..31 "
"(ICAST_BAD_SHIFT_AMOUNT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4149
msgid ""
"<p>\n"
"The code performs shift of a 32 bit int by a constant amount outside\n"
"the range -31..31.\n"
"The effect of this is to use the lower 5 bits of the integer\n"
"value to decide how much to shift by (e.g., shifting by 40 bits is the "
"same as shifting by 8 bits,\n"
"and shifting by 32 bits is the same as shifting by zero bits). This "
"probably isn't what was expected,\n"
"and it is at least confusing.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4163
msgid "<a id='BSHIFT_WRONG_ADD_PRIORITY'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4168
msgid ""
"BSHIFT: Possible bad parsing of shift operation "
"(BSHIFT_WRONG_ADD_PRIORITY)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4170
msgid ""
"<p>\n"
"The code performs an operation like (x &lt;&lt; 8 + y). Although this "
"might be correct, probably it was meant\n"
"to perform (x &lt;&lt; 8) + y, but shift operation has\n"
"a lower precedence, so it's actually parsed as x &lt;&lt; (8 + y).\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4181
msgid "<a id='IM_MULTIPLYING_RESULT_OF_IREM'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4186
msgid ""
"IM: Integer multiply of result of integer remainder "
"(IM_MULTIPLYING_RESULT_OF_IREM)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4188
msgid ""
"<p>\n"
"The code multiplies the result of an integer remaining by an integer "
"constant.\n"
"Be sure you don't have your operator precedence confused. For example\n"
"i % 60 * 1000 is (i % 60) * 1000, not i % (60 * 1000).\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4199
msgid "<a id='DMI_INVOKING_HASHCODE_ON_ARRAY'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4204
msgid "DMI: Invocation of hashCode on an array (DMI_INVOKING_HASHCODE_ON_ARRAY)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4206
msgid ""
"<p>\n"
"The code invokes hashCode on an array. Calling hashCode on\n"
"an array returns the same value as System.identityHashCode, and ignores\n"
"the contents and length of the array. If you need a hashCode that\n"
"depends on the contents of an array <code>a</code>,\n"
"use <code>java.util.Arrays.hashCode(a)</code>.\n"
"\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4220
msgid "<a id='DMI_INVOKING_TOSTRING_ON_ARRAY'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4225
msgid ""
"USELESS_STRING: Invocation of toString on an array "
"(DMI_INVOKING_TOSTRING_ON_ARRAY)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4227
msgid ""
"<p>\n"
"The code invokes toString on an array, which will generate a fairly "
"useless result\n"
"such as [C@16f0472. Consider using Arrays.toString to convert the array "
"into a readable\n"
"String that gives the contents of the array. See Programming Puzzlers, "
"chapter 3, puzzle 12.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4238
msgid "<a id='DMI_INVOKING_TOSTRING_ON_ANONYMOUS_ARRAY'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4243
msgid ""
"USELESS_STRING: Invocation of toString on an unnamed array "
"(DMI_INVOKING_TOSTRING_ON_ANONYMOUS_ARRAY)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4245
msgid ""
"<p>\n"
"The code invokes toString on an (anonymous) array.  Calling toString on "
"an array generates a fairly useless result\n"
"such as [C@16f0472. Consider using Arrays.toString to convert the array "
"into a readable\n"
"String that gives the contents of the array. See Programming Puzzlers, "
"chapter 3, puzzle 12.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4256
msgid "<a id='DMI_BAD_MONTH'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4261
msgid "DMI: Bad constant value for month (DMI_BAD_MONTH)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4263
msgid ""
"<p>\n"
"This code passes a constant month\n"
"value outside the expected range of 0..11 to a method.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4273
msgid "<a id='DMI_CALLING_NEXT_FROM_HASNEXT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4278
msgid "DMI: hasNext method invokes next (DMI_CALLING_NEXT_FROM_HASNEXT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4280
msgid ""
"<p>\n"
"The hasNext() method invokes the next() method. This is almost certainly "
"wrong,\n"
"since the hasNext() method is not supposed to change the state of the "
"iterator,\n"
"and the next method is supposed to change the state of the iterator.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4291
msgid "<a id='QBA_QUESTIONABLE_BOOLEAN_ASSIGNMENT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4296
msgid ""
"QBA: Method assigns boolean literal in boolean expression "
"(QBA_QUESTIONABLE_BOOLEAN_ASSIGNMENT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4298
msgid ""
"<p>\n"
"This method assigns a literal boolean value (true or false) to a boolean "
"variable inside\n"
"an if or while expression. Most probably this was supposed to be a "
"boolean comparison using\n"
"==, not an assignment using =.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4309
msgid "<a id='GC_UNRELATED_TYPES'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4314
msgid ""
"GC: No relationship between generic parameter and method argument "
"(GC_UNRELATED_TYPES)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4316
msgid ""
" <p> This call to a generic collection method contains an argument\n"
" with an incompatible class from that of the collection's parameter\n"
"(i.e., the type of the argument is neither a supertype nor a subtype\n"
"    of the corresponding generic type argument).\n"
" Therefore, it is unlikely that the collection contains any objects\n"
"that are equal to the method argument used here.\n"
"Most likely, the wrong value is being passed to the method.</p>\n"
"<p>In general, instances of two unrelated classes are not equal.\n"
"For example, if the <code>Foo</code> and <code>Bar</code> classes\n"
"are not related by subtyping, then an instance of <code>Foo</code>\n"
"    should not be equal to an instance of <code>Bar</code>.\n"
"Among other issues, doing so will likely result in an equals method\n"
"that is not symmetrical. For example, if you define the <code>Foo</code> "
"class\n"
"so that a <code>Foo</code> can be equal to a <code>String</code>,\n"
"your equals method isn't symmetrical since a <code>String</code> can only"
" be equal\n"
"to a <code>String</code>.\n"
"</p>\n"
"<p>In rare cases, people do define nonsymmetrical equals methods and "
"still manage to make\n"
"their code work. Although none of the APIs document or guarantee it, it "
"is typically\n"
"the case that if you check if a <code>Collection&lt;String&gt;</code> "
"contains\n"
"a <code>Foo</code>, the equals method of argument (e.g., the equals "
"method of the\n"
"<code>Foo</code> class) used to perform the equality checks.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4345
msgid "<a id='DMI_VACUOUS_SELF_COLLECTION_CALL'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4350
msgid "DMI: Vacuous call to collections (DMI_VACUOUS_SELF_COLLECTION_CALL)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4352
msgid ""
"     <p> This call doesn't make sense. For any collection <code>c</code>,"
" calling <code>c.containsAll(c)</code> should\n"
"always be true, and <code>c.retainAll(c)</code> should have no effect.\n"
"    </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4361
msgid "<a id='DMI_DOH'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4366
msgid "DMI: D'oh! A nonsensical method invocation (DMI_DOH)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4368
msgid ""
"    <p>\n"
"This partical method invocation doesn't make sense, for reasons that "
"should be apparent from inspection.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4378
msgid "<a id='DMI_COLLECTIONS_SHOULD_NOT_CONTAIN_THEMSELVES'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4383
msgid ""
"DMI: Collections should not contain themselves "
"(DMI_COLLECTIONS_SHOULD_NOT_CONTAIN_THEMSELVES)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4385
msgid ""
"     <p> This call to a generic collection's method would only make sense"
" if a collection contained\n"
"itself (e.g., if <code>s.contains(s)</code> were true). This is unlikely "
"to be true and would cause\n"
"problems if it were true (such as the computation of the hash code "
"resulting in infinite recursion).\n"
"It is likely that the wrong value is being passed as a parameter.\n"
"    </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4396
msgid "<a id='TQ_UNKNOWN_VALUE_USED_WHERE_ALWAYS_STRICTLY_REQUIRED'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4401
msgid ""
"TQ: Value without a type qualifier used where a value is required to have"
" that qualifier (TQ_UNKNOWN_VALUE_USED_WHERE_ALWAYS_STRICTLY_REQUIRED)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4403
msgid ""
"    <p>\n"
"    A value is being used in a way that requires the value be annotation "
"with a type qualifier.\n"
"The type qualifier is strict, so the tool rejects any values that do not "
"have\n"
"the appropriate annotation.\n"
"    </p>\n"
"\n"
"    <p>\n"
"    To coerce a value to have a strict annotation, define an identity "
"function where the return value is annotated\n"
"with the strict annotation.\n"
"This is the only way to turn a non-annotated value into a value with a "
"strict type qualifier annotation.\n"
"    </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4421
msgid "<a id='TQ_COMPARING_VALUES_WITH_INCOMPATIBLE_TYPE_QUALIFIERS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4426
msgid ""
"TQ: Comparing values with incompatible type qualifiers "
"(TQ_COMPARING_VALUES_WITH_INCOMPATIBLE_TYPE_QUALIFIERS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4428
msgid ""
"        <p>\n"
"        A value specified as carrying a type qualifier annotation is\n"
"        compared with a value that doesn't ever carry that qualifier.\n"
"        </p>\n"
"\n"
"        <p>\n"
"        More precisely, a value annotated with a type qualifier "
"specifying when=ALWAYS\n"
"        is compared with a value that where the same type qualifier "
"specifies when=NEVER.\n"
"        </p>\n"
"\n"
"        <p>\n"
"        For example, say that @NonNegative is a nickname for\n"
"        the type qualifier annotation @Negative(when=When.NEVER).\n"
"        The following code will generate this warning because\n"
"        the return statement requires a @NonNegative value,\n"
"        but receives one that is marked as @Negative.\n"
"        </p>\n"
"<pre><code>public boolean example(@Negative Integer value1, @NonNegative "
"Integer value2) {\n"
"    return value1.equals(value2);\n"
"}\n"
"</code></pre>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4455
msgid "<a id='TQ_ALWAYS_VALUE_USED_WHERE_NEVER_REQUIRED'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4460
msgid ""
"TQ: Value annotated as carrying a type qualifier used where a value that "
"must not carry that qualifier is required "
"(TQ_ALWAYS_VALUE_USED_WHERE_NEVER_REQUIRED)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4462
msgid ""
"        <p>\n"
"        A value specified as carrying a type qualifier annotation is\n"
"        consumed in a location or locations requiring that the value not\n"
"        carry that annotation.\n"
"        </p>\n"
"\n"
"        <p>\n"
"        More precisely, a value annotated with a type qualifier "
"specifying when=ALWAYS\n"
"        is guaranteed to reach a use or uses where the same type "
"qualifier specifies when=NEVER.\n"
"        </p>\n"
"\n"
"        <p>\n"
"        For example, say that @NonNegative is a nickname for\n"
"        the type qualifier annotation @Negative(when=When.NEVER).\n"
"        The following code will generate this warning because\n"
"        the return statement requires a @NonNegative value,\n"
"        but receives one that is marked as @Negative.\n"
"        </p>\n"
"<pre><code>public @NonNegative Integer example(@Negative Integer value) {"
"\n"
"    return value;\n"
"}\n"
"</code></pre>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4490
msgid "<a id='TQ_NEVER_VALUE_USED_WHERE_ALWAYS_REQUIRED'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4495
msgid ""
"TQ: Value annotated as never carrying a type qualifier used where value "
"carrying that qualifier is required "
"(TQ_NEVER_VALUE_USED_WHERE_ALWAYS_REQUIRED)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4497
msgid ""
"<p>\n"
"A value specified as not carrying a type qualifier annotation is "
"guaranteed\n"
"to be consumed in a location or locations requiring that the value does\n"
"carry that annotation.\n"
"</p>\n"
"\n"
"<p>\n"
"More precisely, a value annotated with a type qualifier specifying "
"when=NEVER\n"
"is guaranteed to reach a use or uses where the same type qualifier "
"specifies when=ALWAYS.\n"
"</p>\n"
"\n"
"<p>\n"
"TODO: example\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4517
msgid "<a id='TQ_MAYBE_SOURCE_VALUE_REACHES_ALWAYS_SINK'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4522
msgid ""
"TQ: Value that might not carry a type qualifier is always used in a way "
"requires that type qualifier (TQ_MAYBE_SOURCE_VALUE_REACHES_ALWAYS_SINK)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4524
msgid ""
"  <p>\n"
"  A value that is annotated as possibility not being an instance of\n"
"the values denoted by the type qualifier, and the value is guaranteed to "
"be used\n"
"in a way that requires values denoted by that type qualifier.\n"
"  </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4535
msgid "<a id='TQ_MAYBE_SOURCE_VALUE_REACHES_NEVER_SINK'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4540
msgid ""
"TQ: Value that might carry a type qualifier is always used in a way "
"prohibits it from having that type qualifier "
"(TQ_MAYBE_SOURCE_VALUE_REACHES_NEVER_SINK)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4542
msgid ""
"  <p>\n"
"  A value that is annotated as possibility being an instance of\n"
"the values denoted by the type qualifier, and the value is guaranteed to "
"be used\n"
"in a way that prohibits values denoted by that type qualifier.\n"
"  </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4553
msgid "<a id='FB_UNEXPECTED_WARNING'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4558
msgid "FB: Unexpected/undesired warning from SpotBugs (FB_UNEXPECTED_WARNING)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4560
msgid ""
"<p>SpotBugs generated a warning that, according to a @NoWarning "
"annotated,\n"
"  is unexpected or undesired.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4568
msgid "<a id='FB_MISSING_EXPECTED_WARNING'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4573
msgid ""
"FB: Missing expected or desired warning from SpotBugs "
"(FB_MISSING_EXPECTED_WARNING)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4575
msgid ""
"<p>SpotBugs didn't generate generated a warning that, according to a "
"@ExpectedWarning annotated,\n"
"  is expected or desired.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4584
msgid "Experimental (EXPERIMENTAL)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4586
msgid "Experimental and not fully vetted bug patterns"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4589
msgid "<a id='SKIPPED_CLASS_TOO_BIG'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4594
msgid "SKIPPED: Class too big for analysis (SKIPPED_CLASS_TOO_BIG)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4596
msgid ""
"    <p>This class is bigger than can be effectively handled, and was not "
"fully analyzed for errors.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4605
msgid "<a id='UNKNOWN'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4610
msgid "TEST: Unknown bug pattern (UNKNOWN)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4612
msgid ""
"<p>A warning was recorded, but SpotBugs can't find the description of "
"this bug pattern\n"
"and so can't describe it. This should occur only in cases of a bug in "
"SpotBugs or its configuration,\n"
"or perhaps if an analysis was generated using a plugin, but that plugin "
"is not currently loaded.\n"
".</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4622
msgid "<a id='TESTING'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4627
msgid "TEST: Testing (TESTING)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4629
#: ../../generated/bugDescriptionList.inc:4644
#: ../../generated/bugDescriptionList.inc:4659
#: ../../generated/bugDescriptionList.inc:4674
msgid ""
"<p>This bug pattern is only generated by new, incompletely implemented\n"
"bug detectors.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4637
msgid "<a id='TESTING1'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4642
msgid "TEST: Testing 1 (TESTING1)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4652
msgid "<a id='TESTING2'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4657
msgid "TEST: Testing 2 (TESTING2)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4667
msgid "<a id='TESTING3'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4672
msgid "TEST: Testing 3 (TESTING3)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4682
msgid "<a id='OBL_UNSATISFIED_OBLIGATION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4687
msgid ""
"OBL: Method may fail to clean up stream or resource "
"(OBL_UNSATISFIED_OBLIGATION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4689
#: ../../generated/bugDescriptionList.inc:4740
msgid ""
"<p>\n"
"This method may fail to clean up (close, dispose of) a stream,\n"
"database object, or other\n"
"resource requiring an explicit cleanup operation.\n"
"</p>\n"
"\n"
"<p>\n"
"In general, if a method opens a stream or other resource,\n"
"the method should use a try/finally block to ensure that\n"
"the stream or resource is cleaned up before the method\n"
"returns.\n"
"</p>\n"
"\n"
"<p>\n"
"This bug pattern is essentially the same as the\n"
"OS_OPEN_STREAM and ODR_OPEN_DATABASE_RESOURCE\n"
"bug patterns, but is based on a different\n"
"(and hopefully better) static analysis technique.\n"
"We are interested is getting feedback about the\n"
"usefulness of this bug pattern.\n"
"For sending feedback, check:\n"
"</p>\n"
"<ul>\n"
"  <li><a "
"href=\"https://github.com/spotbugs/spotbugs/blob/master/CONTRIBUTING.md\">contributing"
" guideline</a></li>\n"
"  <li><a "
"href=\"https://github.com/spotbugs/discuss/issues?q=\">malinglist</a></li>"
"\n"
"</ul>\n"
"\n"
"<p>\n"
"In particular,\n"
"the false-positive suppression heuristics for this\n"
"bug pattern have not been extensively tuned, so\n"
"reports about false positives are helpful to us.\n"
"</p>\n"
"\n"
"<p>\n"
"See Weimer and Necula, <i>Finding and Preventing Run-Time Error Handling "
"Mistakes</i>, for\n"
"a description of the analysis technique.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4733
msgid "<a id='OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4738
msgid ""
"OBL: Method may fail to clean up stream or resource on checked exception "
"(OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4784
msgid "<a id='LG_LOST_LOGGER_DUE_TO_WEAK_REFERENCE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4789
msgid ""
"LG: Potential lost logger changes due to weak reference in OpenJDK "
"(LG_LOST_LOGGER_DUE_TO_WEAK_REFERENCE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4791
msgid ""
"<p>OpenJDK introduces a potential incompatibility.\n"
" In particular, the java.util.logging.Logger behavior has\n"
"  changed. Instead of using strong references, it now uses weak "
"references\n"
"  internally. That's a reasonable change, but unfortunately some code "
"relies on\n"
"  the old behavior - when changing logger configuration, it simply drops "
"the\n"
"  logger reference. That means that the garbage collector is free to "
"reclaim\n"
"  that memory, which means that the logger configuration is lost. For "
"example,\n"
"consider:\n"
"</p>\n"
"<pre><code>public static void initLogging() throws Exception {\n"
"    Logger logger = Logger.getLogger(\"edu.umd.cs\");\n"
"    logger.addHandler(new FileHandler()); // call to change logger "
"configuration\n"
"    logger.setUseParentHandlers(false); // another call to change logger "
"configuration\n"
"}\n"
"</code></pre>\n"
"<p>The logger reference is lost at the end of the method (it doesn't\n"
"escape the method), so if you have a garbage collection cycle just\n"
"after the call to initLogging, the logger configuration is lost\n"
"(because Logger only keeps weak references).</p>\n"
"<pre><code>public static void main(String[] args) throws Exception {\n"
"    initLogging(); // adds a file handler to the logger\n"
"    System.gc(); // logger configuration lost\n"
"    Logger.getLogger(\"edu.umd.cs\").info(\"Some message\"); // this "
"isn't logged to the file as expected\n"
"}\n"
"</code></pre>\n"
"<p><em>Ulf Ochsenfahrt and Eric Fellheimer</em></p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4824
msgid "Internationalization (I18N)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4826
msgid "code flaws having to do with internationalization and locale"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4829
msgid "<a id='DM_CONVERT_CASE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4834
msgid ""
"Dm: Consider using Locale parameterized version of invoked method "
"(DM_CONVERT_CASE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4836
msgid ""
"<p> A String is being converted to upper or lowercase, using the "
"platform's default encoding. This may\n"
"    result in improper conversions when used with international "
"characters. Use the </p>\n"
"    <ul>\n"
"  <li>String.toUpperCase( Locale l )</li>\n"
"  <li>String.toLowerCase( Locale l )</li>\n"
"  </ul>\n"
"    <p>versions instead.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4849
msgid "<a id='DM_DEFAULT_ENCODING'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4854
msgid "Dm: Reliance on default encoding (DM_DEFAULT_ENCODING)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4856
msgid ""
"<p> Found a call to a method which will perform a byte to String (or "
"String to byte) conversion, and will assume that the default platform "
"encoding is suitable. This will cause the application behaviour to vary "
"between platforms. Use an alternative API and specify a charset name or "
"Charset object explicitly.  </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4864
msgid "Malicious code vulnerability (MALICIOUS_CODE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4866
msgid "code that is vulnerable to attacks from untrusted code"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4869
msgid "<a id='DP_DO_INSIDE_DO_PRIVILEGED'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4874
msgid ""
"DP: Method invoked that should be only be invoked inside a doPrivileged "
"block (DP_DO_INSIDE_DO_PRIVILEGED)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4876
msgid ""
"<p> This code invokes a method that requires a security permission check."
"\n"
"If this code will be granted security permissions, but might be invoked "
"by code that does not\n"
"have security permissions, then the invocation needs to occur inside a "
"doPrivileged block.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4885
msgid "<a id='DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4890
msgid ""
"DP: Classloaders should only be created inside doPrivileged block "
"(DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4892
msgid ""
"<p> This code creates a classloader,  which needs permission if a "
"security manage is installed.\n"
"If this code might be invoked by code that does not\n"
"have security permissions, then the classloader creation needs to occur "
"inside a doPrivileged block.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4901
msgid "<a id='FI_PUBLIC_SHOULD_BE_PROTECTED'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4906
msgid ""
"FI: Finalizer should be protected, not public "
"(FI_PUBLIC_SHOULD_BE_PROTECTED)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4908
msgid ""
"<p> A class's <code>finalize()</code> method should have protected "
"access,\n"
" not public.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4916
msgid "<a id='MS_EXPOSE_REP'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4921
msgid ""
"MS: Public static method may expose internal representation by returning "
"array (MS_EXPOSE_REP)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4923
msgid ""
"<p> A public static method returns a reference to\n"
" an array that is part of the static state of the class.\n"
" Any code that calls this method can freely modify\n"
" the underlying array.\n"
" One fix is to return a copy of the array.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4934
msgid "<a id='EI_EXPOSE_REP'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4939
msgid ""
"EI: May expose internal representation by returning reference to mutable "
"object (EI_EXPOSE_REP)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4941
msgid ""
"<p> Returning a reference to a mutable object value stored in one of the "
"object's fields\n"
"exposes the internal representation of the object.&nbsp;\n"
" If instances\n"
" are accessed by untrusted code, and unchecked changes to\n"
" the mutable object would compromise security or other\n"
" important properties, you will need to do something different.\n"
"Returning a new copy of the object is better approach in many "
"situations.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4954
msgid "<a id='EI_EXPOSE_REP2'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4959
msgid ""
"EI2: May expose internal representation by incorporating reference to "
"mutable object (EI_EXPOSE_REP2)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4961
msgid ""
"<p> This code stores a reference to an externally mutable object into the"
"\n"
"internal representation of the object.&nbsp;\n"
" If instances\n"
" are accessed by untrusted code, and unchecked changes to\n"
" the mutable object would compromise security or other\n"
" important properties, you will need to do something different.\n"
"Storing a copy of the object is better approach in many situations.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4974
msgid "<a id='EI_EXPOSE_STATIC_REP2'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4979
msgid ""
"MS: May expose internal static state by storing a mutable object into a "
"static field (EI_EXPOSE_STATIC_REP2)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4981
msgid ""
"<p> This code stores a reference to an externally mutable object into a "
"static\n"
" field.\n"
" If unchecked changes to\n"
" the mutable object would compromise security or other\n"
" important properties, you will need to do something different.\n"
"Storing a copy of the object is better approach in many situations.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4993
msgid "<a id='MS_OOI_PKGPROTECT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:4998
msgid ""
"MS: Field should be moved out of an interface and made package protected "
"(MS_OOI_PKGPROTECT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5000
msgid ""
"<p>\n"
" A final static field that is\n"
"defined in an interface references a mutable\n"
"   object such as an array or hashtable.\n"
"   This mutable object could\n"
"   be changed by malicious code or\n"
"        by accident from another package.\n"
"   To solve this, the field needs to be moved to a class\n"
"   and made package protected\n"
"   to avoid\n"
"        this vulnerability.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5017
msgid "<a id='MS_FINAL_PKGPROTECT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5022
msgid "MS: Field should be both final and package protected (MS_FINAL_PKGPROTECT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5024
msgid ""
"<p>\n"
"  A mutable static field could be changed by malicious code or\n"
"       by accident from another package.\n"
"       The field could be made package protected and/or made final\n"
"  to avoid\n"
"       this vulnerability.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5036
msgid "<a id='MS_SHOULD_BE_FINAL'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5041
msgid "MS: Field isn't final but should be (MS_SHOULD_BE_FINAL)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5043
msgid ""
"   <p>\n"
"This static field public but not final, and\n"
"could be changed by malicious code or\n"
"        by accident from another package.\n"
"        The field could be made final to avoid\n"
"        this vulnerability.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5055
msgid "<a id='MS_SHOULD_BE_REFACTORED_TO_BE_FINAL'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5060
msgid ""
"MS: Field isn't final but should be refactored to be so "
"(MS_SHOULD_BE_REFACTORED_TO_BE_FINAL)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5062
msgid ""
"   <p>\n"
"This static field public but not final, and\n"
"could be changed by malicious code or\n"
"by accident from another package.\n"
"The field could be made final to avoid\n"
"this vulnerability. However, the static initializer contains more than "
"one write\n"
"to the field, so doing so will require some refactoring.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5076
msgid "<a id='MS_PKGPROTECT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5081
msgid "MS: Field should be package protected (MS_PKGPROTECT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5083
msgid ""
"<p> A mutable static field could be changed by malicious code or\n"
" by accident.\n"
" The field could be made package protected to avoid\n"
" this vulnerability.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5093
msgid "<a id='MS_MUTABLE_HASHTABLE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5098
msgid "MS: Field is a mutable Hashtable (MS_MUTABLE_HASHTABLE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5100
msgid ""
"<p>A final static field references a Hashtable\n"
"  and can be accessed by malicious code or\n"
"       by accident from another package.\n"
"  This code can freely modify the contents of the Hashtable.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5110
msgid "<a id='MS_MUTABLE_ARRAY'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5115
msgid "MS: Field is a mutable array (MS_MUTABLE_ARRAY)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5117
msgid ""
"<p> A final static field references an array\n"
"   and can be accessed by malicious code or\n"
"        by accident from another package.\n"
"   This code can freely modify the contents of the array.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5127
msgid "<a id='MS_MUTABLE_COLLECTION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5132
msgid "MS: Field is a mutable collection (MS_MUTABLE_COLLECTION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5134
msgid ""
"<p>A mutable collection instance is assigned to a final static field,\n"
"  thus can be changed by malicious code or by accident from another "
"package.\n"
"  Consider wrapping this field into "
"Collections.unmodifiableSet/List/Map/etc.\n"
"  to avoid this vulnerability.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5144
msgid "<a id='MS_MUTABLE_COLLECTION_PKGPROTECT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5149
msgid ""
"MS: Field is a mutable collection which should be package protected "
"(MS_MUTABLE_COLLECTION_PKGPROTECT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5151
msgid ""
"<p>A mutable collection instance is assigned to a final static field,\n"
"  thus can be changed by malicious code or by accident from another "
"package.\n"
"  The field could be made package protected to avoid this vulnerability.\n"
"  Alternatively you may wrap this field into "
"Collections.unmodifiableSet/List/Map/etc.\n"
"  to avoid this vulnerability.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5162
msgid "<a id='MS_CANNOT_BE_FINAL'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5167
msgid ""
"MS: Field isn't final and can't be protected from malicious code "
"(MS_CANNOT_BE_FINAL)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5169
msgid ""
" <p>\n"
"A mutable static field could be changed by malicious code or\n"
"       by accident from another package.\n"
"  Unfortunately, the way the field is used doesn't allow\n"
"  any easy fix to this problem.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5181
msgid "Multithreaded correctness (MT_CORRECTNESS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5183
msgid "code flaws having to do with threads, locks, and volatiles"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5186
msgid "<a id='AT_OPERATION_SEQUENCE_ON_CONCURRENT_ABSTRACTION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5191
msgid ""
"AT: Sequence of calls to concurrent abstraction may not be atomic "
"(AT_OPERATION_SEQUENCE_ON_CONCURRENT_ABSTRACTION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5193
msgid ""
"<p>This code contains a sequence of calls to a concurrent  abstraction\n"
"    (such as a concurrent hash map).\n"
"    These calls will not be executed atomically."
msgstr ""

#: ../../generated/bugDescriptionList.inc:5202
msgid "<a id='STCAL_STATIC_CALENDAR_INSTANCE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5207
msgid "STCAL: Static Calendar field (STCAL_STATIC_CALENDAR_INSTANCE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5209
msgid ""
"<p>Even though the JavaDoc does not contain a hint about it, Calendars "
"are inherently unsafe for multithreaded use.\n"
"Sharing a single instance across thread boundaries without proper "
"synchronization will result in erratic behavior of the\n"
"application. Under 1.4 problems seem to surface less often than under "
"Java 5 where you will probably see\n"
"random ArrayIndexOutOfBoundsExceptions or IndexOutOfBoundsExceptions in "
"sun.util.calendar.BaseCalendar.getCalendarDateFromFixedDate().</p>\n"
"<p>You may also experience serialization problems.</p>\n"
"<p>Using an instance field is recommended.</p>\n"
"<p>For more information on this see <a "
"href=\"http://bugs.java.com/bugdatabase/view_bug.do?bug_id=6231579\">JDK "
"Bug #6231579</a>\n"
"and <a "
"href=\"http://bugs.java.com/bugdatabase/view_bug.do?bug_id=6178997\">JDK "
"Bug #6178997</a>.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5222
msgid "<a id='STCAL_STATIC_SIMPLE_DATE_FORMAT_INSTANCE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5227
msgid "STCAL: Static DateFormat (STCAL_STATIC_SIMPLE_DATE_FORMAT_INSTANCE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5229
msgid ""
"<p>As the JavaDoc states, DateFormats are inherently unsafe for "
"multithreaded use.\n"
"Sharing a single instance across thread boundaries without proper "
"synchronization will result in erratic behavior of the\n"
"application.</p>\n"
"<p>You may also experience serialization problems.</p>\n"
"<p>Using an instance field is recommended.</p>\n"
"<p>For more information on this see <a "
"href=\"http://bugs.java.com/bugdatabase/view_bug.do?bug_id=6231579\">JDK "
"Bug #6231579</a>\n"
"and <a "
"href=\"http://bugs.java.com/bugdatabase/view_bug.do?bug_id=6178997\">JDK "
"Bug #6178997</a>.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5241
msgid "<a id='STCAL_INVOKE_ON_STATIC_CALENDAR_INSTANCE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5246
msgid "STCAL: Call to static Calendar (STCAL_INVOKE_ON_STATIC_CALENDAR_INSTANCE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5248
msgid ""
"<p>Even though the JavaDoc does not contain a hint about it, Calendars "
"are inherently unsafe for multithreaded use.\n"
"The detector has found a call to an instance of Calendar that has been "
"obtained via a static\n"
"field. This looks suspicious.</p>\n"
"<p>For more information on this see <a "
"href=\"http://bugs.java.com/bugdatabase/view_bug.do?bug_id=6231579\">JDK "
"Bug #6231579</a>\n"
"and <a "
"href=\"http://bugs.java.com/bugdatabase/view_bug.do?bug_id=6178997\">JDK "
"Bug #6178997</a>.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5258
msgid "<a id='STCAL_INVOKE_ON_STATIC_DATE_FORMAT_INSTANCE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5263
msgid ""
"STCAL: Call to static DateFormat "
"(STCAL_INVOKE_ON_STATIC_DATE_FORMAT_INSTANCE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5265
msgid ""
"<p>As the JavaDoc states, DateFormats are inherently unsafe for "
"multithreaded use.\n"
"The detector has found a call to an instance of DateFormat that has been "
"obtained via a static\n"
"field. This looks suspicious.</p>\n"
"<p>For more information on this see <a "
"href=\"http://bugs.java.com/bugdatabase/view_bug.do?bug_id=6231579\">JDK "
"Bug #6231579</a>\n"
"and <a "
"href=\"http://bugs.java.com/bugdatabase/view_bug.do?bug_id=6178997\">JDK "
"Bug #6178997</a>.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5275
msgid "<a id='NP_SYNC_AND_NULL_CHECK_FIELD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5280
msgid ""
"NP: Synchronize and null check on the same field. "
"(NP_SYNC_AND_NULL_CHECK_FIELD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5282
msgid ""
"<p>Since the field is synchronized on, it seems not likely to be null.\n"
"If it is null and then synchronized on a NullPointerException will be\n"
"thrown and the check would be pointless. Better to synchronize on\n"
"another field.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5293
msgid "<a id='VO_VOLATILE_REFERENCE_TO_ARRAY'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5298
msgid ""
"VO: A volatile reference to an array doesn't treat the array elements as "
"volatile (VO_VOLATILE_REFERENCE_TO_ARRAY)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5300
msgid ""
"<p>This declares a volatile reference to an array, which might not be "
"what\n"
"you want. With a volatile reference to an array, reads and writes of\n"
"the reference to the array are treated as volatile, but the array "
"elements\n"
"are non-volatile. To get volatile array elements, you will need to use\n"
"one of the atomic array classes in java.util.concurrent (provided\n"
"in Java 5.0).</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5312
msgid "<a id='VO_VOLATILE_INCREMENT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5317
msgid "VO: An increment to a volatile field isn't atomic (VO_VOLATILE_INCREMENT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5319
msgid ""
"<p>This code increments/decrements a volatile field. "
"Increments/Decrements of volatile fields aren't\n"
"atomic. If more than one thread is incrementing/decrementing the field at"
" the same time,\n"
"increments/decrements could be lost.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5329
msgid "<a id='DM_MONITOR_WAIT_ON_CONDITION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5334
msgid "Dm: Monitor wait() called on Condition (DM_MONITOR_WAIT_ON_CONDITION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5336
msgid ""
"<p>\n"
"This method calls <code>wait()</code> on a\n"
"<code>java.util.concurrent.locks.Condition</code> object.&nbsp;\n"
"Waiting for a <code>Condition</code> should be done using one of the "
"<code>await()</code>\n"
"methods defined by the <code>Condition</code> interface.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5348
msgid "<a id='DM_USELESS_THREAD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5353
msgid ""
"Dm: A thread was created using the default empty run method "
"(DM_USELESS_THREAD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5355
msgid ""
"  <p>This method creates a thread without specifying a run method either "
"by deriving from the Thread class, or\n"
"  by passing a Runnable object. This thread, then, does nothing but waste"
" time.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5364
msgid "<a id='DC_DOUBLECHECK'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5369
msgid "DC: Possible double check of field (DC_DOUBLECHECK)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5371
msgid ""
"<p> This method may contain an instance of double-checked locking.&nbsp;\n"
"This idiom is not correct according to the semantics of the Java memory\n"
"model.&nbsp; For more information, see the web page\n"
"<a "
"href=\"http://www.cs.umd.edu/~pugh/java/memoryModel/DoubleCheckedLocking.html\""
"\n"
">http://www.cs.umd.edu/~pugh/java/memoryModel/DoubleCheckedLocking.html</a>.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5382
msgid "<a id='DC_PARTIALLY_CONSTRUCTED'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5387
msgid ""
"DC: Possible exposure of partially initialized object "
"(DC_PARTIALLY_CONSTRUCTED)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5389
msgid ""
"<p>Looks like this method uses lazy field initialization with double-"
"checked locking.\n"
"While the field is correctly declared as volatile, it's possible that the"
" internal structure of\n"
"the object is changed after the field assignment, thus another thread may"
" see the partially initialized object.</p>\n"
"<p>To fix this problem consider storing the object into the local "
"variable first\n"
"and save it to the volatile field only after it's fully constructed.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5401
msgid "<a id='DL_SYNCHRONIZATION_ON_SHARED_CONSTANT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5406
msgid ""
"DL: Synchronization on interned String "
"(DL_SYNCHRONIZATION_ON_SHARED_CONSTANT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5408
msgid ""
"  <p> The code synchronizes on interned String.</p>\n"
"<pre><code>private static String LOCK = \"LOCK\";\n"
"...\n"
"synchronized(LOCK) {\n"
"    ...\n"
"}\n"
"...\n"
"</code></pre>\n"
"<p>Constant Strings are interned and shared across all other classes "
"loaded by the JVM. Thus, this code\n"
"is locking on something that other code might also be locking. This could"
" result in very strange and hard to diagnose\n"
"blocking and deadlock behavior. See <a "
"href=\"http://www.javalobby.org/java/forums/t96352.html\">http://www.javalobby.org/java/forums/t96352.html</a>"
" and <a "
"href=\"http://jira.codehaus.org/browse/JETTY-352\">http://jira.codehaus.org/browse/JETTY-352</a>."
"\n"
"</p>\n"
"<p>See CERT <a "
"href=\"https://www.securecoding.cert.org/confluence/display/java/CON08-J.+Do+not+synchronize+on+objects+that+may+be+reused\">CON08-J."
" Do not synchronize on objects that may be reused</a> for more "
"information.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5427
msgid "<a id='DL_SYNCHRONIZATION_ON_BOOLEAN'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5432
msgid "DL: Synchronization on Boolean (DL_SYNCHRONIZATION_ON_BOOLEAN)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5434
msgid ""
"  <p> The code synchronizes on a boxed primitive constant, such as a "
"Boolean.</p>\n"
"<pre><code>private static Boolean inited = Boolean.FALSE;\n"
"...\n"
"synchronized(inited) {\n"
"    if (!inited) {\n"
"        init();\n"
"        inited = Boolean.TRUE;\n"
"    }\n"
"}\n"
"...\n"
"</code></pre>\n"
"<p>Since there normally exist only two Boolean objects, this code could "
"be synchronizing on the same object as other, unrelated code, leading to "
"unresponsiveness\n"
"and possible deadlock.</p>\n"
"<p>See CERT <a "
"href=\"https://www.securecoding.cert.org/confluence/display/java/CON08-J.+Do+not+synchronize+on+objects+that+may+be+reused\">CON08-J."
" Do not synchronize on objects that may be reused</a> for more "
"information.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5454
msgid "<a id='DL_SYNCHRONIZATION_ON_BOXED_PRIMITIVE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5459
msgid ""
"DL: Synchronization on boxed primitive "
"(DL_SYNCHRONIZATION_ON_BOXED_PRIMITIVE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5461
msgid ""
"  <p> The code synchronizes on a boxed primitive constant, such as an "
"Integer.</p>\n"
"<pre><code>private static Integer count = 0;\n"
"...\n"
"synchronized(count) {\n"
"    count++;\n"
"}\n"
"...\n"
"</code></pre>\n"
"<p>Since Integer objects can be cached and shared,\n"
"this code could be synchronizing on the same object as other, unrelated "
"code, leading to unresponsiveness\n"
"and possible deadlock.</p>\n"
"<p>See CERT <a "
"href=\"https://www.securecoding.cert.org/confluence/display/java/CON08-J.+Do+not+synchronize+on+objects+that+may+be+reused\">CON08-J."
" Do not synchronize on objects that may be reused</a> for more "
"information.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5479
msgid "<a id='DL_SYNCHRONIZATION_ON_UNSHARED_BOXED_PRIMITIVE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5484
msgid ""
"DL: Synchronization on boxed primitive values "
"(DL_SYNCHRONIZATION_ON_UNSHARED_BOXED_PRIMITIVE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5486
msgid ""
"  <p> The code synchronizes on an apparently unshared boxed primitive,\n"
"such as an Integer.</p>\n"
"<pre><code>private static final Integer fileLock = new Integer(1);\n"
"...\n"
"synchronized(fileLock) {\n"
"    .. do something ..\n"
"}\n"
"...\n"
"</code></pre>\n"
"<p>It would be much better, in this code, to redeclare fileLock as</p>\n"
"<pre><code>private static final Object fileLock = new Object();\n"
"</code></pre>\n"
"<p>\n"
"The existing code might be OK, but it is confusing and a\n"
"future refactoring, such as the \"Remove Boxing\" refactoring in "
"IntelliJ,\n"
"might replace this with the use of an interned Integer object shared\n"
"throughout the JVM, leading to very confusing behavior and potential "
"deadlock.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5510
msgid "<a id='WL_USING_GETCLASS_RATHER_THAN_CLASS_LITERAL'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5515
msgid ""
"WL: Synchronization on getClass rather than class literal "
"(WL_USING_GETCLASS_RATHER_THAN_CLASS_LITERAL)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5517
msgid ""
"      <p>\n"
"     This instance method synchronizes on <code>this.getClass()</code>. "
"If this class is subclassed,\n"
"     subclasses will synchronize on the class object for the subclass, "
"which isn't likely what was intended.\n"
"     For example, consider this code from java.awt.Label:</p>\n"
"<pre><code>private static final String base = \"label\";\n"
"private static int nameCounter = 0;\n"
"\n"
"String constructComponentName() {\n"
"    synchronized (getClass()) {\n"
"        return base + nameCounter++;\n"
"    }\n"
"}\n"
"</code></pre>\n"
"     <p>Subclasses of <code>Label</code> won't synchronize on the same "
"subclass, giving rise to a datarace.\n"
"     Instead, this code should be synchronizing on "
"<code>Label.class</code></p>\n"
"<pre><code>private static final String base = \"label\";\n"
"private static int nameCounter = 0;\n"
"\n"
"String constructComponentName() {\n"
"    synchronized (Label.class) {\n"
"        return base + nameCounter++;\n"
"    }\n"
"}\n"
"</code></pre>\n"
"      <p>Bug pattern contributed by Jason Mehrens</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5548
msgid "<a id='ESync_EMPTY_SYNC'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5553
msgid "ESync: Empty synchronized block (ESync_EMPTY_SYNC)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5555
msgid ""
"  <p> The code contains an empty synchronized block:</p>\n"
"<pre><code>synchronized() {\n"
"}\n"
"</code></pre>\n"
"<p>Empty synchronized blocks are far more subtle and hard to use "
"correctly\n"
"than most people recognize, and empty synchronized blocks\n"
"are almost never a better solution\n"
"than less contrived solutions.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5570
msgid "<a id='MSF_MUTABLE_SERVLET_FIELD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5575
msgid "MSF: Mutable servlet field (MSF_MUTABLE_SERVLET_FIELD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5577
msgid ""
"<p>A web server generally only creates one instance of servlet or JSP "
"class (i.e., treats\n"
"the class as a Singleton),\n"
"and will\n"
"have multiple threads invoke methods on that instance to service multiple"
"\n"
"simultaneous requests.\n"
"Thus, having a mutable instance field generally creates race conditions."
msgstr ""

#: ../../generated/bugDescriptionList.inc:5589
msgid "<a id='IS2_INCONSISTENT_SYNC'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5594
msgid "IS: Inconsistent synchronization (IS2_INCONSISTENT_SYNC)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5596
msgid ""
"<p> The fields of this class appear to be accessed inconsistently with "
"respect\n"
"to synchronization.&nbsp; This bug report indicates that the bug pattern "
"detector\n"
"judged that\n"
"</p>\n"
"<ul>\n"
"<li> The class contains a mix of locked and unlocked accesses,</li>\n"
"<li> The class is <b>not</b> annotated as "
"javax.annotation.concurrent.NotThreadSafe,</li>\n"
"<li> At least one locked access was performed by one of the class's own "
"methods, and</li>\n"
"<li> The number of unsynchronized field accesses (reads and writes) was "
"no more than\n"
"     one third of all accesses, with writes being weighed twice as high "
"as reads</li>\n"
"</ul>\n"
"\n"
"<p> A typical bug matching this bug pattern is forgetting to synchronize\n"
"one of the methods in a class that is intended to be thread-safe.</p>\n"
"\n"
"<p> You can select the nodes labeled \"Unsynchronized access\" to show "
"the\n"
"code locations where the detector believed that a field was accessed\n"
"without synchronization.</p>\n"
"\n"
"<p> Note that there are various sources of inaccuracy in this detector;\n"
"for example, the detector cannot statically detect all situations in "
"which\n"
"a lock is held.&nbsp; Also, even when the detector is accurate in\n"
"distinguishing locked vs. unlocked accesses, the code in question may "
"still\n"
"be correct.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5627
msgid "<a id='NN_NAKED_NOTIFY'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5632
msgid "NN: Naked notify (NN_NAKED_NOTIFY)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5634
msgid ""
"<p> A call to <code>notify()</code> or <code>notifyAll()</code>\n"
"was made without any (apparent) accompanying\n"
"modification to mutable object state.&nbsp; In general, calling a notify\n"
"method on a monitor is done because some condition another thread is\n"
"waiting for has become true.&nbsp; However, for the condition to be "
"meaningful,\n"
"it must involve a heap object that is visible to both threads.</p>\n"
"\n"
"<p> This bug does not necessarily indicate an error, since the change to\n"
"mutable object state may have taken place in a method which then called\n"
"the method containing the notification.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5650
msgid "<a id='RU_INVOKE_RUN'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5655
msgid ""
"Ru: Invokes run on a thread (did you mean to start it instead?) "
"(RU_INVOKE_RUN)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5657
msgid ""
"<p> This method explicitly invokes <code>run()</code> on an object.&nbsp;"
"\n"
"In general, classes implement the <code>Runnable</code> interface because"
"\n"
"they are going to have their <code>run()</code> method invoked in a new "
"thread,\n"
"in which case <code>Thread.start()</code> is the right method to call.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5667
msgid "<a id='SP_SPIN_ON_FIELD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5672
msgid "SP: Method spins on field (SP_SPIN_ON_FIELD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5674
msgid ""
"<p> This method spins in a loop which reads a field.&nbsp; The compiler\n"
"may legally hoist the read out of the loop, turning the code into an\n"
"infinite loop.&nbsp; The class should be changed so it uses proper\n"
"synchronization (including wait and notify calls).</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5684
msgid "<a id='TLW_TWO_LOCK_WAIT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5689
msgid "TLW: Wait with two locks held (TLW_TWO_LOCK_WAIT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5691
msgid ""
"  <p> Waiting on a monitor while two locks are held may cause\n"
"  deadlock.\n"
"   &nbsp;\n"
"   Performing a wait only releases the lock on the object\n"
"   being waited on, not any other locks.\n"
"   &nbsp;\n"
"This not necessarily a bug, but is worth examining\n"
"  closely.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5705
msgid "<a id='UW_UNCOND_WAIT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5710
msgid "UW: Unconditional wait (UW_UNCOND_WAIT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5712
msgid ""
"<p> This method contains a call to <code>java.lang.Object.wait()</code> "
"which\n"
"is not guarded by conditional control flow.&nbsp; The code should\n"
"  verify that condition it intends to wait for is not already satisfied\n"
"  before calling wait; any previous notifications will be ignored.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5723
msgid "<a id='UG_SYNC_SET_UNSYNC_GET'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5728
msgid ""
"UG: Unsynchronized get method, synchronized set method "
"(UG_SYNC_SET_UNSYNC_GET)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5730
msgid ""
"<p> This class contains similarly-named get and set\n"
"methods where the set method is synchronized and the get method is "
"not.&nbsp;\n"
"This may result in incorrect behavior at runtime, as callers of the get\n"
"method will not necessarily see a consistent state for the object.&nbsp;\n"
"The get method should be made synchronized.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5741
msgid "<a id='IS_FIELD_NOT_GUARDED'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5746
msgid "IS: Field not guarded against concurrent access (IS_FIELD_NOT_GUARDED)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5748
msgid ""
"  <p> This field is annotated with net.jcip.annotations.GuardedBy or "
"javax.annotation.concurrent.GuardedBy,\n"
"but can be accessed in a way that seems to violate those annotations.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5755
msgid "<a id='ML_SYNC_ON_FIELD_TO_GUARD_CHANGING_THAT_FIELD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5760
msgid ""
"ML: Synchronization on field in futile attempt to guard that field "
"(ML_SYNC_ON_FIELD_TO_GUARD_CHANGING_THAT_FIELD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5762
msgid ""
"  <p> This method synchronizes on a field in what appears to be an "
"attempt\n"
"to guard against simultaneous updates to that field. But guarding a field"
"\n"
"gets a lock on the referenced object, not on the field. This may not\n"
"provide the mutual exclusion you need, and other threads might\n"
"be obtaining locks on the referenced objects (for other purposes). An "
"example\n"
"of this pattern would be:</p>\n"
"<pre><code>private Long myNtfSeqNbrCounter = new Long(0);\n"
"private Long getNotificationSequenceNumber() {\n"
"     Long result = null;\n"
"     synchronized(myNtfSeqNbrCounter) {\n"
"         result = new Long(myNtfSeqNbrCounter.longValue() + 1);\n"
"         myNtfSeqNbrCounter = new Long(result.longValue());\n"
"     }\n"
"     return result;\n"
"}\n"
"</code></pre>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5784
msgid "<a id='ML_SYNC_ON_UPDATED_FIELD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5789
msgid "ML: Method synchronizes on an updated field (ML_SYNC_ON_UPDATED_FIELD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5791
msgid ""
"  <p> This method synchronizes on an object\n"
"   referenced from a mutable field.\n"
"   This is unlikely to have useful semantics, since different\n"
"threads may be synchronizing on different objects.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5801
msgid "<a id='WS_WRITEOBJECT_SYNC'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5806
msgid ""
"WS: Class's writeObject() method is synchronized but nothing else is "
"(WS_WRITEOBJECT_SYNC)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5808
msgid ""
"<p> This class has a <code>writeObject()</code> method which is "
"synchronized;\n"
"however, no other method of the class is synchronized.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5816
msgid "<a id='RS_READOBJECT_SYNC'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5821
msgid "RS: Class's readObject() method is synchronized (RS_READOBJECT_SYNC)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5823
msgid ""
"<p> This serializable class defines a <code>readObject()</code> which is\n"
"synchronized.&nbsp; By definition, an object created by deserialization\n"
"is only reachable by one thread, and thus there is no need for\n"
"<code>readObject()</code> to be synchronized.&nbsp; If the "
"<code>readObject()</code>\n"
"method itself is causing the object to become visible to another thread,\n"
"that is an example of very dubious coding style.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5835
msgid "<a id='SC_START_IN_CTOR'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5840
msgid "SC: Constructor invokes Thread.start() (SC_START_IN_CTOR)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5842
msgid ""
"<p> The constructor starts a thread. This is likely to be wrong if\n"
" the class is ever extended/subclassed, since the thread will be started\n"
" before the subclass constructor is started.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5851
msgid "<a id='WA_NOT_IN_LOOP'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5856
msgid "Wa: Wait not in loop (WA_NOT_IN_LOOP)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5858
msgid ""
"<p> This method contains a call to <code>java.lang.Object.wait()</code>\n"
"which is not in a loop.&nbsp; If the monitor is used for multiple "
"conditions,\n"
"the condition the caller intended to wait for might not be the one\n"
"that actually occurred.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5868
msgid "<a id='WA_AWAIT_NOT_IN_LOOP'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5873
msgid "Wa: Condition.await() not in loop (WA_AWAIT_NOT_IN_LOOP)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5875
msgid ""
"<p> This method contains a call to "
"<code>java.util.concurrent.await()</code>\n"
" (or variants)\n"
"which is not in a loop.&nbsp; If the object is used for multiple "
"conditions,\n"
"the condition the caller intended to wait for might not be the one\n"
"that actually occurred.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5886
msgid "<a id='NO_NOTIFY_NOT_NOTIFYALL'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5891
msgid "No: Using notify() rather than notifyAll() (NO_NOTIFY_NOT_NOTIFYALL)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5893
msgid ""
"<p> This method calls <code>notify()</code> rather than "
"<code>notifyAll()</code>.&nbsp;\n"
"Java monitors are often used for multiple conditions.&nbsp; Calling "
"<code>notify()</code>\n"
"only wakes up one thread, meaning that the thread woken up might not be "
"the\n"
"one waiting for the condition that the caller just satisfied.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5903
msgid "<a id='UL_UNRELEASED_LOCK'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5908
msgid "UL: Method does not release lock on all paths (UL_UNRELEASED_LOCK)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5910
msgid ""
"<p> This method acquires a JSR-166 (<code>java.util.concurrent</code>) "
"lock,\n"
"but does not release it on all paths out of the method.  In general, the "
"correct idiom\n"
"for using a JSR-166 lock is:\n"
"</p>\n"
"<pre><code>Lock l = ...;\n"
"l.lock();\n"
"try {\n"
"    // do something\n"
"} finally {\n"
"    l.unlock();\n"
"}\n"
"</code></pre>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5928
msgid "<a id='UL_UNRELEASED_LOCK_EXCEPTION_PATH'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5933
msgid ""
"UL: Method does not release lock on all exception paths "
"(UL_UNRELEASED_LOCK_EXCEPTION_PATH)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5935
msgid ""
"<p> This method acquires a JSR-166 (<code>java.util.concurrent</code>) "
"lock,\n"
"but does not release it on all exception paths out of the method.  In "
"general, the correct idiom\n"
"for using a JSR-166 lock is:\n"
"</p>\n"
"<pre><code>Lock l = ...;\n"
"l.lock();\n"
"try {\n"
"    // do something\n"
"} finally {\n"
"    l.unlock();\n"
"}\n"
"</code></pre>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5953
msgid "<a id='MWN_MISMATCHED_WAIT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5958
msgid "MWN: Mismatched wait() (MWN_MISMATCHED_WAIT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5960
msgid ""
"<p> This method calls Object.wait() without obviously holding a lock\n"
"on the object.&nbsp;  Calling wait() without a lock held will result in\n"
"an <code>IllegalMonitorStateException</code> being thrown.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5969
msgid "<a id='MWN_MISMATCHED_NOTIFY'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5974
msgid "MWN: Mismatched notify() (MWN_MISMATCHED_NOTIFY)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5976
msgid ""
"<p> This method calls Object.notify() or Object.notifyAll() without "
"obviously holding a lock\n"
"on the object.&nbsp;  Calling notify() or notifyAll() without a lock held"
" will result in\n"
"an <code>IllegalMonitorStateException</code> being thrown.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5985
msgid "<a id='LI_LAZY_INIT_STATIC'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:5990
#, fuzzy
msgid "LI: Incorrect lazy initialization of static field (LI_LAZY_INIT_STATIC)"
msgstr ""
"LI: Incorrect lazy initialization of instance field "
"(LI_LAZY_INIT_INSTANCE)"

#: ../../generated/bugDescriptionList.inc:5992
msgid ""
"<p> This method contains an unsynchronized lazy initialization of a non-"
"volatile static field.\n"
"Because the compiler or processor may reorder instructions,\n"
"threads are not guaranteed to see a completely initialized object,\n"
"<em>if the method can be called by multiple threads</em>.\n"
"You can make the field volatile to correct the problem.\n"
"For more information, see the\n"
"<a href=\"http://www.cs.umd.edu/~pugh/java/memoryModel/\">Java Memory "
"Model web site</a>.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6006
msgid "<a id='LI_LAZY_INIT_UPDATE_STATIC'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6011
#, fuzzy
msgid ""
"LI: Incorrect lazy initialization and update of static field "
"(LI_LAZY_INIT_UPDATE_STATIC)"
msgstr ""
"LI: Incorrect lazy initialization of instance field "
"(LI_LAZY_INIT_INSTANCE)"

#: ../../generated/bugDescriptionList.inc:6013
msgid ""
"<p> This method contains an unsynchronized lazy initialization of a "
"static field.\n"
"After the field is set, the object stored into that location is further "
"updated or accessed.\n"
"The setting of the field is visible to other threads as soon as it is "
"set. If the\n"
"further accesses in the method that set the field serve to initialize the"
" object, then\n"
"you have a <em>very serious</em> multithreading bug, unless something "
"else prevents\n"
"any other thread from accessing the stored object until it is fully "
"initialized.\n"
"</p>\n"
"<p>Even if you feel confident that the method is never called by multiple"
"\n"
"threads, it might be better to not set the static field until the value\n"
"you are setting it to is fully populated/initialized.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6029
msgid "<a id='JLM_JSR166_UTILCONCURRENT_MONITORENTER'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6034
msgid ""
"JLM: Synchronization performed on util.concurrent instance "
"(JLM_JSR166_UTILCONCURRENT_MONITORENTER)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6036
msgid ""
"<p> This method performs synchronization on an object that is an instance"
" of\n"
"a class from the java.util.concurrent package (or its subclasses). "
"Instances\n"
"of these classes have their own concurrency control mechanisms that are "
"orthogonal to\n"
"the synchronization provided by the Java keyword "
"<code>synchronized</code>. For example,\n"
"synchronizing on an <code>AtomicBoolean</code> will not prevent other "
"threads\n"
"from modifying the  <code>AtomicBoolean</code>.</p>\n"
"<p>Such code may be correct, but should be carefully reviewed and "
"documented,\n"
"and may confuse people who have to maintain the code at a later date.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6050
msgid "<a id='JML_JSR166_CALLING_WAIT_RATHER_THAN_AWAIT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6055
msgid ""
"JLM: Using monitor style wait methods on util.concurrent abstraction "
"(JML_JSR166_CALLING_WAIT_RATHER_THAN_AWAIT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6057
msgid ""
"<p> This method calls\n"
"<code>wait()</code>,\n"
"<code>notify()</code> or\n"
"<code>notifyAll()()</code>\n"
"on an object that also provides an\n"
"<code>await()</code>,\n"
"<code>signal()</code>,\n"
"<code>signalAll()</code> method (such as util.concurrent Condition "
"objects).\n"
"This probably isn't what you want, and even if you do want it, you should"
" consider changing\n"
"your design, as other developers will find it exceptionally confusing.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6073
msgid "<a id='JLM_JSR166_LOCK_MONITORENTER'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6078
msgid "JLM: Synchronization performed on Lock (JLM_JSR166_LOCK_MONITORENTER)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6080
msgid ""
"<p> This method performs synchronization on an object that implements\n"
"java.util.concurrent.locks.Lock. Such an object is locked/unlocked\n"
"using\n"
"<code>acquire()</code>/<code>release()</code> rather\n"
"than using the <code>synchronized (...)</code> construct.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6091
msgid "<a id='SWL_SLEEP_WITH_LOCK_HELD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6096
msgid ""
"SWL: Method calls Thread.sleep() with a lock held "
"(SWL_SLEEP_WITH_LOCK_HELD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6098
msgid ""
"<p>\n"
"This method calls Thread.sleep() with a lock held.  This may result\n"
"in very poor performance and scalability, or a deadlock, since other "
"threads may\n"
"be waiting to acquire the lock.  It is a much better idea to call\n"
"wait() on the lock, which releases the lock and allows other threads\n"
"to run.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6111
msgid "<a id='RV_RETURN_VALUE_OF_PUTIFABSENT_IGNORED'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6116
msgid ""
"RV: Return value of putIfAbsent ignored, value passed to putIfAbsent "
"reused (RV_RETURN_VALUE_OF_PUTIFABSENT_IGNORED)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6118
msgid ""
"The <code>putIfAbsent</code> method is typically used to ensure that a\n"
"single value is associated with a given key (the first value for which "
"put\n"
"if absent succeeds).\n"
"If you ignore the return value and retain a reference to the value passed"
" in,\n"
"you run the risk of retaining a value that is not the one that is "
"associated with the key in the map.\n"
"If it matters which one you use and you use the one that isn't stored in "
"the map,\n"
"your program will behave incorrectly."
msgstr ""

#: ../../generated/bugDescriptionList.inc:6132
msgid "Bogus random noise (NOISE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6134
msgid ""
"Bogus random noise: intended to be useful as a control in data mining "
"experiments, not in finding actual bugs in software"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6139
msgid "<a id='NOISE_NULL_DEREFERENCE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6144
msgid ""
"NOISE: Bogus warning about a null pointer dereference "
"(NOISE_NULL_DEREFERENCE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6146
#: ../../generated/bugDescriptionList.inc:6160
#: ../../generated/bugDescriptionList.inc:6174
#: ../../generated/bugDescriptionList.inc:6188
msgid "<p>Bogus warning.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6153
msgid "<a id='NOISE_METHOD_CALL'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6158
msgid "NOISE: Bogus warning about a method call (NOISE_METHOD_CALL)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6167
msgid "<a id='NOISE_FIELD_REFERENCE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6172
msgid "NOISE: Bogus warning about a field reference (NOISE_FIELD_REFERENCE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6181
msgid "<a id='NOISE_OPERATION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6186
msgid "NOISE: Bogus warning about an operation (NOISE_OPERATION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6196
msgid "Performance (PERFORMANCE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6198
msgid "code that is not necessarily incorrect but may be inefficient"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6201
msgid "<a id='HSC_HUGE_SHARED_STRING_CONSTANT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6206
msgid ""
"HSC: Huge string constants is duplicated across multiple class files "
"(HSC_HUGE_SHARED_STRING_CONSTANT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6208
msgid ""
"      <p>\n"
"    A large String constant is duplicated across multiple class files.\n"
"    This is likely because a final field is initialized to a String "
"constant, and the Java language\n"
"    mandates that all references to a final field from other classes be "
"inlined into\n"
"that classfile. See <a "
"href=\"http://bugs.java.com/bugdatabase/view_bug.do?bug_id=6447475\">JDK "
"bug 6447475</a>\n"
"    for a description of an occurrence of this bug in the JDK and how "
"resolving it reduced\n"
"    the size of the JDK by 1 megabyte.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6222
msgid "<a id='DMI_BLOCKING_METHODS_ON_URL'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6227
msgid ""
"Dm: The equals and hashCode methods of URL are blocking "
"(DMI_BLOCKING_METHODS_ON_URL)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6229
msgid ""
"  <p> The equals and hashCode\n"
"method of URL perform domain name resolution, this can result in a big "
"performance hit.\n"
"See <a href=\"http://michaelscharf.blogspot.com/2006/11/javaneturlequals-"
"and-hashcode-make.html\">http://michaelscharf.blogspot.com/2006/11"
"/javaneturlequals-and-hashcode-make.html</a> for more information.\n"
"Consider using <code>java.net.URI</code> instead.\n"
"   </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6240
msgid "<a id='DMI_COLLECTION_OF_URLS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6245
msgid "Dm: Maps and sets of URLs can be performance hogs (DMI_COLLECTION_OF_URLS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6247
msgid ""
"  <p> This method or field is or uses a Map or Set of URLs. Since both "
"the equals and hashCode\n"
"method of URL perform domain name resolution, this can result in a big "
"performance hit.\n"
"See <a href=\"http://michaelscharf.blogspot.com/2006/11/javaneturlequals-"
"and-hashcode-make.html\">http://michaelscharf.blogspot.com/2006/11"
"/javaneturlequals-and-hashcode-make.html</a> for more information.\n"
"Consider using <code>java.net.URI</code> instead.\n"
"   </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6258
msgid "<a id='DM_STRING_CTOR'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6263
msgid ""
"Dm: Method invokes inefficient new String(String) constructor "
"(DM_STRING_CTOR)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6265
msgid ""
"<p> Using the <code>java.lang.String(String)</code> constructor wastes "
"memory\n"
"because the object so constructed will be functionally indistinguishable\n"
"from the <code>String</code> passed as a parameter.&nbsp; Just use the\n"
"argument <code>String</code> directly.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6275
msgid "<a id='DM_STRING_VOID_CTOR'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6280
msgid ""
"Dm: Method invokes inefficient new String() constructor "
"(DM_STRING_VOID_CTOR)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6282
msgid ""
"<p> Creating a new <code>java.lang.String</code> object using the\n"
"no-argument constructor wastes memory because the object so created will\n"
"be functionally indistinguishable from the empty string constant\n"
"<code>\"\"</code>.&nbsp; Java guarantees that identical string constants\n"
"will be represented by the same <code>String</code> object.&nbsp; "
"Therefore,\n"
"you should just use the empty string constant directly.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6294
msgid "<a id='DM_STRING_TOSTRING'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6299
msgid "Dm: Method invokes toString() method on a String (DM_STRING_TOSTRING)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6301
msgid ""
"<p> Calling <code>String.toString()</code> is just a redundant operation."
"\n"
"Just use the String.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6309
msgid "<a id='DM_GC'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6314
msgid ""
"Dm: Explicit garbage collection; extremely dubious except in benchmarking"
" code (DM_GC)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6316
msgid ""
"<p> Code explicitly invokes garbage collection.\n"
"Except for specific use in benchmarking, this is very dubious.</p>\n"
"<p>In the past, situations where people have explicitly invoked\n"
"the garbage collector in routines such as close or finalize methods\n"
"has led to huge performance black holes. Garbage collection\n"
" can be expensive. Any situation that forces hundreds or thousands\n"
" of garbage collections will bring the machine to a crawl.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6329
msgid "<a id='DM_BOOLEAN_CTOR'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6334
msgid ""
"Dm: Method invokes inefficient Boolean constructor; use "
"Boolean.valueOf(...) instead (DM_BOOLEAN_CTOR)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6336
msgid ""
"<p> Creating new instances of <code>java.lang.Boolean</code> wastes\n"
"memory, since <code>Boolean</code> objects are immutable and there are\n"
"only two useful values of this type.&nbsp; Use the "
"<code>Boolean.valueOf()</code>\n"
"method (or Java 1.5 autoboxing) to create <code>Boolean</code> objects "
"instead.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6346
msgid "<a id='DM_NUMBER_CTOR'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6351
msgid ""
"Bx: Method invokes inefficient Number constructor; use static valueOf "
"instead (DM_NUMBER_CTOR)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6353
msgid ""
"<p>\n"
"Using <code>new Integer(int)</code> is guaranteed to always result in a "
"new object whereas\n"
"<code>Integer.valueOf(int)</code> allows caching of values to be done by "
"the compiler, class library, or JVM.\n"
"Using of cached values avoids object allocation and the code will be "
"faster.\n"
"</p>\n"
"<p>\n"
"Values between -128 and 127 are guaranteed to have corresponding cached "
"instances\n"
"and using <code>valueOf</code> is approximately 3.5 times faster than "
"using constructor.\n"
"For values outside the constant range the performance of both styles is "
"the same.\n"
"</p>\n"
"<p>\n"
"Unless the class must be compatible with JVMs predating Java 1.5,\n"
"use either autoboxing or the <code>valueOf()</code> method when creating "
"instances of\n"
"<code>Long</code>, <code>Integer</code>, <code>Short</code>, "
"<code>Character</code>, and <code>Byte</code>.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6374
msgid "<a id='DM_FP_NUMBER_CTOR'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6379
msgid ""
"Bx: Method invokes inefficient floating-point Number constructor; use "
"static valueOf instead (DM_FP_NUMBER_CTOR)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6381
msgid ""
"<p>\n"
"Using <code>new Double(double)</code> is guaranteed to always result in a"
" new object whereas\n"
"<code>Double.valueOf(double)</code> allows caching of values to be done "
"by the compiler, class library, or JVM.\n"
"Using of cached values avoids object allocation and the code will be "
"faster.\n"
"</p>\n"
"<p>\n"
"Unless the class must be compatible with JVMs predating Java 1.5,\n"
"use either autoboxing or the <code>valueOf()</code> method when creating "
"instances of <code>Double</code> and <code>Float</code>.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6396
msgid "<a id='DM_BOXED_PRIMITIVE_TOSTRING'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6401
msgid ""
"Bx: Method allocates a boxed primitive just to call toString "
"(DM_BOXED_PRIMITIVE_TOSTRING)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6403
msgid ""
"<p>A boxed primitive is allocated just to call toString(). It is more "
"effective to just use the static\n"
"form of toString which takes the primitive value. So,</p>\n"
"<table>\n"
"   <tr><th>Replace...</th><th>With this...</th></tr>\n"
"   <tr><td>new "
"Integer(1).toString()</td><td>Integer.toString(1)</td></tr>\n"
"   <tr><td>new Long(1).toString()</td><td>Long.toString(1)</td></tr>\n"
"   <tr><td>new "
"Float(1.0).toString()</td><td>Float.toString(1.0)</td></tr>\n"
"   <tr><td>new "
"Double(1.0).toString()</td><td>Double.toString(1.0)</td></tr>\n"
"   <tr><td>new Byte(1).toString()</td><td>Byte.toString(1)</td></tr>\n"
"   <tr><td>new Short(1).toString()</td><td>Short.toString(1)</td></tr>\n"
"   <tr><td>new "
"Boolean(true).toString()</td><td>Boolean.toString(true)</td></tr>\n"
"</table>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6421
msgid "<a id='DM_BOXED_PRIMITIVE_FOR_PARSING'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6426
msgid "Bx: Boxing/unboxing to parse a primitive (DM_BOXED_PRIMITIVE_FOR_PARSING)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6428
msgid ""
"<p>A boxed primitive is created from a String, just to extract the "
"unboxed primitive value.\n"
"It is more efficient to just call the static parseXXX method.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6436
msgid "<a id='DM_BOXED_PRIMITIVE_FOR_COMPARE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6441
msgid "Bx: Boxing a primitive to compare (DM_BOXED_PRIMITIVE_FOR_COMPARE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6443
msgid ""
"<p>A boxed primitive is created just to call compareTo method. It's more "
"efficient to use static compare method\n"
"(for double and float since Java 1.4, for other primitive types since "
"Java 1.7) which works on primitives directly.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6452
msgid "<a id='BX_UNBOXED_AND_COERCED_FOR_TERNARY_OPERATOR'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6457
msgid ""
"Bx: Primitive value is unboxed and coerced for ternary operator "
"(BX_UNBOXED_AND_COERCED_FOR_TERNARY_OPERATOR)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6459
msgid ""
"  <p>A wrapped primitive value is unboxed and converted to another "
"primitive type as part of the\n"
"evaluation of a conditional ternary operator (the <code> b ? e1 : "
"e2</code> operator). The\n"
"semantics of Java mandate that if <code>e1</code> and <code>e2</code> are"
" wrapped\n"
"numeric values, the values are unboxed and converted/coerced to their "
"common type (e.g,\n"
"if <code>e1</code> is of type <code>Integer</code>\n"
"and <code>e2</code> is of type <code>Float</code>, then <code>e1</code> "
"is unboxed,\n"
"converted to a floating point value, and boxed. See JLS Section 15.25.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6473
msgid "<a id='BX_UNBOXING_IMMEDIATELY_REBOXED'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6478
msgid ""
"Bx: Boxed value is unboxed and then immediately reboxed "
"(BX_UNBOXING_IMMEDIATELY_REBOXED)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6480
msgid ""
"  <p>A boxed value is unboxed and then immediately reboxed.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6488
msgid "<a id='BX_BOXING_IMMEDIATELY_UNBOXED'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6493
msgid ""
"Bx: Primitive value is boxed and then immediately unboxed "
"(BX_BOXING_IMMEDIATELY_UNBOXED)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6495
msgid ""
"  <p>A primitive is boxed, and then immediately unboxed. This probably is"
" due to a manual\n"
"    boxing in a place where an unboxed value is required, thus forcing "
"the compiler\n"
"to immediately undo the work of the boxing.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6505
msgid "<a id='BX_BOXING_IMMEDIATELY_UNBOXED_TO_PERFORM_COERCION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6510
msgid ""
"Bx: Primitive value is boxed then unboxed to perform primitive coercion "
"(BX_BOXING_IMMEDIATELY_UNBOXED_TO_PERFORM_COERCION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6512
msgid ""
"  <p>A primitive boxed value constructed and then immediately converted "
"into a different primitive type\n"
"(e.g., <code>new Double(d).intValue()</code>). Just perform direct "
"primitive coercion (e.g., <code>(int) d</code>).</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6520
msgid "<a id='DM_NEW_FOR_GETCLASS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6525
msgid ""
"Dm: Method allocates an object, only to get the class object "
"(DM_NEW_FOR_GETCLASS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6527
msgid ""
"<p>This method allocates an object just to call getClass() on it, in "
"order to\n"
"retrieve the Class object for it. It is simpler to just access the .class"
" property of the class.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6535
msgid "<a id='DM_NEXTINT_VIA_NEXTDOUBLE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6540
msgid ""
"Dm: Use the nextInt method of Random rather than nextDouble to generate a"
" random integer (DM_NEXTINT_VIA_NEXTDOUBLE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6542
msgid ""
"  <p>If <code>r</code> is a <code>java.util.Random</code>, you can "
"generate a random number from <code>0</code> to <code>n-1</code>\n"
"using <code>r.nextInt(n)</code>, rather than using "
"<code>(int)(r.nextDouble() * n)</code>.\n"
"</p>\n"
"<p>The argument to nextInt must be positive. If, for example, you want to"
" generate a random\n"
"value from -99 to 0, use <code>-r.nextInt(100)</code>.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6554
msgid "<a id='SS_SHOULD_BE_STATIC'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6559
msgid "SS: Unread field: should this field be static? (SS_SHOULD_BE_STATIC)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6561
msgid ""
"<p> This class contains an instance final field that\n"
" is initialized to a compile-time static value.\n"
" Consider making the field static.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6570
msgid "<a id='UUF_UNUSED_FIELD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6575
msgid "UuF: Unused field (UUF_UNUSED_FIELD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6577
msgid ""
"<p> This field is never used.&nbsp; Consider removing it from the "
"class.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6584
msgid "<a id='URF_UNREAD_FIELD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6589
msgid "UrF: Unread field (URF_UNREAD_FIELD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6591
msgid ""
"<p> This field is never read.&nbsp; Consider removing it from the "
"class.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6598
msgid "<a id='SIC_INNER_SHOULD_BE_STATIC'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6603
msgid "SIC: Should be a static inner class (SIC_INNER_SHOULD_BE_STATIC)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6605
msgid ""
"  <p> This class is an inner class, but does not use its embedded "
"reference\n"
"  to the object which created it.&nbsp; This reference makes the "
"instances\n"
"  of the class larger, and may keep the reference to the creator object\n"
"  alive longer than necessary.&nbsp; If possible, the class should be\n"
"   made static.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6617
msgid "<a id='SIC_INNER_SHOULD_BE_STATIC_NEEDS_THIS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6622
msgid ""
"SIC: Could be refactored into a static inner class "
"(SIC_INNER_SHOULD_BE_STATIC_NEEDS_THIS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6624
msgid ""
"  <p> This class is an inner class, but does not use its embedded "
"reference\n"
"  to the object which created it except during construction of the\n"
"inner object.&nbsp; This reference makes the instances\n"
"  of the class larger, and may keep the reference to the creator object\n"
"  alive longer than necessary.&nbsp; If possible, the class should be\n"
"  made into a <em>static</em> inner class. Since the reference to the\n"
"   outer object is required during construction of the inner instance,\n"
"   the inner class will need to be refactored so as to\n"
"   pass a reference to the outer instance to the constructor\n"
"   for the inner class.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6640
msgid "<a id='SIC_INNER_SHOULD_BE_STATIC_ANON'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6645
msgid ""
"SIC: Could be refactored into a named static inner class "
"(SIC_INNER_SHOULD_BE_STATIC_ANON)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6647
msgid ""
"  <p> This class is an inner class, but does not use its embedded "
"reference\n"
"  to the object which created it.&nbsp; This reference makes the "
"instances\n"
"  of the class larger, and may keep the reference to the creator object\n"
"  alive longer than necessary.&nbsp; If possible, the class should be\n"
"  made into a <em>static</em> inner class. Since anonymous inner\n"
"classes cannot be marked as static, doing this will require refactoring\n"
"the inner class so that it is a named inner class.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6660
msgid "<a id='UPM_UNCALLED_PRIVATE_METHOD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6665
msgid "UPM: Private method is never called (UPM_UNCALLED_PRIVATE_METHOD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6667
msgid ""
"<p> This private method is never called. Although it is\n"
"possible that the method will be invoked through reflection,\n"
"it is more likely that the method is never used, and should be\n"
"removed.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6677
msgid "<a id='SBSC_USE_STRINGBUFFER_CONCATENATION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6682
msgid ""
"SBSC: Method concatenates strings using + in a loop "
"(SBSC_USE_STRINGBUFFER_CONCATENATION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6684
msgid ""
"<p> The method seems to be building a String using concatenation in a "
"loop.\n"
"In each iteration, the String is converted to a "
"StringBuffer/StringBuilder,\n"
"   appended to, and converted back to a String.\n"
"   This can lead to a cost quadratic in the number of iterations,\n"
"   as the growing string is recopied in each iteration. </p>\n"
"\n"
"<p>Better performance can be obtained by using\n"
"a StringBuffer (or StringBuilder in Java 1.5) explicitly.</p>\n"
"\n"
"<p> For example:</p>\n"
"<pre><code>// This is bad\n"
"String s = \"\";\n"
"for (int i = 0; i &lt; field.length; ++i) {\n"
"    s = s + field[i];\n"
"}\n"
"\n"
"// This is better\n"
"StringBuffer buf = new StringBuffer();\n"
"for (int i = 0; i &lt; field.length; ++i) {\n"
"    buf.append(field[i]);\n"
"}\n"
"String s = buf.toString();\n"
"</code></pre>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6713
msgid "<a id='IIL_ELEMENTS_GET_LENGTH_IN_LOOP'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6718
msgid ""
"IIL: NodeList.getLength() called in a loop "
"(IIL_ELEMENTS_GET_LENGTH_IN_LOOP)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6720
msgid ""
"<p> The method calls NodeList.getLength() inside the loop and NodeList "
"was produced by getElementsByTagName call.\n"
"This NodeList doesn't store its length, but computes it every time in not"
" very optimal way.\n"
"Consider storing the length to the variable before the loop.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6730
msgid "<a id='IIL_PREPARE_STATEMENT_IN_LOOP'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6735
msgid ""
"IIL: Method calls prepareStatement in a loop "
"(IIL_PREPARE_STATEMENT_IN_LOOP)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6737
msgid ""
"<p> The method calls Connection.prepareStatement inside the loop passing "
"the constant arguments.\n"
"If the PreparedStatement should be executed several times there's no "
"reason to recreate it for each loop iteration.\n"
"Move this call outside of the loop.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6746
msgid "<a id='IIL_PATTERN_COMPILE_IN_LOOP'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6751
msgid "IIL: Method calls Pattern.compile in a loop (IIL_PATTERN_COMPILE_IN_LOOP)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6753
msgid ""
"<p> The method calls Pattern.compile inside the loop passing the constant"
" arguments.\n"
"If the Pattern should be used several times there's no reason to compile "
"it for each loop iteration.\n"
"Move this call outside of the loop or even into static final field.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6762
msgid "<a id='IIL_PATTERN_COMPILE_IN_LOOP_INDIRECT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6767
msgid ""
"IIL: Method compiles the regular expression in a loop "
"(IIL_PATTERN_COMPILE_IN_LOOP_INDIRECT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6769
msgid ""
"<p> The method creates the same regular expression inside the loop, so it"
" will be compiled every iteration.\n"
"It would be more optimal to precompile this regular expression using "
"Pattern.compile outside of the loop.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6777
msgid "<a id='IIO_INEFFICIENT_INDEX_OF'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6782
msgid "IIO: Inefficient use of String.indexOf(String) (IIO_INEFFICIENT_INDEX_OF)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6784
msgid ""
"<p> This code passes a constant string of length 1 to String.indexOf().\n"
"It is more efficient to use the integer implementations of "
"String.indexOf().\n"
"f. e. call <code>myString.indexOf('.')</code> instead of "
"<code>myString.indexOf(\".\")</code></p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6793
msgid "<a id='IIO_INEFFICIENT_LAST_INDEX_OF'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6798
msgid ""
"IIO: Inefficient use of String.lastIndexOf(String) "
"(IIO_INEFFICIENT_LAST_INDEX_OF)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6800
msgid ""
"<p> This code passes a constant string of length 1 to "
"String.lastIndexOf().\n"
"It is more efficient to use the integer implementations of "
"String.lastIndexOf().\n"
"f. e. call <code>myString.lastIndexOf('.')</code> instead of "
"<code>myString.lastIndexOf(\".\")</code></p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6809
msgid "<a id='ITA_INEFFICIENT_TO_ARRAY'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6814
msgid ""
"ITA: Method uses toArray() with zero-length array argument "
"(ITA_INEFFICIENT_TO_ARRAY)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6816
msgid ""
"<p> This method uses the toArray() method of a collection derived class, "
"and passes\n"
"in a zero-length prototype array argument.  It is more efficient to use\n"
"<code>myCollection.toArray(new Foo[myCollection.size()])</code>\n"
"If the array passed in is big enough to store all of the\n"
"elements of the collection, then it is populated and returned\n"
"directly. This avoids the need to create a second array\n"
"(by reflection) to return as the result.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6829
msgid "<a id='WMI_WRONG_MAP_ITERATOR'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6834
msgid ""
"WMI: Inefficient use of keySet iterator instead of entrySet iterator "
"(WMI_WRONG_MAP_ITERATOR)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6836
msgid ""
"<p> This method accesses the value of a Map entry, using a key that was "
"retrieved from\n"
"a keySet iterator. It is more efficient to use an iterator on the "
"entrySet of the map, to avoid the\n"
"Map.get(key) lookup.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6845
msgid "<a id='UM_UNNECESSARY_MATH'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6850
msgid ""
"UM: Method calls static Math class method on a constant value "
"(UM_UNNECESSARY_MATH)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6852
msgid ""
"<p> This method uses a static method from java.lang.Math on a constant "
"value. This method's\n"
"result in this case, can be determined statically, and is faster and "
"sometimes more accurate to\n"
"just use the constant. Methods detected are:\n"
"</p>\n"
"<table>\n"
"<tr>\n"
"   <th>Method</th> <th>Parameter</th>\n"
"</tr>\n"
"<tr>\n"
"   <td>abs</td> <td>-any-</td>\n"
"</tr>\n"
"<tr>\n"
"   <td>acos</td> <td>0.0 or 1.0</td>\n"
"</tr>\n"
"<tr>\n"
"   <td>asin</td> <td>0.0 or 1.0</td>\n"
"</tr>\n"
"<tr>\n"
"   <td>atan</td> <td>0.0 or 1.0</td>\n"
"</tr>\n"
"<tr>\n"
"   <td>atan2</td> <td>0.0</td>\n"
"</tr>\n"
"<tr>\n"
"   <td>cbrt</td> <td>0.0 or 1.0</td>\n"
"</tr>\n"
"<tr>\n"
"   <td>ceil</td> <td>-any-</td>\n"
"</tr>\n"
"<tr>\n"
"   <td>cos</td> <td>0.0</td>\n"
"</tr>\n"
"<tr>\n"
"   <td>cosh</td> <td>0.0</td>\n"
"</tr>\n"
"<tr>\n"
"   <td>exp</td> <td>0.0 or 1.0</td>\n"
"</tr>\n"
"<tr>\n"
"   <td>expm1</td> <td>0.0</td>\n"
"</tr>\n"
"<tr>\n"
"   <td>floor</td> <td>-any-</td>\n"
"</tr>\n"
"<tr>\n"
"   <td>log</td> <td>0.0 or 1.0</td>\n"
"</tr>\n"
"<tr>\n"
"   <td>log10</td> <td>0.0 or 1.0</td>\n"
"</tr>\n"
"<tr>\n"
"   <td>rint</td> <td>-any-</td>\n"
"</tr>\n"
"<tr>\n"
"   <td>round</td> <td>-any-</td>\n"
"</tr>\n"
"<tr>\n"
"   <td>sin</td> <td>0.0</td>\n"
"</tr>\n"
"<tr>\n"
"   <td>sinh</td> <td>0.0</td>\n"
"</tr>\n"
"<tr>\n"
"   <td>sqrt</td> <td>0.0 or 1.0</td>\n"
"</tr>\n"
"<tr>\n"
"   <td>tan</td> <td>0.0</td>\n"
"</tr>\n"
"<tr>\n"
"   <td>tanh</td> <td>0.0</td>\n"
"</tr>\n"
"<tr>\n"
"   <td>toDegrees</td> <td>0.0 or 1.0</td>\n"
"</tr>\n"
"<tr>\n"
"   <td>toRadians</td> <td>0.0</td>\n"
"</tr>\n"
"</table>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6936
msgid "<a id='IMA_INEFFICIENT_MEMBER_ACCESS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6941
msgid ""
"IMA: Method accesses a private member variable of owning class "
"(IMA_INEFFICIENT_MEMBER_ACCESS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6943
msgid ""
"<p>\n"
"This method of an inner class reads from or writes to a private member "
"variable of the owning class,\n"
"or calls a private method of the owning class. The compiler must generate"
" a special method to access this\n"
"private member, causing this to be less efficient. Relaxing the "
"protection of the member variable or method\n"
"will allow the compiler to treat this as a normal access.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6956
msgid "Security (SECURITY)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6958
msgid ""
"A use of untrusted input in a way that could create a remotely "
"exploitable security vulnerability."
msgstr ""

#: ../../generated/bugDescriptionList.inc:6962
msgid "<a id='XSS_REQUEST_PARAMETER_TO_SEND_ERROR'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6967
msgid ""
"XSS: Servlet reflected cross site scripting vulnerability in error page "
"(XSS_REQUEST_PARAMETER_TO_SEND_ERROR)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6969
msgid ""
"    <p>This code directly writes an HTTP parameter to a Server error page"
" (using HttpServletResponse.sendError). Echoing this untrusted input "
"allows\n"
"for a reflected cross site scripting\n"
"vulnerability. See <a href=\"http://en.wikipedia.org/wiki/Cross-"
"site_scripting\">http://en.wikipedia.org/wiki/Cross-site_scripting</a>\n"
"for more information.</p>\n"
"<p>SpotBugs looks only for the most blatant, obvious cases of cross site "
"scripting.\n"
"If SpotBugs found <em>any</em>, you <em>almost certainly</em> have more "
"cross site scripting\n"
"vulnerabilities that SpotBugs doesn't report. If you are concerned about "
"cross site scripting, you should seriously\n"
"consider using a commercial static analysis or pen-testing tool.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6985
msgid "<a id='XSS_REQUEST_PARAMETER_TO_SERVLET_WRITER'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6990
msgid ""
"XSS: Servlet reflected cross site scripting vulnerability "
"(XSS_REQUEST_PARAMETER_TO_SERVLET_WRITER)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:6992
msgid ""
"    <p>This code directly writes an HTTP parameter to Servlet output, "
"which allows for a reflected cross site scripting\n"
"vulnerability. See <a href=\"http://en.wikipedia.org/wiki/Cross-"
"site_scripting\">http://en.wikipedia.org/wiki/Cross-site_scripting</a>\n"
"for more information.</p>\n"
"<p>SpotBugs looks only for the most blatant, obvious cases of cross site "
"scripting.\n"
"If SpotBugs found <em>any</em>, you <em>almost certainly</em> have more "
"cross site scripting\n"
"vulnerabilities that SpotBugs doesn't report. If you are concerned about "
"cross site scripting, you should seriously\n"
"consider using a commercial static analysis or pen-testing tool.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7007
msgid "<a id='XSS_REQUEST_PARAMETER_TO_JSP_WRITER'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7012
msgid ""
"XSS: JSP reflected cross site scripting vulnerability "
"(XSS_REQUEST_PARAMETER_TO_JSP_WRITER)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7014
msgid ""
"    <p>This code directly writes an HTTP parameter to JSP output, which "
"allows for a cross site scripting\n"
"vulnerability. See <a href=\"http://en.wikipedia.org/wiki/Cross-"
"site_scripting\">http://en.wikipedia.org/wiki/Cross-site_scripting</a>\n"
"for more information.</p>\n"
"<p>SpotBugs looks only for the most blatant, obvious cases of cross site "
"scripting.\n"
"If SpotBugs found <em>any</em>, you <em>almost certainly</em> have more "
"cross site scripting\n"
"vulnerabilities that SpotBugs doesn't report. If you are concerned about "
"cross site scripting, you should seriously\n"
"consider using a commercial static analysis or pen-testing tool.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7028
msgid "<a id='HRS_REQUEST_PARAMETER_TO_HTTP_HEADER'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7033
msgid ""
"HRS: HTTP Response splitting vulnerability "
"(HRS_REQUEST_PARAMETER_TO_HTTP_HEADER)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7035
msgid ""
"    <p>This code directly writes an HTTP parameter to an HTTP header, "
"which allows for a HTTP response splitting\n"
"vulnerability. See <a "
"href=\"http://en.wikipedia.org/wiki/HTTP_response_splitting\">http://en.wikipedia.org/wiki/HTTP_response_splitting</a>"
"\n"
"for more information.</p>\n"
"<p>SpotBugs looks only for the most blatant, obvious cases of HTTP "
"response splitting.\n"
"If SpotBugs found <em>any</em>, you <em>almost certainly</em> have more\n"
"vulnerabilities that SpotBugs doesn't report. If you are concerned about "
"HTTP response splitting, you should seriously\n"
"consider using a commercial static analysis or pen-testing tool.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7050
msgid "<a id='HRS_REQUEST_PARAMETER_TO_COOKIE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7055
msgid ""
"HRS: HTTP cookie formed from untrusted input "
"(HRS_REQUEST_PARAMETER_TO_COOKIE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7057
msgid ""
"    <p>This code constructs an HTTP Cookie using an untrusted HTTP "
"parameter. If this cookie is added to an HTTP response, it will allow a "
"HTTP response splitting\n"
"vulnerability. See <a "
"href=\"http://en.wikipedia.org/wiki/HTTP_response_splitting\">http://en.wikipedia.org/wiki/HTTP_response_splitting</a>"
"\n"
"for more information.</p>\n"
"<p>SpotBugs looks only for the most blatant, obvious cases of HTTP "
"response splitting.\n"
"If SpotBugs found <em>any</em>, you <em>almost certainly</em> have more\n"
"vulnerabilities that SpotBugs doesn't report. If you are concerned about "
"HTTP response splitting, you should seriously\n"
"consider using a commercial static analysis or pen-testing tool.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7072
msgid "<a id='PT_ABSOLUTE_PATH_TRAVERSAL'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7077
msgid "PT: Absolute path traversal in servlet (PT_ABSOLUTE_PATH_TRAVERSAL)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7079
msgid ""
"    <p>The software uses an HTTP request parameter to construct a "
"pathname that should be within a restricted directory,\n"
"but it does not properly neutralize absolute path sequences such as "
"\"/abs/path\" that can resolve to a location that is outside of that "
"directory.\n"
"\n"
"See <a "
"href=\"http://cwe.mitre.org/data/definitions/36.html\">http://cwe.mitre.org/data/definitions/36.html</a>"
"\n"
"for more information.</p>\n"
"<p>SpotBugs looks only for the most blatant, obvious cases of absolute "
"path traversal.\n"
"If SpotBugs found <em>any</em>, you <em>almost certainly</em> have more\n"
"vulnerabilities that SpotBugs doesn't report. If you are concerned about "
"absolute path traversal, you should seriously\n"
"consider using a commercial static analysis or pen-testing tool.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7096
msgid "<a id='PT_RELATIVE_PATH_TRAVERSAL'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7101
msgid "PT: Relative path traversal in servlet (PT_RELATIVE_PATH_TRAVERSAL)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7103
msgid ""
"    <p>The software uses an HTTP request parameter to construct a "
"pathname that should be within a restricted directory, but it does not "
"properly neutralize sequences such as \"..\" that can resolve to a "
"location that is outside of that directory.\n"
"\n"
"See <a "
"href=\"http://cwe.mitre.org/data/definitions/23.html\">http://cwe.mitre.org/data/definitions/23.html</a>"
"\n"
"for more information.</p>\n"
"<p>SpotBugs looks only for the most blatant, obvious cases of relative "
"path traversal.\n"
"If SpotBugs found <em>any</em>, you <em>almost certainly</em> have more\n"
"vulnerabilities that SpotBugs doesn't report. If you are concerned about "
"relative path traversal, you should seriously\n"
"consider using a commercial static analysis or pen-testing tool.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7119
msgid "<a id='DMI_CONSTANT_DB_PASSWORD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7124
msgid "Dm: Hardcoded constant database password (DMI_CONSTANT_DB_PASSWORD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7126
msgid ""
"    <p>This code creates a database connect using a hardcoded, constant "
"password. Anyone with access to either the source code or the compiled "
"code can\n"
"    easily learn the password.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7136
msgid "<a id='DMI_EMPTY_DB_PASSWORD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7141
msgid "Dm: Empty database password (DMI_EMPTY_DB_PASSWORD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7143
msgid ""
"    <p>This code creates a database connect using a blank or empty "
"password. This indicates that the database is not protected by a "
"password.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7152
msgid "<a id='SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7157
msgid ""
"SQL: Nonconstant string passed to execute or addBatch method on an SQL "
"statement (SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7159
msgid ""
"  <p>The method invokes the execute or addBatch method on an SQL "
"statement with a String that seems\n"
"to be dynamically generated. Consider using\n"
"a prepared statement instead. It is more efficient and less vulnerable to"
"\n"
"SQL injection attacks.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7170
msgid "<a id='SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7175
msgid ""
"SQL: A prepared statement is generated from a nonconstant String "
"(SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7177
msgid ""
"  <p>The code creates an SQL prepared statement from a nonconstant "
"String.\n"
"If unchecked, tainted data from a user is used in building this String, "
"SQL injection could\n"
"be used to make the prepared statement do something unexpected and "
"undesirable.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7188
msgid "Dodgy code (STYLE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7190
msgid ""
"code that is confusing, anomalous, or written in a way that leads itself "
"to errors. Examples include dead local stores, switch fall through, "
"unconfirmed casts, and redundant null check of value known to be null. "
"More false positives accepted. In previous versions of SpotBugs, this "
"category was known as Style."
msgstr ""

#: ../../generated/bugDescriptionList.inc:7199
msgid "<a id='CAA_COVARIANT_ARRAY_FIELD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7204
msgid "CAA: Covariant array assignment to a field (CAA_COVARIANT_ARRAY_FIELD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7206
msgid ""
"<p>Array of covariant type is assigned to a field. This is confusing and "
"may lead to ArrayStoreException at runtime\n"
"if the reference of some other type will be stored in this array later "
"like in the following code:\n"
"</p>\n"
"<pre><code>Number[] arr = new Integer[10];\n"
"arr[0] = 1.0;\n"
"</code></pre>\n"
"<p>Consider changing the type of created array or the field type.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7219
msgid "<a id='CAA_COVARIANT_ARRAY_RETURN'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7224
msgid ""
"CAA: Covariant array is returned from the method "
"(CAA_COVARIANT_ARRAY_RETURN)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7226
msgid ""
"<p>Array of covariant type is returned from the method. This is confusing"
" and may lead to ArrayStoreException at runtime\n"
"if the calling code will try to store the reference of some other type in"
" the returned array.\n"
"</p>\n"
"<p>Consider changing the type of created array or the method return "
"type.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7236
msgid "<a id='CAA_COVARIANT_ARRAY_LOCAL'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7241
msgid ""
"CAA: Covariant array assignment to a local variable "
"(CAA_COVARIANT_ARRAY_LOCAL)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7243
msgid ""
"<p>Array of covariant type is assigned to a local variable. This is "
"confusing and may lead to ArrayStoreException at runtime\n"
"if the reference of some other type will be stored in this array later "
"like in the following code:\n"
"</p>\n"
"<pre><code>Number[] arr = new Integer[10];\n"
"arr[0] = 1.0;\n"
"</code></pre>\n"
"<p>Consider changing the type of created array or the local variable "
"type.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7256
msgid "<a id='DMI_UNSUPPORTED_METHOD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7261
msgid "Dm: Call to unsupported method (DMI_UNSUPPORTED_METHOD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7263
msgid ""
"    <p>All targets of this method invocation throw an "
"UnsupportedOperationException.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7272
msgid "<a id='DMI_THREAD_PASSED_WHERE_RUNNABLE_EXPECTED'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7277
msgid ""
"Dm: Thread passed where Runnable expected "
"(DMI_THREAD_PASSED_WHERE_RUNNABLE_EXPECTED)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7279
msgid ""
"  <p> A Thread object is passed as a parameter to a method where\n"
"a Runnable is expected. This is rather unusual, and may indicate a logic "
"error\n"
"or cause unexpected behavior.\n"
"   </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7289
msgid "<a id='NP_DEREFERENCE_OF_READLINE_VALUE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7294
msgid ""
"NP: Dereference of the result of readLine() without nullcheck "
"(NP_DEREFERENCE_OF_READLINE_VALUE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7296
msgid ""
"  <p> The result of invoking readLine() is dereferenced without checking "
"to see if the result is null. If there are no more lines of text\n"
"to read, readLine() will return null and dereferencing that will generate"
" a null pointer exception.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7305
msgid "<a id='NP_IMMEDIATE_DEREFERENCE_OF_READLINE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7310
msgid ""
"NP: Immediate dereference of the result of readLine() "
"(NP_IMMEDIATE_DEREFERENCE_OF_READLINE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7312
msgid ""
"  <p> The result of invoking readLine() is immediately dereferenced. If "
"there are no more lines of text\n"
"to read, readLine() will return null and dereferencing that will generate"
" a null pointer exception.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7321
msgid "<a id='RV_REM_OF_RANDOM_INT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7326
msgid "RV: Remainder of 32-bit signed random integer (RV_REM_OF_RANDOM_INT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7328
msgid ""
"<p> This code generates a random signed integer and then computes\n"
"the remainder of that value modulo another value. Since the random\n"
"number can be negative, the result of the remainder operation\n"
"can also be negative. Be sure this is intended, and strongly\n"
"consider using the Random.nextInt(int) method instead.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7340
msgid "<a id='RV_REM_OF_HASHCODE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7345
msgid "RV: Remainder of hashCode could be negative (RV_REM_OF_HASHCODE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7347
msgid ""
"<p> This code computes a hashCode, and then computes\n"
"the remainder of that value modulo another value. Since the hashCode\n"
"can be negative, the result of the remainder operation\n"
"can also be negative. </p>\n"
"<p> Assuming you want to ensure that the result of your computation is "
"nonnegative,\n"
"you may need to change your code.\n"
"If you know the divisor is a power of 2,\n"
"you can use a bitwise and operator instead (i.e., instead of\n"
"using <code>x.hashCode()%n</code>, use "
"<code>x.hashCode()&amp;(n-1)</code>).\n"
"This is probably faster than computing the remainder as well.\n"
"If you don't know that the divisor is a power of 2, take the absolute\n"
"value of the result of the remainder operation (i.e., use\n"
"<code>Math.abs(x.hashCode()%n)</code>).\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7367
msgid "<a id='EQ_UNUSUAL'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7372
msgid "Eq: Unusual equals method (EQ_UNUSUAL)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7374
msgid ""
"  <p> This class doesn't do any of the patterns we recognize for checking"
" that the type of the argument\n"
"is compatible with the type of the <code>this</code> object. There might "
"not be anything wrong with\n"
"this code, but it is worth reviewing.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7384
msgid "<a id='EQ_DOESNT_OVERRIDE_EQUALS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7389
msgid ""
"Eq: Class doesn't override equals in superclass "
"(EQ_DOESNT_OVERRIDE_EQUALS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7391
msgid ""
"  <p> This class extends a class that defines an equals method and adds "
"fields, but doesn't\n"
"define an equals method itself. Thus, equality on instances of this class"
" will\n"
"ignore the identity of the subclass and the added fields. Be sure this is"
" what is intended,\n"
"and that you don't need to override the equals method. Even if you don't "
"need to override\n"
"the equals method, consider overriding it anyway to document the fact\n"
"that the equals method for the subclass just return the result of\n"
"invoking super.equals(o).\n"
"  </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7405
msgid "<a id='NS_NON_SHORT_CIRCUIT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7410
msgid "NS: Questionable use of non-short-circuit logic (NS_NON_SHORT_CIRCUIT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7412
msgid ""
"  <p> This code seems to be using non-short-circuit logic (e.g., &amp;\n"
"or |)\n"
"rather than short-circuit logic (&amp;&amp; or ||).\n"
"Non-short-circuit logic causes both sides of the expression\n"
"to be evaluated even when the result can be inferred from\n"
"knowing the left-hand side. This can be less efficient and\n"
"can result in errors if the left-hand side guards cases\n"
"when evaluating the right-hand side can generate an error.\n"
"\n"
"<p>See <a "
"href=\"https://docs.oracle.com/javase/specs/jls/se7/html/jls-15.html#jls-15.22.2\">the"
" Java\n"
"Language Specification</a> for details.\n"
"\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7431
msgid "<a id='NS_DANGEROUS_NON_SHORT_CIRCUIT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7436
msgid ""
"NS: Potentially dangerous use of non-short-circuit logic "
"(NS_DANGEROUS_NON_SHORT_CIRCUIT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7438
msgid ""
"  <p> This code seems to be using non-short-circuit logic (e.g., &amp;\n"
"or |)\n"
"rather than short-circuit logic (&amp;&amp; or ||). In addition,\n"
"it seem possible that, depending on the value of the left hand side, you "
"might not\n"
"want to evaluate the right hand side (because it would have side effects,"
" could cause an exception\n"
"or could be expensive.</p>\n"
"<p>\n"
"Non-short-circuit logic causes both sides of the expression\n"
"to be evaluated even when the result can be inferred from\n"
"knowing the left-hand side. This can be less efficient and\n"
"can result in errors if the left-hand side guards cases\n"
"when evaluating the right-hand side can generate an error.\n"
"</p>\n"
"\n"
"<p>See <a "
"href=\"https://docs.oracle.com/javase/specs/jls/se7/html/jls-15.html#jls-15.22.2\">the"
" Java\n"
"Language Specification</a> for details.\n"
"\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7462
msgid "<a id='IC_INIT_CIRCULARITY'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7467
msgid "IC: Initialization circularity (IC_INIT_CIRCULARITY)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7469
msgid ""
"<p> A circularity was detected in the static initializers of the two\n"
"classes referenced by the bug instance.&nbsp; Many kinds of unexpected\n"
"behavior may arise from such circularity.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7478
msgid "<a id='IA_AMBIGUOUS_INVOCATION_OF_INHERITED_OR_OUTER_METHOD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7483
msgid ""
"IA: Potentially ambiguous invocation of either an inherited or outer "
"method (IA_AMBIGUOUS_INVOCATION_OF_INHERITED_OR_OUTER_METHOD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7485
msgid ""
"  <p>\n"
"An inner class is invoking a method that could be resolved to either a "
"inherited method or a method defined in an outer class.\n"
"For example, you invoke <code>foo(17)</code>, which is defined in both a "
"superclass and in an outer method.\n"
"By the Java semantics,\n"
"it will be resolved to invoke the inherited method, but this may not be "
"what\n"
"you intend.\n"
"</p>\n"
"<p>If you really intend to invoke the inherited method,\n"
"invoke it by invoking the method on super (e.g., invoke super.foo(17)), "
"and\n"
"thus it will be clear to other readers of your code and to SpotBugs\n"
"that you want to invoke the inherited method, not the method in the outer"
" class.\n"
"</p>\n"
"<p>If you call <code>this.foo(17)</code>, then the inherited method will "
"be invoked. However, since SpotBugs only looks at\n"
"classfiles, it\n"
"can't tell the difference between an invocation of "
"<code>this.foo(17)</code> and <code>foo(17)</code>, it will still\n"
"complain about a potential ambiguous invocation.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7508
msgid "<a id='SE_PRIVATE_READ_RESOLVE_NOT_INHERITED'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7513
msgid ""
"Se: Private readResolve method not inherited by subclasses "
"(SE_PRIVATE_READ_RESOLVE_NOT_INHERITED)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7515
msgid ""
"  <p> This class defines a private readResolve method. Since it is "
"private, it won't be inherited by subclasses.\n"
"This might be intentional and OK, but should be reviewed to ensure it is "
"what is intended.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7524
msgid "<a id='SE_TRANSIENT_FIELD_OF_NONSERIALIZABLE_CLASS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7529
msgid ""
"Se: Transient field of class that isn't Serializable. "
"(SE_TRANSIENT_FIELD_OF_NONSERIALIZABLE_CLASS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7531
msgid ""
"  <p> The field is marked as transient, but the class isn't Serializable,"
" so marking it as transient\n"
"has absolutely no effect.\n"
"This may be leftover marking from a previous version of the code in which"
" the class was transient, or\n"
"it may indicate a misunderstanding of how serialization works.\n"
"</p>\n"
"<p><em>This bug is reported only if special option "
"<tt>reportTransientFieldOfNonSerializableClass</tt> is set.</em></p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7543
msgid "<a id='SF_SWITCH_FALLTHROUGH'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7548
msgid ""
"SF: Switch statement found where one case falls through to the next case "
"(SF_SWITCH_FALLTHROUGH)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7550
msgid ""
"<p> This method contains a switch statement where one case branch will "
"fall through to the next case.\n"
"Usually you need to end this case with a break or return.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7558
msgid "<a id='SF_SWITCH_NO_DEFAULT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7563
msgid ""
"SF: Switch statement found where default case is missing "
"(SF_SWITCH_NO_DEFAULT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7565
msgid ""
"  <p> This method contains a switch statement where default case is "
"missing.\n"
"  Usually you need to provide a default case.</p>\n"
"  <p>Because the analysis only looks at the generated bytecode, this "
"warning can be incorrect triggered if\n"
"the default case is at the end of the switch statement and the switch "
"statement doesn't contain break statements for other\n"
"cases."
msgstr ""

#: ../../generated/bugDescriptionList.inc:7576
msgid "<a id='UUF_UNUSED_PUBLIC_OR_PROTECTED_FIELD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7581
msgid ""
"UuF: Unused public or protected field "
"(UUF_UNUSED_PUBLIC_OR_PROTECTED_FIELD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7583
msgid ""
"  <p> This field is never used.&nbsp;\n"
"The field is public or protected, so perhaps\n"
"    it is intended to be used with classes not seen as part of the "
"analysis. If not,\n"
"consider removing it from the class.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7593
msgid "<a id='URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7598
msgid "UrF: Unread public/protected field (URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7600
msgid ""
"  <p> This field is never read.&nbsp;\n"
"The field is public or protected, so perhaps\n"
"    it is intended to be used with classes not seen as part of the "
"analysis. If not,\n"
"consider removing it from the class.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7610
msgid "<a id='QF_QUESTIONABLE_FOR_LOOP'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7615
msgid ""
"QF: Complicated, subtle or wrong increment in for-loop "
"(QF_QUESTIONABLE_FOR_LOOP)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7617
msgid ""
"   <p>Are you sure this for loop is incrementing/decrementing the correct"
" variable?\n"
"   It appears that another variable is being initialized and checked\n"
"   by the for loop.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7627
msgid "<a id='NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7632
msgid ""
"NP: Read of unwritten public or protected field "
"(NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7634
msgid ""
"  <p> The program is dereferencing a public or protected\n"
"field that does not seem to ever have a non-null value written to it.\n"
"Unless the field is initialized via some mechanism not seen by the "
"analysis,\n"
"dereferencing this value will generate a null pointer exception.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7645
msgid "<a id='UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7650
msgid ""
"UwF: Field not initialized in constructor but dereferenced without null "
"check (UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7652
msgid ""
"  <p> This field is never initialized within any constructor, and is "
"therefore could be null after\n"
"the object is constructed. Elsewhere, it is loaded and dereferenced "
"without a null check.\n"
"This could be a either an error or a questionable design, since\n"
"it means a null pointer exception will be generated if that field is "
"dereferenced\n"
"before being initialized.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7664
msgid "<a id='UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7669
msgid ""
"UwF: Unwritten public or protected field "
"(UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7671
msgid ""
"  <p> No writes were seen to this public/protected field.&nbsp; All reads"
" of it will return the default\n"
"value. Check for errors (should it have been initialized?), or remove it "
"if it is useless.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7679
msgid "<a id='UC_USELESS_VOID_METHOD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7684
msgid "UC: Useless non-empty void method (UC_USELESS_VOID_METHOD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7686
msgid ""
"<p>Our analysis shows that this non-empty void method does not actually "
"perform any useful work.\n"
"Please check it: probably there's a mistake in its code or its body can "
"be fully removed.\n"
"</p>\n"
"<p>We are trying to reduce the false positives as much as possible, but "
"in some cases this warning might be wrong.\n"
"Common false-positive cases include:</p>\n"
"<ul>\n"
"<li>The method is intended to trigger loading of some class which may "
"have a side effect.</li>\n"
"<li>The method is intended to implicitly throw some obscure "
"exception.</li>\n"
"</ul>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7701
msgid "<a id='UC_USELESS_CONDITION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7706
msgid "UC: Condition has no effect (UC_USELESS_CONDITION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7708
msgid ""
"<p>This condition always produces the same result as the value of the "
"involved variable that was narrowed before.\n"
"Probably something else was meant or the condition can be removed.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7716
msgid "<a id='UC_USELESS_CONDITION_TYPE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7721
msgid ""
"UC: Condition has no effect due to the variable type "
"(UC_USELESS_CONDITION_TYPE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7723
msgid ""
"<p>This condition always produces the same result due to the type range "
"of the involved variable.\n"
"Probably something else was meant or the condition can be removed.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7731
msgid "<a id='UC_USELESS_OBJECT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7736
msgid "UC: Useless object created (UC_USELESS_OBJECT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7738
msgid ""
"<p>Our analysis shows that this object is useless.\n"
"It's created and modified, but its value never go outside of the method "
"or produce any side-effect.\n"
"Either there is a mistake and object was intended to be used or it can be"
" removed.</p>\n"
"<p>This analysis rarely produces false-positives. Common false-positive "
"cases include:</p>\n"
"<p>- This object used to implicitly throw some obscure exception.</p>\n"
"<p>- This object used as a stub to generalize the code.</p>\n"
"<p>- This object used to hold strong references to weak/soft-referenced "
"objects.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7751
msgid "<a id='UC_USELESS_OBJECT_STACK'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7756
msgid "UC: Useless object created on stack (UC_USELESS_OBJECT_STACK)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7758
msgid ""
"<p>This object is created just to perform some modifications which don't "
"have any side-effect.\n"
"Probably something else was meant or the object can be removed.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7766
msgid "<a id='RV_RETURN_VALUE_IGNORED_INFERRED'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7771
msgid ""
"RV: Method ignores return value, is this OK? "
"(RV_RETURN_VALUE_IGNORED_INFERRED)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7773
msgid ""
"<p>This code calls a method and ignores the return value. The return "
"value\n"
"is the same type as the type the method is invoked on, and from our "
"analysis it looks\n"
"like the return value might be important (e.g., like ignoring the\n"
"return value of <code>String.toLowerCase()</code>).\n"
"</p>\n"
"<p>We are guessing that ignoring the return value might be a bad idea "
"just from\n"
"a simple analysis of the body of the method. You can use a "
"@CheckReturnValue annotation\n"
"to instruct SpotBugs as to whether ignoring the return value of this "
"method\n"
"is important or acceptable.\n"
"</p>\n"
"<p>Please investigate this closely to decide whether it is OK to ignore "
"the return value.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7791
msgid "<a id='RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7796
msgid ""
"RV: Return value of method without side effect is ignored "
"(RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7798
msgid ""
"<p>This code calls a method and ignores the return value. However our "
"analysis shows that\n"
"the method (including its implementations in subclasses if any) does not "
"produce any effect\n"
"other than return value. Thus this call can be removed.\n"
"</p>\n"
"<p>We are trying to reduce the false positives as much as possible, but "
"in some cases this warning might be wrong.\n"
"Common false-positive cases include:</p>\n"
"<p>- The method is designed to be overridden and produce a side effect in"
" other projects which are out of the scope of the analysis.</p>\n"
"<p>- The method is called to trigger the class loading which may have a "
"side effect.</p>\n"
"<p>- The method is called just to get some exception.</p>\n"
"<p>If you feel that our assumption is incorrect, you can use a "
"@CheckReturnValue annotation\n"
"to instruct SpotBugs that ignoring the return value of this method is "
"acceptable.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7816
msgid "<a id='RV_CHECK_FOR_POSITIVE_INDEXOF'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7821
msgid ""
"RV: Method checks to see if result of String.indexOf is positive "
"(RV_CHECK_FOR_POSITIVE_INDEXOF)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7823
msgid ""
"<p> The method invokes String.indexOf and checks to see if the result is "
"positive or non-positive.\n"
"It is much more typical to check to see if the result is negative or non-"
"negative. It is\n"
"positive only if the substring checked for occurs at some place other "
"than at the beginning of\n"
"the String.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7833
msgid "<a id='RV_DONT_JUST_NULL_CHECK_READLINE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7838
msgid ""
"RV: Method discards result of readLine after checking if it is non-null "
"(RV_DONT_JUST_NULL_CHECK_READLINE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7840
msgid ""
"   <p> The value returned by readLine is discarded after checking to see "
"if the return\n"
"value is non-null. In almost all situations, if the result is non-null, "
"you will want\n"
"to use that non-null value. Calling readLine again will give you a "
"different line.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7849
msgid "<a id='NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7854
msgid ""
"NP: Parameter must be non-null but is marked as nullable "
"(NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7856
msgid ""
"<p> This parameter is always used in a way that requires it to be non-"
"null,\n"
"but the parameter is explicitly annotated as being Nullable. Either the "
"use\n"
"of the parameter or the annotation is wrong.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7866
msgid "<a id='NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7871
msgid ""
"NP: Possible null pointer dereference due to return value of called "
"method (NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7873
msgid ""
"<p> The return value from a method is dereferenced without a null check,\n"
"and the return value of that method is one that should generally be "
"checked\n"
"for null.  This may lead to a <code>NullPointerException</code> when the "
"code is executed.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7883
msgid "<a id='NP_NULL_ON_SOME_PATH_MIGHT_BE_INFEASIBLE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7888
msgid ""
"NP: Possible null pointer dereference on branch that might be infeasible "
"(NP_NULL_ON_SOME_PATH_MIGHT_BE_INFEASIBLE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7890
msgid ""
"<p> There is a branch of statement that, <em>if executed,</em>  "
"guarantees that\n"
"a null value will be dereferenced, which\n"
"would generate a <code>NullPointerException</code> when the code is "
"executed.\n"
"Of course, the problem might be that the branch or statement is "
"infeasible and that\n"
"the null pointer exception can't ever be executed; deciding that is "
"beyond the ability of SpotBugs.\n"
"Due to the fact that this value had been previously tested for nullness,\n"
"this is a definite possibility.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7904
msgid "<a id='NP_LOAD_OF_KNOWN_NULL_VALUE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7909
msgid "NP: Load of known null value (NP_LOAD_OF_KNOWN_NULL_VALUE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7911
msgid ""
"  <p> The variable referenced at this point is known to be null due to an"
" earlier\n"
"   check against null. Although this is valid, it might be a mistake "
"(perhaps you\n"
"intended to refer to a different variable, or perhaps the earlier check "
"to see if the\n"
"variable is null should have been a check to see if it was non-null).\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7922
msgid "<a id='PZLA_PREFER_ZERO_LENGTH_ARRAYS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7927
msgid ""
"PZLA: Consider returning a zero length array rather than null "
"(PZLA_PREFER_ZERO_LENGTH_ARRAYS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7929
msgid ""
"<p> It is often a better design to\n"
"return a length zero array rather than a null reference to indicate that "
"there\n"
"are no results (i.e., an empty list of results).\n"
"This way, no explicit check for null is needed by clients of the "
"method.</p>\n"
"\n"
"<p>On the other hand, using null to indicate\n"
"\"there is no answer to this question\" is probably appropriate.\n"
"For example, <code>File.listFiles()</code> returns an empty list\n"
"if given a directory containing no files, and returns null if the file\n"
"is not a directory.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7945
msgid "<a id='UCF_USELESS_CONTROL_FLOW'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7950
msgid "UCF: Useless control flow (UCF_USELESS_CONTROL_FLOW)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7952
msgid ""
"<p> This method contains a useless control flow statement, where\n"
"control flow continues onto the same place regardless of whether or not\n"
"the branch is taken. For example,\n"
"this is caused by having an empty statement\n"
"block for an <code>if</code> statement:</p>\n"
"<pre><code>if (argv.length == 0) {\n"
"    // TODO: handle this case\n"
"}\n"
"</code></pre>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7967
msgid "<a id='UCF_USELESS_CONTROL_FLOW_NEXT_LINE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7972
msgid ""
"UCF: Useless control flow to next line "
"(UCF_USELESS_CONTROL_FLOW_NEXT_LINE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7974
msgid ""
"<p> This method contains a useless control flow statement in which "
"control\n"
"flow follows to the same or following line regardless of whether or not\n"
"the branch is taken.\n"
"Often, this is caused by inadvertently using an empty statement as the\n"
"body of an <code>if</code> statement, e.g.:</p>\n"
"<pre><code>if (argv.length == 1);\n"
"    System.out.println(\"Hello, \" + argv[0]);\n"
"</code></pre>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7988
msgid "<a id='RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7993
msgid ""
"RCN: Redundant nullcheck of value known to be null "
"(RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:7995
msgid ""
"<p> This method contains a redundant check of a known null value against\n"
"the constant null.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8003
msgid "<a id='RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8008
msgid ""
"RCN: Redundant nullcheck of value known to be non-null "
"(RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8010
msgid ""
"<p> This method contains a redundant check of a known non-null value "
"against\n"
"the constant null.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8018
msgid "<a id='RCN_REDUNDANT_COMPARISON_TWO_NULL_VALUES'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8023
msgid ""
"RCN: Redundant comparison of two null values "
"(RCN_REDUNDANT_COMPARISON_TWO_NULL_VALUES)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8025
msgid ""
"<p> This method contains a redundant comparison of two references known "
"to\n"
"both be definitely null.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8033
msgid "<a id='RCN_REDUNDANT_COMPARISON_OF_NULL_AND_NONNULL_VALUE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8038
msgid ""
"RCN: Redundant comparison of non-null value to null "
"(RCN_REDUNDANT_COMPARISON_OF_NULL_AND_NONNULL_VALUE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8040
msgid ""
"<p> This method contains a reference known to be non-null with another "
"reference\n"
"known to be null.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8048
msgid "<a id='SA_LOCAL_SELF_ASSIGNMENT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8053
msgid "SA: Self assignment of local variable (SA_LOCAL_SELF_ASSIGNMENT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8055
msgid ""
"<p> This method contains a self assignment of a local variable; e.g.</p>\n"
"<pre><code>public void foo() {\n"
"    int x = 3;\n"
"    x = x;\n"
"}\n"
"</code></pre>\n"
"<p>\n"
"Such assignments are useless, and may indicate a logic error or typo.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8070
msgid "<a id='INT_BAD_REM_BY_1'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8075
msgid "INT: Integer remainder modulo 1 (INT_BAD_REM_BY_1)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8077
msgid ""
"<p> Any expression (exp % 1) is guaranteed to always return zero.\n"
"Did you mean (exp &amp; 1) or (exp % 2) instead?\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8086
msgid "<a id='INT_VACUOUS_COMPARISON'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8091
msgid "INT: Vacuous comparison of integer value (INT_VACUOUS_COMPARISON)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8093
msgid ""
"<p> There is an integer comparison that always returns\n"
"the same value (e.g., x &lt;= Integer.MAX_VALUE).\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8102
msgid "<a id='INT_VACUOUS_BIT_OPERATION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8107
msgid ""
"INT: Vacuous bit mask operation on integer value "
"(INT_VACUOUS_BIT_OPERATION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8109
msgid ""
"<p> This is an integer bit operation (and, or, or exclusive or) that "
"doesn't do any useful work\n"
"(e.g., <code>v & 0xffffffff</code>).\n"
"\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8119
msgid "<a id='SA_LOCAL_DOUBLE_ASSIGNMENT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8124
msgid "SA: Double assignment of local variable (SA_LOCAL_DOUBLE_ASSIGNMENT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8126
msgid ""
"<p> This method contains a double assignment of a local variable; e.g.\n"
"</p>\n"
"<pre><code>public void foo() {\n"
"    int x,y;\n"
"    x = x = 17;\n"
"}\n"
"</code></pre>\n"
"<p>Assigning the same value to a variable twice is useless, and may "
"indicate a logic error or typo.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8140
msgid "<a id='SA_FIELD_DOUBLE_ASSIGNMENT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8145
msgid "SA: Double assignment of field (SA_FIELD_DOUBLE_ASSIGNMENT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8147
msgid ""
"<p> This method contains a double assignment of a field; e.g.\n"
"</p>\n"
"<pre><code>int x,y;\n"
"public void foo() {\n"
"    x = x = 17;\n"
"}\n"
"</code></pre>\n"
"<p>Assigning to a field twice is useless, and may indicate a logic error "
"or typo.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8161
msgid "<a id='DLS_DEAD_LOCAL_STORE_IN_RETURN'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8166
msgid ""
"DLS: Useless assignment in return statement "
"(DLS_DEAD_LOCAL_STORE_IN_RETURN)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8168
msgid ""
"<p>\n"
"This statement assigns to a local variable in a return statement. This "
"assignment\n"
"has effect. Please verify that this statement does the right thing.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8178
msgid "<a id='DLS_DEAD_LOCAL_STORE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8183
msgid "DLS: Dead store to local variable (DLS_DEAD_LOCAL_STORE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8185
msgid ""
"<p>\n"
"This instruction assigns a value to a local variable,\n"
"but the value is not read or used in any subsequent instruction.\n"
"Often, this indicates an error, because the value computed is never\n"
"used.\n"
"</p>\n"
"<p>\n"
"Note that Sun's javac compiler often generates dead stores for\n"
"final local variables.  Because SpotBugs is a bytecode-based tool,\n"
"there is no easy way to eliminate these false positives.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8202
msgid "<a id='DLS_DEAD_LOCAL_STORE_SHADOWS_FIELD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8207
msgid ""
"DLS: Dead store to local variable that shadows field "
"(DLS_DEAD_LOCAL_STORE_SHADOWS_FIELD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8209
msgid ""
"<p>\n"
"This instruction assigns a value to a local variable,\n"
"but the value is not read or used in any subsequent instruction.\n"
"Often, this indicates an error, because the value computed is never\n"
"used. There is a field with the same name as the local variable. Did you\n"
"mean to assign to that variable instead?\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8222
msgid "<a id='DLS_DEAD_LOCAL_STORE_OF_NULL'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8227
msgid "DLS: Dead store of null to local variable (DLS_DEAD_LOCAL_STORE_OF_NULL)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8229
msgid ""
"<p>The code stores null into a local variable, and the stored value is "
"not\n"
"read. This store may have been introduced to assist the garbage "
"collector, but\n"
"as of Java SE 6.0, this is no longer needed or useful.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8239
msgid "<a id='REC_CATCH_EXCEPTION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8244
msgid ""
"REC: Exception is caught when Exception is not thrown "
"(REC_CATCH_EXCEPTION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8246
msgid ""
"  <p>\n"
"  This method uses a try-catch block that catches Exception objects, but "
"Exception is not\n"
"  thrown within the try block, and RuntimeException is not explicitly "
"caught.  It is a common bug pattern to\n"
"  say try { ... } catch (Exception e) { something } as a shorthand for "
"catching a number of types of exception\n"
"  each of whose catch blocks is identical, but this construct also "
"accidentally catches RuntimeException as well,\n"
"  masking potential bugs.\n"
"  </p>\n"
"  <p>A better approach is to either explicitly catch the specific "
"exceptions that are thrown,\n"
"  or to explicitly catch RuntimeException exception, rethrow it, and then"
" catch all non-Runtime Exceptions, as shown below:</p>\n"
"<pre><code>try {\n"
"    ...\n"
"} catch (RuntimeException e) {\n"
"    throw e;\n"
"} catch (Exception e) {\n"
"    ... deal with all non-runtime exceptions ...\n"
"}\n"
"</code></pre>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8269
msgid "<a id='FE_FLOATING_POINT_EQUALITY'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8274
msgid "FE: Test for floating point equality (FE_FLOATING_POINT_EQUALITY)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8276
msgid ""
" <p>\n"
" This operation compares two floating point values for equality.\n"
" Because floating point calculations may involve rounding,\n"
"calculated float and double values may not be accurate.\n"
" For values that must be precise, such as monetary values,\n"
"consider using a fixed-precision type such as BigDecimal.\n"
" For values that need not be precise, consider comparing for equality\n"
" within some range, for example:\n"
" <code>if ( Math.abs(x - y) &lt; .0000001 )</code>.\n"
"See the Java Language Specification, section 4.2.4.\n"
" </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8293
msgid "<a id='CD_CIRCULAR_DEPENDENCY'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8298
msgid "CD: Test for circular dependencies among classes (CD_CIRCULAR_DEPENDENCY)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8300
msgid ""
"<p>\n"
"This class has a circular dependency with other classes. This makes "
"building these classes\n"
"difficult, as each is dependent on the other to build correctly. Consider"
" using interfaces\n"
"to break the hard dependency.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8311
msgid "<a id='RI_REDUNDANT_INTERFACES'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8316
msgid ""
"RI: Class implements same interface as superclass "
"(RI_REDUNDANT_INTERFACES)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8318
msgid ""
"<p>\n"
"This class declares that it implements an interface that is also "
"implemented by a superclass.\n"
"This is redundant because once a superclass implements an interface, all "
"subclasses by default also\n"
"implement this interface. It may point out that the inheritance hierarchy"
" has changed since\n"
"this class was created, and consideration should be given to the "
"ownership of\n"
"the interface's implementation.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8331
msgid "<a id='MTIA_SUSPECT_STRUTS_INSTANCE_FIELD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8336
msgid ""
"MTIA: Class extends Struts Action class and uses instance variables "
"(MTIA_SUSPECT_STRUTS_INSTANCE_FIELD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8338
msgid ""
"<p>\n"
"This class extends from a Struts Action class, and uses an instance "
"member variable. Since only\n"
"one instance of a struts Action class is created by the Struts framework,"
" and used in a\n"
"multithreaded way, this paradigm is highly discouraged and most likely "
"problematic. Consider\n"
"only using method local variables. Only instance fields that are written "
"outside of a monitor\n"
"are reported.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8351
msgid "<a id='MTIA_SUSPECT_SERVLET_INSTANCE_FIELD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8356
msgid ""
"MTIA: Class extends Servlet class and uses instance variables "
"(MTIA_SUSPECT_SERVLET_INSTANCE_FIELD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8358
msgid ""
"<p>\n"
"This class extends from a Servlet class, and uses an instance member "
"variable. Since only\n"
"one instance of a Servlet class is created by the J2EE framework, and "
"used in a\n"
"multithreaded way, this paradigm is highly discouraged and most likely "
"problematic. Consider\n"
"only using method local variables.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8370
msgid "<a id='PS_PUBLIC_SEMAPHORES'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8375
msgid ""
"PS: Class exposes synchronization and semaphores in its public interface "
"(PS_PUBLIC_SEMAPHORES)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8377
msgid ""
"<p>\n"
"This class uses synchronization along with wait(), notify() or "
"notifyAll() on itself (the this\n"
"reference). Client classes that use this class, may, in addition, use an "
"instance of this class\n"
"as a synchronizing object. Because two classes are using the same object "
"for synchronization,\n"
"Multithread correctness is suspect. You should not synchronize nor call "
"semaphore methods on\n"
"a public reference. Consider using a internal private member variable to "
"control synchronization.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8390
msgid "<a id='ICAST_INTEGER_MULTIPLY_CAST_TO_LONG'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8395
msgid ""
"ICAST: Result of integer multiplication cast to long "
"(ICAST_INTEGER_MULTIPLY_CAST_TO_LONG)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8397
msgid ""
"<p>\n"
"This code performs integer multiply and then converts the result to a "
"long,\n"
"as in:</p>\n"
"<pre><code>long convertDaysToMilliseconds(int days) { return "
"1000*3600*24*days; }\n"
"</code></pre>\n"
"<p>\n"
"If the multiplication is done using long arithmetic, you can avoid\n"
"the possibility that the result will overflow. For example, you\n"
"could fix the above code to:</p>\n"
"<pre><code>long convertDaysToMilliseconds(int days) { return "
"1000L*3600*24*days; }\n"
"</code></pre>\n"
"<p>\n"
"or\n"
"</p>\n"
"<pre><code>static final long MILLISECONDS_PER_DAY = 24L*3600*1000;\n"
"long convertDaysToMilliseconds(int days) { return days * "
"MILLISECONDS_PER_DAY; }\n"
"</code></pre>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8420
msgid "<a id='ICAST_IDIV_CAST_TO_DOUBLE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8425
msgid ""
"ICAST: Integral division result cast to double or float "
"(ICAST_IDIV_CAST_TO_DOUBLE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8427
msgid ""
"<p>\n"
"This code casts the result of an integral division (e.g., int or long "
"division)\n"
"operation to double or\n"
"float.\n"
"Doing division on integers truncates the result\n"
"to the integer value closest to zero.  The fact that the result\n"
"was cast to double suggests that this precision should have been "
"retained.\n"
"What was probably meant was to cast one or both of the operands to\n"
"double <em>before</em> performing the division.  Here is an example:\n"
"</p>\n"
"<pre><code>int x = 2;\n"
"int y = 5;\n"
"// Wrong: yields result 0.0\n"
"double value1 = x / y;\n"
"\n"
"// Right: yields result 0.4\n"
"double value2 = x / (double) y;\n"
"</code></pre>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8451
msgid "<a id='BC_BAD_CAST_TO_CONCRETE_COLLECTION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8456
msgid ""
"BC: Questionable cast to concrete collection "
"(BC_BAD_CAST_TO_CONCRETE_COLLECTION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8458
msgid ""
"<p>\n"
"This code casts an abstract collection (such as a Collection, List, or "
"Set)\n"
"to a specific concrete implementation (such as an ArrayList or HashSet).\n"
"This might not be correct, and it may make your code fragile, since\n"
"it makes it harder to switch to other concrete implementations at a "
"future\n"
"point. Unless you have a particular reason to do so, just use the "
"abstract\n"
"collection class.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8472
msgid "<a id='BC_UNCONFIRMED_CAST'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8477
msgid "BC: Unchecked/unconfirmed cast (BC_UNCONFIRMED_CAST)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8479
msgid ""
"<p>\n"
"This cast is unchecked, and not all instances of the type casted from can"
" be cast to\n"
"the type it is being cast to. Check that your program logic ensures that "
"this\n"
"cast will not fail.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8490
msgid "<a id='BC_UNCONFIRMED_CAST_OF_RETURN_VALUE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8495
msgid ""
"BC: Unchecked/unconfirmed cast of return value from method "
"(BC_UNCONFIRMED_CAST_OF_RETURN_VALUE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8497
msgid ""
"<p>\n"
"This code performs an unchecked cast of the return value of a method.\n"
"The code might be calling the method in such a way that the cast is "
"guaranteed to be\n"
"safe, but SpotBugs is unable to verify that the cast is safe.  Check that"
" your program logic ensures that this\n"
"cast will not fail.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8509
msgid "<a id='BC_VACUOUS_INSTANCEOF'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8514
msgid "BC: instanceof will always return true (BC_VACUOUS_INSTANCEOF)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8516
msgid ""
"<p>\n"
"This instanceof test will always return true (unless the value being "
"tested is null).\n"
"Although this is safe, make sure it isn't\n"
"an indication of some misunderstanding or some other logic error.\n"
"If you really want to test the value for being null, perhaps it would be "
"clearer to do\n"
"better to do a null test rather than an instanceof test.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8529
msgid "<a id='BC_BAD_CAST_TO_ABSTRACT_COLLECTION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8534
msgid ""
"BC: Questionable cast to abstract collection "
"(BC_BAD_CAST_TO_ABSTRACT_COLLECTION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8536
msgid ""
"<p>\n"
"This code casts a Collection to an abstract collection\n"
"(such as <code>List</code>, <code>Set</code>, or <code>Map</code>).\n"
"Ensure that you are guaranteed that the object is of the type\n"
"you are casting to. If all you need is to be able\n"
"to iterate through a collection, you don't need to cast it to a Set or "
"List.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8549
msgid "<a id='IM_BAD_CHECK_FOR_ODD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8554
msgid ""
"IM: Check for oddness that won't work for negative numbers "
"(IM_BAD_CHECK_FOR_ODD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8556
msgid ""
"<p>\n"
"The code uses x % 2 == 1 to check to see if a value is odd, but this "
"won't work\n"
"for negative numbers (e.g., (-5) % 2 == -1). If this code is intending to"
" check\n"
"for oddness, consider using x &amp; 1 == 1, or x % 2 != 0.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8567
msgid "<a id='IM_AVERAGE_COMPUTATION_COULD_OVERFLOW'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8572
msgid ""
"IM: Computation of average could overflow "
"(IM_AVERAGE_COMPUTATION_COULD_OVERFLOW)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8574
msgid ""
"<p>The code computes the average of two integers using either division or"
" signed right shift,\n"
"and then uses the result as the index of an array.\n"
"If the values being averaged are very large, this can overflow (resulting"
" in the computation\n"
"of a negative average).  Assuming that the result is intended to be "
"nonnegative, you\n"
"can use an unsigned right shift instead. In other words, rather that "
"using <code>(low+high)/2</code>,\n"
"use <code>(low+high) &gt;&gt;&gt; 1</code>\n"
"</p>\n"
"<p>This bug exists in many earlier implementations of binary search and "
"merge sort.\n"
"Martin Buchholz <a "
"href=\"http://bugs.java.com/bugdatabase/view_bug.do?bug_id=6412541\">found"
" and fixed it</a>\n"
"in the JDK libraries, and Joshua Bloch\n"
"<a href=\"http://googleresearch.blogspot.com/2006/06/extra-extra-read-"
"all-about-it-nearly.html\">widely\n"
"publicized the bug pattern</a>.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8593
msgid "<a id='ICAST_QUESTIONABLE_UNSIGNED_RIGHT_SHIFT'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8598
msgid ""
"BSHIFT: Unsigned right shift cast to short/byte "
"(ICAST_QUESTIONABLE_UNSIGNED_RIGHT_SHIFT)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8600
msgid ""
"<p>\n"
"The code performs an unsigned right shift, whose result is then\n"
"cast to a short or byte, which discards the upper bits of the result.\n"
"Since the upper bits are discarded, there may be no difference between\n"
"a signed and unsigned right shift (depending upon the size of the shift)."
"\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8612
msgid "<a id='DMI_HARDCODED_ABSOLUTE_FILENAME'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8617
msgid ""
"DMI: Code contains a hard coded reference to an absolute pathname "
"(DMI_HARDCODED_ABSOLUTE_FILENAME)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8619
msgid ""
"<p>This code constructs a File object using a hard coded to an absolute "
"pathname\n"
"(e.g., <code>new "
"File(\"/home/dannyc/workspace/j2ee/src/share/com/sun/enterprise/deployment\");</code>"
"\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8628
msgid "<a id='DMI_USELESS_SUBSTRING'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8633
msgid ""
"DMI: Invocation of substring(0), which returns the original value "
"(DMI_USELESS_SUBSTRING)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8635
msgid ""
"<p>\n"
"This code invokes substring(0) on a String, which returns the original "
"value.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8644
msgid "<a id='ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8649
msgid ""
"ST: Write to static field from instance method "
"(ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8651
msgid ""
"  <p> This instance method writes to a static field. This is tricky to "
"get\n"
"correct if multiple instances are being manipulated,\n"
"and generally bad practice.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8661
msgid "<a id='DMI_NONSERIALIZABLE_OBJECT_WRITTEN'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8666
msgid ""
"DMI: Non serializable object written to ObjectOutput "
"(DMI_NONSERIALIZABLE_OBJECT_WRITTEN)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8668
msgid ""
"<p>\n"
"This code seems to be passing a non-serializable object to the "
"ObjectOutput.writeObject method.\n"
"If the object is, indeed, non-serializable, an error will result.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8678
msgid "<a id='DB_DUPLICATE_BRANCHES'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8683
msgid "DB: Method uses the same code for two branches (DB_DUPLICATE_BRANCHES)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8685
msgid ""
"  <p>\n"
"  This method uses the same code to implement two branches of a "
"conditional branch.\n"
"Check to ensure that this isn't a coding mistake.\n"
"  </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8695
msgid "<a id='DB_DUPLICATE_SWITCH_CLAUSES'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8700
msgid ""
"DB: Method uses the same code for two switch clauses "
"(DB_DUPLICATE_SWITCH_CLAUSES)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8702
msgid ""
"  <p>\n"
"  This method uses the same code to implement two clauses of a switch "
"statement.\n"
"This could be a case of duplicate code, but it might also indicate\n"
"a coding mistake.\n"
"  </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8713
msgid "<a id='XFB_XML_FACTORY_BYPASS'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8718
msgid ""
"XFB: Method directly allocates a specific implementation of xml "
"interfaces (XFB_XML_FACTORY_BYPASS)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8720
msgid ""
"<p>\n"
"This method allocates a specific implementation of an xml interface. It "
"is preferable to use\n"
"the supplied factory classes to create these objects so that the "
"implementation can be\n"
"changed at runtime. See\n"
"</p>\n"
"<ul>\n"
"   <li>javax.xml.parsers.DocumentBuilderFactory</li>\n"
"   <li>javax.xml.parsers.SAXParserFactory</li>\n"
"   <li>javax.xml.transform.TransformerFactory</li>\n"
"   <li>org.w3c.dom.Document.create<i>XXXX</i></li>\n"
"</ul>\n"
"<p>for details.</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8738
msgid "<a id='USM_USELESS_SUBCLASS_METHOD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8743
msgid ""
"USM: Method superfluously delegates to parent class method "
"(USM_USELESS_SUBCLASS_METHOD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8745
msgid ""
"<p>\n"
"This derived method merely calls the same superclass method passing in "
"the exact parameters\n"
"received. This method can be removed, as it provides no additional value."
"\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8755
msgid "<a id='USM_USELESS_ABSTRACT_METHOD'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8760
msgid ""
"USM: Abstract Method is already defined in implemented interface "
"(USM_USELESS_ABSTRACT_METHOD)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8762
msgid ""
"<p>\n"
"This abstract method is already defined in an interface that is "
"implemented by this abstract\n"
"class. This method can be removed, as it provides no additional value.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8772
msgid "<a id='CI_CONFUSED_INHERITANCE'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8777
msgid "CI: Class is final but declares protected field (CI_CONFUSED_INHERITANCE)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8779
msgid ""
"<p>\n"
"This class is declared to be final, but declares fields to be protected. "
"Since the class\n"
"is final, it can not be derived from, and the use of protected is "
"confusing. The access\n"
"modifier for the field should be changed to private or public to "
"represent the true\n"
"use for the field.\n"
"</p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8791
msgid "<a id='TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_NEVER_SINK'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8796
msgid ""
"TQ: Value required to not have type qualifier, but marked as unknown "
"(TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_NEVER_SINK)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8798
msgid ""
"  <p>\n"
"  A value is used in a way that requires it to be never be a value "
"denoted by a type qualifier, but\n"
"there is an explicit annotation stating that it is not known where the "
"value is prohibited from having that type qualifier.\n"
"Either the usage or the annotation is incorrect.\n"
"  </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8809
msgid "<a id='TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_ALWAYS_SINK'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8814
msgid ""
"TQ: Value required to have type qualifier, but marked as unknown "
"(TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_ALWAYS_SINK)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8816
msgid ""
"  <p>\n"
"  A value is used in a way that requires it to be always be a value "
"denoted by a type qualifier, but\n"
"there is an explicit annotation stating that it is not known where the "
"value is required to have that type qualifier.\n"
"Either the usage or the annotation is incorrect.\n"
"  </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8827
msgid "<a id='NP_METHOD_RETURN_RELAXING_ANNOTATION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8832
msgid ""
"NP: Method relaxes nullness annotation on return value "
"(NP_METHOD_RETURN_RELAXING_ANNOTATION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8834
msgid ""
"    <p>\n"
"    A method should always implement the contract of a method it "
"overrides. Thus, if a method takes is annotated\n"
"as returning a @Nonnull value,\n"
"you shouldn't override that method in a subclass with a method annotated "
"as returning a @Nullable or @CheckForNull value.\n"
"Doing so violates the contract that the method shouldn't return null.\n"
"    </p>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8844
msgid "<a id='NP_METHOD_PARAMETER_TIGHTENS_ANNOTATION'></a>"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8849
msgid ""
"NP: Method tightens nullness annotation on parameter "
"(NP_METHOD_PARAMETER_TIGHTENS_ANNOTATION)"
msgstr ""

#: ../../generated/bugDescriptionList.inc:8851
msgid ""
"    <p>\n"
"    A method should always implement the contract of a method it "
"overrides. Thus, if a method takes a parameter\n"
"that is marked as @Nullable, you shouldn't override that method in a "
"subclass with a method where that parameter is @Nonnull.\n"
"Doing so violates the contract that the method should handle a null "
"parameter.\n"
"    </p>"
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid ": Redundant comparison to null of previously checked value ()"
#~ msgstr ": Redundant comparison to null of previously checked value ()"

#~ msgid "Bad practice (BAD_PRACTICE)"
#~ msgstr "バッドプラクティス (BAD_PRACTICE)"

#~ msgid "CNT: Rough value of known constant found (CNT_ROUGH_CONSTANT_VALUE)"
#~ msgstr "CNT: 既知の定数の雑な値を見つけた (CNT_ROUGH_CONSTANT_VALUE)"

#~ msgid "FI: Finalizer only nulls fields (FI_FINALIZER_ONLY_NULLS_FIELDS)"
#~ msgstr "FI: ファイナライザはフィールドを null にするだけ (FI_FINALIZER_ONLY_NULLS_FIELDS)"

#~ msgid "FI: Finalizer nulls fields (FI_FINALIZER_NULLS_FIELDS)"
#~ msgstr "FI: ファイナライザはフィールドを null にする (FI_FINALIZER_NULLS_FIELDS)"

#~ msgid "AM: Creates an empty zip file entry (AM_CREATES_EMPTY_ZIP_FILE_ENTRY)"
#~ msgstr "AM: 空の ZIP ファイルエントリの作成 (AM_CREATES_EMPTY_ZIP_FILE_ENTRY)"

#~ msgid "AM: Creates an empty jar file entry (AM_CREATES_EMPTY_JAR_FILE_ENTRY)"
#~ msgstr "AM: 空の JAR ファイルエントリの作成 (AM_CREATES_EMPTY_JAR_FILE_ENTRY)"

#~ msgid "CN: clone method does not call super.clone() (CN_IDIOM_NO_SUPER_CALL)"
#~ msgstr "CN: clone メソッドが super.clone() を呼び出していない (CN_IDIOM_NO_SUPER_CALL)"

#~ msgid "DE: Method might drop exception (DE_MIGHT_DROP)"
#~ msgstr "DE: 例外を捨てているかもしれないメソッド (DE_MIGHT_DROP)"

#~ msgid "DE: Method might ignore exception (DE_MIGHT_IGNORE)"
#~ msgstr "DE: 例外を無視しているかもしれないメソッド (DE_MIGHT_IGNORE)"

#~ msgid "Dm: Method invokes System.exit(...) (DM_EXIT)"
#~ msgstr "Dm: System.exit(...) を呼び出しているメソッド (DM_EXIT)"

#~ msgid "FI: Empty finalizer should be deleted (FI_EMPTY)"
#~ msgstr "FI: 空のファイナライザは削除すべき (FI_EMPTY)"

#~ msgid "FI: Finalizer nullifies superclass finalizer (FI_NULLIFY_SUPER)"
#~ msgstr "FI: ファイナライザはスーパークラスのファイナライザを無効にしている (FI_NULLIFY_SUPER)"

#~ msgid "FI: Finalizer does nothing but call superclass finalizer (FI_USELESS)"
#~ msgstr "FI: ファイナライザはスーパークラスのファイナライザを呼び出しているだけ (FI_USELESS)"

#~ msgid "FI: Explicit invocation of finalizer (FI_EXPLICIT_INVOCATION)"
#~ msgstr "FI: ファイナライザの明示的な呼び出し (FI_EXPLICIT_INVOCATION)"

#~ msgid "Eq: equals method fails for subtypes (EQ_GETCLASS_AND_CLASS_CONSTANT)"
#~ msgstr "Eq: equals メソッドはサブタイプのために失敗する (EQ_GETCLASS_AND_CLASS_CONSTANT)"

#~ msgid "Eq: Covariant equals() method defined (EQ_SELF_NO_OBJECT)"
#~ msgstr "Eq: 共変な equals メソッドの定義 (EQ_SELF_NO_OBJECT)"

#~ msgid "Co: Covariant compareTo() method defined (CO_SELF_NO_OBJECT)"
#~ msgstr "Co: 共変な compareTo メソッドの定義 (CO_SELF_NO_OBJECT)"

#~ msgid "HE: Class defines hashCode() but not equals() (HE_HASHCODE_NO_EQUALS)"
#~ msgstr ""

#~ msgid "HE: Class defines equals() but not hashCode() (HE_EQUALS_NO_HASHCODE)"
#~ msgstr ""

#~ msgid "Eq: Abstract class defines covariant equals() method (EQ_ABSTRACT_SELF)"
#~ msgstr "Eq: 抽象クラスは共変な equals メソッドを宣言している (EQ_ABSTRACT_SELF)"

#~ msgid "ME: Enum field is public and mutable (ME_MUTABLE_ENUM_FIELD)"
#~ msgstr "ME: 列挙型フィールドは public で可変である (ME_MUTABLE_ENUM_FIELD)"

#~ msgid "Nm: Confusing method names (NM_CONFUSING)"
#~ msgstr "Nm: 紛らわしい名前のメソッド (NM_CONFUSING)"

#~ msgid "RR: Method ignores results of InputStream.read() (RR_NOT_CHECKED)"
#~ msgstr "RR: InputStream.read() の戻り値を無視しているメソッド (RR_NOT_CHECKED)"

#~ msgid "RR: Method ignores results of InputStream.skip() (SR_NOT_CHECKED)"
#~ msgstr "RR: InputStream.skip() の戻り値を無視しているメソッド (SR_NOT_CHECKED)"

#~ msgid "Se: serialVersionUID isn't final (SE_NONFINAL_SERIALVERSIONID)"
#~ msgstr "Se: serialVersionUID が final ではない (SE_NONFINAL_SERIALVERSIONID)"

#~ msgid "Se: serialVersionUID isn't static (SE_NONSTATIC_SERIALVERSIONID)"
#~ msgstr "Se: serialVersionUID が static ではない (SE_NONSTATIC_SERIALVERSIONID)"

#~ msgid "Se: serialVersionUID isn't long (SE_NONLONG_SERIALVERSIONID)"
#~ msgstr "Se: serialVersionUID が long ではない (SE_NONLONG_SERIALVERSIONID)"

#~ msgid "Se: Serializable inner class (SE_INNER_CLASS)"
#~ msgstr "Se: 直列化可能な内部クラス (SE_INNER_CLASS)"

#~ msgid "NP: toString method may return null (NP_TOSTRING_COULD_RETURN_NULL)"
#~ msgstr "NP: null を返すかもしれない toString メソッド (NP_TOSTRING_COULD_RETURN_NULL)"

#~ msgid "NP: Clone method may return null (NP_CLONE_COULD_RETURN_NULL)"
#~ msgstr "NP: null を返すかもしれない clone メソッド (NP_CLONE_COULD_RETURN_NULL)"

#~ msgid "OS: Method may fail to close stream (OS_OPEN_STREAM)"
#~ msgstr "OS: ストリームのクローズに失敗するかもしれないメソッド (OS_OPEN_STREAM)"

#~ msgid "BIT: Check for sign of bitwise operation (BIT_SIGNED_CHECK)"
#~ msgstr "BIT: ビット演算の符号をチェックする (BIT_SIGNED_CHECK)"

#~ msgid "GC: Unchecked type in generic call (GC_UNCHECKED_TYPE_IN_GENERIC_CALL)"
#~ msgstr "GC: 検査されない型への総称呼び出し (GC_UNCHECKED_TYPE_IN_GENERIC_CALL)"

#~ msgid "Correctness (CORRECTNESS)"
#~ msgstr "正確性 (CORRECTNESS)"

#~ msgid "IL: An apparent infinite loop (IL_INFINITE_LOOP)"
#~ msgstr "IL: 明らかな無限ループ (IL_INFINITE_LOOP)"

#~ msgid "IL: An apparent infinite recursive loop (IL_INFINITE_RECURSIVE_LOOP)"
#~ msgstr "IL: 明らかな無限再帰ループ (IL_INFINITE_RECURSIVE_LOOP)"

#~ msgid "IL: A collection is added to itself (IL_CONTAINER_ADDED_TO_ITSELF)"
#~ msgstr "IL: コレクションは自分自身を追加している (IL_CONTAINER_ADDED_TO_ITSELF)"

#~ msgid "RpC: Repeated conditional tests (RpC_REPEATED_CONDITIONAL_TEST)"
#~ msgstr "RpC: 条件テストの繰り返し (RpC_REPEATED_CONDITIONAL_TEST)"

#~ msgid "NP: Method does not check for null argument (NP_ARGUMENT_MIGHT_BE_NULL)"
#~ msgstr "NP: null の引数をチェックしていないメソッド (NP_ARGUMENT_MIGHT_BE_NULL)"

#~ msgid "RV: Random value from 0 to 1 is coerced to the integer 0 (RV_01_TO_INT)"
#~ msgstr "RV: 0から1の乱数値は整数値0に丸められる (RV_01_TO_INT)"

#~ msgid "Dm: Incorrect combination of Math.max and Math.min (DM_INVALID_MIN_MAX)"
#~ msgstr "Dm: Math.max と Math.min の間違った組み合わせ (DM_INVALID_MIN_MAX)"

#~ msgid "Eq: equals method always returns true (EQ_ALWAYS_TRUE)"
#~ msgstr "Eq: equals メソッドは常に true を返す (EQ_ALWAYS_TRUE)"

#~ msgid "Eq: equals method always returns false (EQ_ALWAYS_FALSE)"
#~ msgstr "Eq: equals メソッドは常に false を戻す (EQ_ALWAYS_FALSE)"

#~ msgid "UR: Uninitialized read of field in constructor (UR_UNINIT_READ)"
#~ msgstr "UR: コンストラクタで初期化されていないフィールドを読み出している (UR_UNINIT_READ)"

#~ msgid "Nm: Very confusing method names (NM_VERY_CONFUSING)"
#~ msgstr "Nm: 非常に紛らわしい名前のメソッド (NM_VERY_CONFUSING)"

#~ msgid "NP: Read of unwritten field (NP_UNWRITTEN_FIELD)"
#~ msgstr "NP: 書き込まれていないフィールドの読み出し (NP_UNWRITTEN_FIELD)"

#~ msgid "UwF: Field only ever set to null (UWF_NULL_FIELD)"
#~ msgstr "UwF: null に設定されるだけのフィールド (UWF_NULL_FIELD)"

#~ msgid "UwF: Unwritten field (UWF_UNWRITTEN_FIELD)"
#~ msgstr "UwF: 書き込まれていないフィールド (UWF_UNWRITTEN_FIELD)"

#~ msgid "RANGE: Array index is out of bounds (RANGE_ARRAY_INDEX)"
#~ msgstr "RANGE: 配列インデックスは範囲外 (RANGE_ARRAY_INDEX)"

#~ msgid "RANGE: Array offset is out of bounds (RANGE_ARRAY_OFFSET)"
#~ msgstr "RANGE: 配列オフセットは範囲外 (RANGE_ARRAY_OFFSET)"

#~ msgid "RANGE: Array length is out of bounds (RANGE_ARRAY_LENGTH)"
#~ msgstr "RANGE: 配列の長さは範囲外 (RANGE_ARRAY_LENGTH)"

#~ msgid "RANGE: String index is out of bounds (RANGE_STRING_INDEX)"
#~ msgstr "RANGE: 文字列インデックスは範囲外 (RANGE_STRING_INDEX)"

#~ msgid "RV: Method ignores return value (RV_RETURN_VALUE_IGNORED)"
#~ msgstr "RV: 戻り値を無視しているメソッド (RV_RETURN_VALUE_IGNORED)"

#~ msgid "NP: Null pointer dereference (NP_ALWAYS_NULL)"
#~ msgstr "NP: null 値を利用している (NP_ALWAYS_NULL)"

#~ msgid "NP: close() invoked on a value that is always null (NP_CLOSING_NULL)"
#~ msgstr "NP: 常に null 値のオブジェクトで close メソッドを呼び出している (NP_CLOSING_NULL)"

#~ msgid "NP: Possible null pointer dereference (NP_NULL_ON_SOME_PATH)"
#~ msgstr "NP: null 値を利用している可能性がある (NP_NULL_ON_SOME_PATH)"

#~ msgid "NP: Null value is guaranteed to be dereferenced (NP_GUARANTEED_DEREF)"
#~ msgstr "NP: null 値を利用することが保証されている (NP_GUARANTEED_DEREF)"

#~ msgid "DMI: Reversed method arguments (DMI_ARGUMENTS_WRONG_ORDER)"
#~ msgstr "DMI: 逆にされたメソッド引数 (DMI_ARGUMENTS_WRONG_ORDER)"

#~ msgid "RC: Suspicious reference comparison (RC_REF_COMPARISON)"
#~ msgstr "RC: 疑わしい参照比較 (RC_REF_COMPARISON)"

#~ msgid "FS: Illegal format string (VA_FORMAT_STRING_ILLEGAL)"
#~ msgstr ""

#~ msgid "EC: Call to equals() comparing different types (EC_UNRELATED_TYPES)"
#~ msgstr "EC: equals メソッドを呼び出して異なる型を比較している (EC_UNRELATED_TYPES)"

#~ msgid "EC: equals() used to compare array and nonarray (EC_ARRAY_AND_NONARRAY)"
#~ msgstr "EC: equals メソッドを使用して配列と非配列を比較している (EC_ARRAY_AND_NONARRAY)"

#~ msgid "EC: Call to equals(null) (EC_NULL_ARG)"
#~ msgstr "EC: equals(null) の呼び出し (EC_NULL_ARG)"

#~ msgid "BIT: Bitwise add of signed byte value (BIT_ADD_OF_SIGNED_BYTE)"
#~ msgstr "BIT: 符号付きバイト値のビット加算 (BIT_ADD_OF_SIGNED_BYTE)"

#~ msgid "BIT: Bitwise OR of signed byte value (BIT_IOR_OF_SIGNED_BYTE)"
#~ msgstr "BIT: 符号付きバイト値のビット論理和 (BIT_IOR_OF_SIGNED_BYTE)"

#~ msgid "BIT: Incompatible bit masks (BIT_AND)"
#~ msgstr "BIT: 互換性のないビットマスク (BIT_AND)"

#~ msgid "BIT: Check to see if ((...) & 0) == 0 (BIT_AND_ZZ)"
#~ msgstr "BIT: ((...) & 0) == 0 なのか確かめている (BIT_AND_ZZ)"

#~ msgid "BIT: Incompatible bit masks (BIT_IOR)"
#~ msgstr "BIT: 互換性のないビットマスク (BIT_IOR)"

#~ msgid "SA: Self assignment of field (SA_FIELD_SELF_ASSIGNMENT)"
#~ msgstr "SA: フィールドの自己代入 (SA_FIELD_SELF_ASSIGNMENT)"

#~ msgid "SA: Self comparison of field with itself (SA_FIELD_SELF_COMPARISON)"
#~ msgstr "SA: フィールドとそれ自身との自己比較 (SA_FIELD_SELF_COMPARISON)"

#~ msgid "SA: Self comparison of value with itself (SA_LOCAL_SELF_COMPARISON)"
#~ msgstr "SA: ローカル変数とそれ自身との自己比較 (SA_LOCAL_SELF_COMPARISON)"

#~ msgid "IJU: TestCase declares a bad suite method  (IJU_BAD_SUITE_METHOD)"
#~ msgstr ""

#~ msgid "IJU: TestCase has no tests (IJU_NO_TESTS)"
#~ msgstr "IJU: TestCase はテストがない  (IJU_NO_TESTS)"

#~ msgid "DLS: Dead store of class literal (DLS_DEAD_STORE_OF_CLASS_LITERAL)"
#~ msgstr "DLS: クラスリテラルの無効な代入 (DLS_DEAD_STORE_OF_CLASS_LITERAL)"

#~ msgid "FE: Doomed test for equality to NaN (FE_TEST_IF_EQUAL_TO_NOT_A_NUMBER)"
#~ msgstr "FE: NaN への等価性のための絶望的なテスト (FE_TEST_IF_EQUAL_TO_NOT_A_NUMBER)"

#~ msgid "BC: Impossible cast (BC_IMPOSSIBLE_CAST)"
#~ msgstr "BC: 不可能なキャスト (BC_IMPOSSIBLE_CAST)"

#~ msgid "BC: Impossible downcast (BC_IMPOSSIBLE_DOWNCAST)"
#~ msgstr "BC: 不可能なダウンキャスト (BC_IMPOSSIBLE_DOWNCAST)"

#~ msgid "BC: instanceof will always return false (BC_IMPOSSIBLE_INSTANCEOF)"
#~ msgstr "BC: 常に false を返す instanceof (BC_IMPOSSIBLE_INSTANCEOF)"

#~ msgid "DLS: Overwritten increment (DLS_OVERWRITTEN_INCREMENT)"
#~ msgstr "DLS: 上書きされたインクリメント (DLS_OVERWRITTEN_INCREMENT)"

#~ msgid "DMI: Bad constant value for month (DMI_BAD_MONTH)"
#~ msgstr "DMI: 月のための間違った定数値 (DMI_BAD_MONTH)"

#~ msgid "DMI: hasNext method invokes next (DMI_CALLING_NEXT_FROM_HASNEXT)"
#~ msgstr "DMI: hasNext メソッドで next メソッドを呼び出している (DMI_CALLING_NEXT_FROM_HASNEXT)"

#~ msgid "DMI: Vacuous call to collections (DMI_VACUOUS_SELF_COLLECTION_CALL)"
#~ msgstr "DMI: コレクションへの無意味な呼び出し (DMI_VACUOUS_SELF_COLLECTION_CALL)"

#~ msgid "DMI: D'oh! A nonsensical method invocation (DMI_DOH)"
#~ msgstr "DMI: D'oh! 無意味なメソッド呼び出し (DMI_DOH)"

#~ msgid "FB: Unexpected/undesired warning from SpotBugs (FB_UNEXPECTED_WARNING)"
#~ msgstr "FB: FindBugs からの予期しない/望ましくない警告 (FB_UNEXPECTED_WARNING)"

#~ msgid "Experimental (EXPERIMENTAL)"
#~ msgstr "実験用 (EXPERIMENTAL)"

#~ msgid "Experimental and not fully vetted bug patterns"
#~ msgstr ""

#~ msgid "SKIPPED: Class too big for analysis (SKIPPED_CLASS_TOO_BIG)"
#~ msgstr "SKIPPED: 解析するにはあまりにも大きいクラス (SKIPPED_CLASS_TOO_BIG)"

#~ msgid "TEST: Unknown bug pattern (UNKNOWN)"
#~ msgstr "TEST: 未知のバグパターン (UNKNOWN)"

#~ msgid "TEST: Testing (TESTING)"
#~ msgstr "TEST: テスト (TESTING)"

#~ msgid "TEST: Testing 1  (TESTING1)"
#~ msgstr ""

#~ msgid "TEST: Testing 2 (TESTING2)"
#~ msgstr "TEST: テスト2 (TESTING2)"

#~ msgid "TEST: Testing 3 (TESTING3)"
#~ msgstr "TEST: テスト3 (TESTING3)"

#~ msgid "Internationalization (I18N)"
#~ msgstr "国際化 (I18N)"

#~ msgid "code flaws having to do with internationalization and locale"
#~ msgstr ""

#~ msgid "Dm: Reliance on default encoding (DM_DEFAULT_ENCODING)"
#~ msgstr "Dm: デフォルトエンコーディングへの依存 (DM_DEFAULT_ENCODING)"

#~ msgid "Malicious code vulnerability (MALICIOUS_CODE)"
#~ msgstr "悪意のあるコード脆弱性 (MALICIOUS_CODE)"

#~ msgid "code that is vulnerable to attacks from untrusted code"
#~ msgstr ""

#~ msgid "MS: Field isn't final but should be (MS_SHOULD_BE_FINAL)"
#~ msgstr "MS: final にすべきフィールド (MS_SHOULD_BE_FINAL)"

#~ msgid "MS: Field should be package protected (MS_PKGPROTECT)"
#~ msgstr "MS: パッケージプロテクテッドにすべきフィールド (MS_PKGPROTECT)"

#~ msgid "MS: Field is a mutable Hashtable (MS_MUTABLE_HASHTABLE)"
#~ msgstr "MS: 可変 Hashtable のフィールド (MS_MUTABLE_HASHTABLE)"

#~ msgid "MS: Field is a mutable array (MS_MUTABLE_ARRAY)"
#~ msgstr "MS: 可変配列のフィールド (MS_MUTABLE_ARRAY)"

#~ msgid "MS: Field is a mutable collection (MS_MUTABLE_COLLECTION)"
#~ msgstr "MS: 可変コレクションのフィールド (MS_MUTABLE_COLLECTION)"

#~ msgid "Multithreaded correctness (MT_CORRECTNESS)"
#~ msgstr "マルチスレッドの正確性 (MT_CORRECTNESS)"

#~ msgid "code flaws having to do with threads, locks, and volatiles"
#~ msgstr ""

#~ msgid "STCAL: Static Calendar field (STCAL_STATIC_CALENDAR_INSTANCE)"
#~ msgstr "STCAL: static Calendar フィールド (STCAL_STATIC_CALENDAR_INSTANCE)"

#~ msgid "STCAL: Static DateFormat (STCAL_STATIC_SIMPLE_DATE_FORMAT_INSTANCE)"
#~ msgstr ""

#~ msgid "Dm: Monitor wait() called on Condition (DM_MONITOR_WAIT_ON_CONDITION)"
#~ msgstr "Dm: Condition で呼び出された wait メソッドを監視している (DM_MONITOR_WAIT_ON_CONDITION)"

#~ msgid "DC: Possible double check of field (DC_DOUBLECHECK)"
#~ msgstr "DC: フィールドのダブルチェックの可能性 (DC_DOUBLECHECK)"

#~ msgid "DL: Synchronization on Boolean (DL_SYNCHRONIZATION_ON_BOOLEAN)"
#~ msgstr "DL: Boolean の同期化 (DL_SYNCHRONIZATION_ON_BOOLEAN)"

#~ msgid "ESync: Empty synchronized block (ESync_EMPTY_SYNC)"
#~ msgstr "ESync: 空の synchronized ブロック (ESync_EMPTY_SYNC)"

#~ msgid "MSF: Mutable servlet field (MSF_MUTABLE_SERVLET_FIELD)"
#~ msgstr "MSF: 可変サーブレットフィールド (MSF_MUTABLE_SERVLET_FIELD)"

#~ msgid "IS: Inconsistent synchronization (IS2_INCONSISTENT_SYNC)"
#~ msgstr "IS: 一貫性のない同期化 (IS2_INCONSISTENT_SYNC)"

#~ msgid "NN: Naked notify (NN_NAKED_NOTIFY)"
#~ msgstr "NN: 裸の notify メソッド (NN_NAKED_NOTIFY)"

#~ msgid "SP: Method spins on field (SP_SPIN_ON_FIELD)"
#~ msgstr "SP: スピンロックをしているメソッド (SP_SPIN_ON_FIELD)"

#~ msgid "TLW: Wait with two locks held (TLW_TWO_LOCK_WAIT)"
#~ msgstr "TLW: 2つ以上のロックを保持して wait メソッドを呼び出している (TLW_TWO_LOCK_WAIT)"

#~ msgid "UW: Unconditional wait (UW_UNCOND_WAIT)"
#~ msgstr "UW: wait メソッドの無条件呼び出し (UW_UNCOND_WAIT)"

#~ msgid "IS: Inconsistent synchronization (IS_INCONSISTENT_SYNC)"
#~ msgstr "IS: 一貫性のない同期化 (IS_INCONSISTENT_SYNC)"

#~ msgid "IS: Field not guarded against concurrent access (IS_FIELD_NOT_GUARDED)"
#~ msgstr "IS: 並行アクセスに対してガードされていないフィールド (IS_FIELD_NOT_GUARDED)"

#~ msgid "ML: Method synchronizes on an updated field (ML_SYNC_ON_UPDATED_FIELD)"
#~ msgstr "ML: 更新されるフィールドで同期化しているメソッド (ML_SYNC_ON_UPDATED_FIELD)"

#~ msgid "RS: Class's readObject() method is synchronized (RS_READOBJECT_SYNC)"
#~ msgstr "RS: readObject メソッドを同期化しているクラス (RS_READOBJECT_SYNC)"

#~ msgid "SC: Constructor invokes Thread.start() (SC_START_IN_CTOR)"
#~ msgstr "SC: Thread.start() を呼び出しているコンストラクタ (SC_START_IN_CTOR)"

#~ msgid "Wa: Wait not in loop  (WA_NOT_IN_LOOP)"
#~ msgstr ""

#~ msgid "Wa: Condition.await() not in loop  (WA_AWAIT_NOT_IN_LOOP)"
#~ msgstr ""

#~ msgid "No: Using notify() rather than notifyAll() (NO_NOTIFY_NOT_NOTIFYALL)"
#~ msgstr "No: notifyAll メソッドではなく notify メソッドを使用している (NO_NOTIFY_NOT_NOTIFYALL)"

#~ msgid "UL: Method does not release lock on all paths (UL_UNRELEASED_LOCK)"
#~ msgstr "UL: すべての経路でロックが解除されないメソッド (UL_UNRELEASED_LOCK)"

#~ msgid "MWN: Mismatched wait() (MWN_MISMATCHED_WAIT)"
#~ msgstr "MWN: 不整合な wait メソッド (MWN_MISMATCHED_WAIT)"

#~ msgid "MWN: Mismatched notify() (MWN_MISMATCHED_NOTIFY)"
#~ msgstr "MWN: 不整合な notify メソッド (MWN_MISMATCHED_NOTIFY)"

#~ msgid "LI: Incorrect lazy initialization of static field (LI_LAZY_INIT_STATIC)"
#~ msgstr "LI: static フィールドの間違った遅延初期化 (LI_LAZY_INIT_STATIC)"

#~ msgid "JLM: Synchronization performed on Lock (JLM_JSR166_LOCK_MONITORENTER)"
#~ msgstr "JLM: Lock で同期化している (JLM_JSR166_LOCK_MONITORENTER)"

#~ msgid "Bogus random noise (NOISE)"
#~ msgstr "偽のランダムノイズ (NOISE)"

#~ msgid "NOISE: Bogus warning about a method call (NOISE_METHOD_CALL)"
#~ msgstr "NOISE: メソッド呼び出しに関する偽の警告 (NOISE_METHOD_CALL)"

#~ msgid "NOISE: Bogus warning about a field reference (NOISE_FIELD_REFERENCE)"
#~ msgstr "NOISE: フィールド参照に関する偽の警告 (NOISE_FIELD_REFERENCE)"

#~ msgid "NOISE: Bogus warning about an operation (NOISE_OPERATION)"
#~ msgstr "NOISE: 演算に関する偽の警告 (NOISE_OPERATION)"

#~ msgid "Performance (PERFORMANCE)"
#~ msgstr "性能 (PERFORMANCE)"

#~ msgid "code that is not necessarily incorrect but may be inefficient"
#~ msgstr ""

#~ msgid "Dm: Method invokes toString() method on a String (DM_STRING_TOSTRING)"
#~ msgstr "Dm: String の toString メソッドを呼び出しているメソッド (DM_STRING_TOSTRING)"

#~ msgid "Bx: Boxing a primitive to compare (DM_BOXED_PRIMITIVE_FOR_COMPARE)"
#~ msgstr "Bx: プリミティブが比較でボクシングされている (DM_BOXED_PRIMITIVE_FOR_COMPARE)"

#~ msgid "SS: Unread field: should this field be static? (SS_SHOULD_BE_STATIC)"
#~ msgstr "SS: 読み出されないフィールド (SS_SHOULD_BE_STATIC)"

#~ msgid "UuF: Unused field (UUF_UNUSED_FIELD)"
#~ msgstr "UuF: 未使用のフィールド (UUF_UNUSED_FIELD)"

#~ msgid "UrF: Unread field (URF_UNREAD_FIELD)"
#~ msgstr "UrF: 読み出されないフィールド (URF_UNREAD_FIELD)"

#~ msgid "SIC: Should be a static inner class (SIC_INNER_SHOULD_BE_STATIC)"
#~ msgstr "SIC: static 内部クラスにすべき (SIC_INNER_SHOULD_BE_STATIC)"

#~ msgid "UPM: Private method is never called (UPM_UNCALLED_PRIVATE_METHOD)"
#~ msgstr "UPM: private メソッドは決して呼び出されない (UPM_UNCALLED_PRIVATE_METHOD)"

#~ msgid "Security (SECURITY)"
#~ msgstr "セキュリティ (SECURITY)"

#~ msgid "PT: Absolute path traversal in servlet (PT_ABSOLUTE_PATH_TRAVERSAL)"
#~ msgstr "PT: サーブレットの絶対パストラバーサル (PT_ABSOLUTE_PATH_TRAVERSAL)"

#~ msgid "PT: Relative path traversal in servlet (PT_RELATIVE_PATH_TRAVERSAL)"
#~ msgstr "PT: サーブレットの相対パストラバーサル (PT_RELATIVE_PATH_TRAVERSAL)"

#~ msgid "Dm: Hardcoded constant database password (DMI_CONSTANT_DB_PASSWORD)"
#~ msgstr "Dm: ハードコードされた定数データベースパスワード (DMI_CONSTANT_DB_PASSWORD)"

#~ msgid "Dm: Empty database password (DMI_EMPTY_DB_PASSWORD)"
#~ msgstr "Dm: 空のデータベースパスワード (DMI_EMPTY_DB_PASSWORD)"

#~ msgid "Dodgy code (STYLE)"
#~ msgstr "危ないコード (STYLE)"

#~ msgid "CAA: Covariant array assignment to a field (CAA_COVARIANT_ARRAY_FIELD)"
#~ msgstr "CAA: フィールドへの共変配列代入 (CAA_COVARIANT_ARRAY_FIELD)"

#~ msgid "Dm: Call to unsupported method (DMI_UNSUPPORTED_METHOD)"
#~ msgstr "Dm: サポートされていないメソッドの呼び出し (DMI_UNSUPPORTED_METHOD)"

#~ msgid "RV: Remainder of 32-bit signed random integer (RV_REM_OF_RANDOM_INT)"
#~ msgstr "RV: 符号付き32ビット整数の乱数の剰余 (RV_REM_OF_RANDOM_INT)"

#~ msgid "RV: Remainder of hashCode could be negative (RV_REM_OF_HASHCODE)"
#~ msgstr "RV: ハッシュコードの剰余は負かもしれない (RV_REM_OF_HASHCODE)"

#~ msgid "Eq: Unusual equals method  (EQ_UNUSUAL)"
#~ msgstr ""

#~ msgid "NS: Questionable use of non-short-circuit logic (NS_NON_SHORT_CIRCUIT)"
#~ msgstr "NS: 非短絡論理の疑わしい使用 (NS_NON_SHORT_CIRCUIT)"

#~ msgid "IC: Initialization circularity (IC_INIT_CIRCULARITY)"
#~ msgstr "IC: 初期化が循環している (IC_INIT_CIRCULARITY)"

#~ msgid "UC: Useless non-empty void method (UC_USELESS_VOID_METHOD)"
#~ msgstr "UC: 役に立たない空ではない void メソッド (UC_USELESS_VOID_METHOD)"

#~ msgid "UC: Condition has no effect (UC_USELESS_CONDITION)"
#~ msgstr "UC: 条件は効果がない (UC_USELESS_CONDITION)"

#~ msgid "UC: Useless object created (UC_USELESS_OBJECT)"
#~ msgstr "UC: 役に立たないオブジェクトを作成した (UC_USELESS_OBJECT)"

#~ msgid "UC: Useless object created on stack (UC_USELESS_OBJECT_STACK)"
#~ msgstr "UC: 役に立たないオブジェクトをスタックで作成した (UC_USELESS_OBJECT_STACK)"

#~ msgid "NP: Load of known null value (NP_LOAD_OF_KNOWN_NULL_VALUE)"
#~ msgstr "NP: null とわかっている値のロード (NP_LOAD_OF_KNOWN_NULL_VALUE)"

#~ msgid "UCF: Useless control flow (UCF_USELESS_CONTROL_FLOW)"
#~ msgstr "UCF: 役に立たない制御フロー (UCF_USELESS_CONTROL_FLOW)"

#~ msgid "SA: Self assignment of local variable (SA_LOCAL_SELF_ASSIGNMENT)"
#~ msgstr "SA: ローカル変数の自己代入 (SA_LOCAL_SELF_ASSIGNMENT)"

#~ msgid "INT: Integer remainder modulo 1 (INT_BAD_REM_BY_1)"
#~ msgstr "INT: 1を法とする整数の剰余 (INT_BAD_REM_BY_1)"

#~ msgid "INT: Vacuous comparison of integer value (INT_VACUOUS_COMPARISON)"
#~ msgstr "INT: 整数値の無意味な比較 (INT_VACUOUS_COMPARISON)"

#~ msgid "SA: Double assignment of local variable  (SA_LOCAL_DOUBLE_ASSIGNMENT)"
#~ msgstr ""

#~ msgid "SA: Double assignment of field (SA_FIELD_DOUBLE_ASSIGNMENT)"
#~ msgstr "SA: フィールドの二重代入 (SA_FIELD_DOUBLE_ASSIGNMENT)"

#~ msgid "DLS: Dead store to local variable (DLS_DEAD_LOCAL_STORE)"
#~ msgstr "DLS: ローカル変数への無効な代入 (DLS_DEAD_LOCAL_STORE)"

#~ msgid "FE: Test for floating point equality (FE_FLOATING_POINT_EQUALITY)"
#~ msgstr "FE: 浮動小数点の等価性のためのテスト (FE_FLOATING_POINT_EQUALITY)"

#~ msgid "BC: Unchecked/unconfirmed cast (BC_UNCONFIRMED_CAST)"
#~ msgstr "BC: 未チェック/未確認のキャスト (BC_UNCONFIRMED_CAST)"

#~ msgid "BC: instanceof will always return true (BC_VACUOUS_INSTANCEOF)"
#~ msgstr "BC: 常に true を返す instanceof (BC_VACUOUS_INSTANCEOF)"

#~ msgid "DB: Method uses the same code for two branches (DB_DUPLICATE_BRANCHES)"
#~ msgstr "DB: 2つの分岐のために同じコードを使用しているメソッド (DB_DUPLICATE_BRANCHES)"

#~ msgid "バッドプラクティス (BAD_PRACTICE)"
#~ msgstr ""

#~ msgid ""
#~ "推奨または必須のコーディングプラクティスへの違反です。たとえば，hashCode と equals "
#~ "の問題，Cloneable イディオム，捨てられた例外，Serializable の問題，finalize "
#~ "の誤用などです。 "
#~ "いくつかのグループはバッドプラクティスを気にしないかもしれないが，我々はこの解析が正確になるよう努力しています。"
#~ msgstr ""

#~ msgid "CNT: 既知の定数の雑な値を見つけた (CNT_ROUGH_CONSTANT_VALUE)"
#~ msgstr ""

#~ msgid "NP: 戻り型が Boolean のメソッドが明示的に null を返している (NP_BOOLEAN_RETURN_NULL)"
#~ msgstr ""

#~ msgid ""
#~ "SW: Swing メソッドは AWT イベントディスパッチスレッドから呼び出す必要がある"
#~ " (SW_SWING_METHODS_INVOKED_IN_SWING_THREAD)"
#~ msgstr ""

#~ msgid "FI: ファイナライザはフィールドを null にするだけ (FI_FINALIZER_ONLY_NULLS_FIELDS)"
#~ msgstr ""

#~ msgid "FI: ファイナライザはフィールドを null にする (FI_FINALIZER_NULLS_FIELDS)"
#~ msgstr ""

#~ msgid ""
#~ "UI: クラスが拡張されるなら getResource の使い方は安全ではないかもしれない "
#~ "(UI_INHERITANCE_UNSAFE_GETRESOURCE)"
#~ msgstr ""

#~ msgid "AM: 空の ZIP ファイルエントリの作成 (AM_CREATES_EMPTY_ZIP_FILE_ENTRY)"
#~ msgstr ""

#~ msgid "AM: 空の JAR ファイルエントリの作成 (AM_CREATES_EMPTY_JAR_FILE_ENTRY)"
#~ msgstr ""

#~ msgid "IMSE: 疑わしい IllegalMonitorStateException のキャッチ (IMSE_DONT_CATCH_IMSE)"
#~ msgstr ""

#~ msgid ""
#~ "CN: Cloneable を実装していないクラスが clone メソッドを定義している"
#~ " (CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE)"
#~ msgstr ""

#~ msgid "CN: Cloneable を実装したクラスが clone メソッドを定義も使用もしていない (CN_IDIOM)"
#~ msgstr ""

#~ msgid "CN: clone メソッドが super.clone() を呼び出していない (CN_IDIOM_NO_SUPER_CALL)"
#~ msgstr ""

#~ msgid "DE: 例外を捨てているかもしれないメソッド (DE_MIGHT_DROP)"
#~ msgstr ""

#~ msgid "DE: 例外を無視しているかもしれないメソッド (DE_MIGHT_IGNORE)"
#~ msgstr ""

#~ msgid "Dm: System.exit(...) を呼び出しているメソッド (DM_EXIT)"
#~ msgstr ""

#~ msgid ""
#~ "Nm: Java の後のバージョンのキーワードである識別子を使用している "
#~ "(NM_FUTURE_KEYWORD_USED_AS_IDENTIFIER)"
#~ msgstr ""

#~ msgid ""
#~ "Nm: Java の後のバージョンのキーワードである識別子を使用している "
#~ "(NM_FUTURE_KEYWORD_USED_AS_MEMBER_IDENTIFIER)"
#~ msgstr ""

#~ msgid ""
#~ "JCIP: 不変クラスのフィールドは final にすべき "
#~ "(JCIP_FIELD_ISNT_FINAL_IN_IMMUTABLE_CLASS)"
#~ msgstr ""

#~ msgid ""
#~ "Dm: 危険なメソッド runFinalizersOnExit を呼び出しているメソッド "
#~ "(DM_RUN_FINALIZERS_ON_EXIT)"
#~ msgstr ""

#~ msgid ""
#~ "NP: equals メソッドは null の引数をチェックしていない "
#~ "(NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT)"
#~ msgstr ""

#~ msgid "FI: 空のファイナライザは削除すべき (FI_EMPTY)"
#~ msgstr ""

#~ msgid "FI: ファイナライザはスーパークラスのファイナライザを無効にしている (FI_NULLIFY_SUPER)"
#~ msgstr ""

#~ msgid "FI: ファイナライザはスーパークラスのファイナライザを呼び出しているだけ (FI_USELESS)"
#~ msgstr ""

#~ msgid "FI: ファイナライザはスーパークラスのファイナライザを呼び出していない (FI_MISSING_SUPER_CALL)"
#~ msgstr ""

#~ msgid "FI: ファイナライザの明示的な呼び出し (FI_EXPLICIT_INVOCATION)"
#~ msgstr ""

#~ msgid ""
#~ "Eq: equals メソッドは互換性のないオペランドをチェックしている "
#~ "(EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS)"
#~ msgstr ""

#~ msgid "Eq: equals メソッドはサブタイプのために失敗する (EQ_GETCLASS_AND_CLASS_CONSTANT)"
#~ msgstr ""

#~ msgid "Eq: 共変な equals メソッドの定義 (EQ_SELF_NO_OBJECT)"
#~ msgstr ""

#~ msgid "Co: 共変な compareTo メソッドの定義 (CO_SELF_NO_OBJECT)"
#~ msgstr ""

#~ msgid ""
#~ "Co: compareTo()/compare() は Integer.MIN_VALUE "
#~ "を返す (CO_COMPARETO_RESULTS_MIN_VALUE)"
#~ msgstr ""

#~ msgid ""
#~ "Co: compareTo()/compare() は間違って float または "
#~ "double 値を処理する (CO_COMPARETO_INCORRECT_FLOATING)"
#~ msgstr ""

#~ msgid "RV: compareTo()/compare() の結果を無効にする (RV_NEGATING_RESULT_OF_COMPARETO)"
#~ msgstr ""

#~ msgid "ES: String オブジェクトを == や != を使用して比較している (ES_COMPARING_STRINGS_WITH_EQ)"
#~ msgstr ""

#~ msgid ""
#~ "ES: String パラメータを == や != "
#~ "を使用して比較している (ES_COMPARING_PARAMETER_STRING_WITH_EQ)"
#~ msgstr ""

#~ msgid ""
#~ "Eq: compareTo(...) メソッドを定義して Object.equals() "
#~ "を使用しているクラス (EQ_COMPARETO_USE_OBJECT_EQUALS)"
#~ msgstr ""

#~ msgid ""
#~ "HE: hashCode メソッドを定義して Object.equals() "
#~ "を使用しているクラス (HE_HASHCODE_USE_OBJECT_EQUALS)"
#~ msgstr ""

#~ msgid ""
#~ "HE: hashCode メソッドを定義していますが equals "
#~ "メソッドは定義していないクラス (HE_HASHCODE_NO_EQUALS)"
#~ msgstr ""

#~ msgid ""
#~ "HE: equals メソッドを定義して Object.hashCode() "
#~ "を使用しているクラス (HE_EQUALS_USE_HASHCODE)"
#~ msgstr ""

#~ msgid ""
#~ "HE: equals メソッドを継承して Object.hashCode() "
#~ "を使用しているクラス (HE_INHERITS_EQUALS_USE_HASHCODE)"
#~ msgstr ""

#~ msgid ""
#~ "HE: equals メソッドは定義していますが hashCode "
#~ "メソッドは定義していないクラス (HE_EQUALS_NO_HASHCODE)"
#~ msgstr ""

#~ msgid "Eq: 抽象クラスは共変な equals メソッドを宣言している (EQ_ABSTRACT_SELF)"
#~ msgstr ""

#~ msgid "Co: 抽象クラスは共変な compareTo メソッドを定義している (CO_ABSTRACT_SELF)"
#~ msgstr ""

#~ msgid ""
#~ "IC: スーパークラスは初期化中にサブクラスを使用している "
#~ "(IC_SUPERCLASS_USES_SUBCLASS_DURING_INITIALIZATION)"
#~ msgstr ""

#~ msgid ""
#~ "SI: スタティックイニシャライザは，すべての static final "
#~ "フィールドが代入される前にインスタンスを作成する (SI_INSTANCE_BEFORE_FINALS_ASSIGNED)"
#~ msgstr ""

#~ msgid ""
#~ "It: Iterator.next() が NoSuchElementException "
#~ "をスローできない (IT_NO_SUCH_ELEMENT)"
#~ msgstr ""

#~ msgid "ME: 列挙型フィールドは public で可変である (ME_MUTABLE_ENUM_FIELD)"
#~ msgstr ""

#~ msgid "ME: public 列挙型メソッドが無条件にフィールドを設定する (ME_ENUM_FIELD_SETTER)"
#~ msgstr ""

#~ msgid "Nm: メソッド名は小文字から始めるべき (NM_METHOD_NAMING_CONVENTION)"
#~ msgstr ""

#~ msgid "Nm: フィールド名は小文字から始めるべき (NM_FIELD_NAMING_CONVENTION)"
#~ msgstr ""

#~ msgid "Nm: クラス名は実装されたインタフェースの単純名を遮るべきではない (NM_SAME_SIMPLE_NAME_AS_INTERFACE)"
#~ msgstr ""

#~ msgid "Nm: クラス名はスーパークラスの単純名を遮るべきではない (NM_SAME_SIMPLE_NAME_AS_SUPERCLASS)"
#~ msgstr ""

#~ msgid "Nm: クラス名は大文字から始めるべき (NM_CLASS_NAMING_CONVENTION)"
#~ msgstr ""

#~ msgid "Nm: 非常に紛らわしい名前のメソッド (多分意図的) (NM_VERY_CONFUSING_INTENTIONAL)"
#~ msgstr ""

#~ msgid ""
#~ "Nm: パラメータの間違ったパッケージのためにスーパークラスのメソッドをオーバーライドしていないメソッド "
#~ "(NM_WRONG_PACKAGE_INTENTIONAL)"
#~ msgstr ""

#~ msgid "Nm: 紛らわしい名前のメソッド (NM_CONFUSING)"
#~ msgstr ""

#~ msgid ""
#~ "Nm: 例外クラスのように命名されているが，クラスは Exception から派生されていない "
#~ "(NM_CLASS_NOT_EXCEPTION)"
#~ msgstr ""

#~ msgid "RR: InputStream.read() の戻り値を無視しているメソッド (RR_NOT_CHECKED)"
#~ msgstr ""

#~ msgid "RR: InputStream.skip() の戻り値を無視しているメソッド (SR_NOT_CHECKED)"
#~ msgstr ""

#~ msgid ""
#~ "Se: Serializable なクラスのスーパークラスで，引数なしコンストラクタを定義していない "
#~ "(SE_NO_SUITABLE_CONSTRUCTOR)"
#~ msgstr ""

#~ msgid ""
#~ "Se: Externalizable なクラスが引数なしコンストラクタを定義していない "
#~ "(SE_NO_SUITABLE_CONSTRUCTOR_FOR_EXTERNALIZATION)"
#~ msgstr ""

#~ msgid ""
#~ "Se: Comparator は Serializable を実装していない "
#~ "(SE_COMPARATOR_SHOULD_BE_SERIALIZABLE)"
#~ msgstr ""

#~ msgid ""
#~ "SnVI: Serializable なクラスが serialVersionUID "
#~ "を定義していない (SE_NO_SERIALVERSIONID)"
#~ msgstr ""

#~ msgid ""
#~ "Se: readResolve メソッドの戻り値の型が Object で宣言されていない"
#~ " (SE_READ_RESOLVE_MUST_RETURN_OBJECT)"
#~ msgstr ""

#~ msgid "Se: 直列化復元によって設定されない transient フィールド  (SE_TRANSIENT_FIELD_NOT_RESTORED)"
#~ msgstr ""

#~ msgid "Se: serialVersionUID が final ではない (SE_NONFINAL_SERIALVERSIONID)"
#~ msgstr ""

#~ msgid "Se: serialVersionUID が static ではない (SE_NONSTATIC_SERIALVERSIONID)"
#~ msgstr ""

#~ msgid "Se: serialVersionUID が long ではない (SE_NONLONG_SERIALVERSIONID)"
#~ msgstr ""

#~ msgid "Se: 直列化可能クラスの非 transient で非直列化可能なインスタンスフィールド (SE_BAD_FIELD)"
#~ msgstr ""

#~ msgid "Se: 直列化可能な内部クラス (SE_INNER_CLASS)"
#~ msgstr ""

#~ msgid "Se: 非直列化可能クラスに直列化可能な内部クラスがある (SE_BAD_FIELD_INNER_CLASS)"
#~ msgstr ""

#~ msgid "Se: 非直列化可能な値を直列化可能クラスのインスタンスフィールドに格納している (SE_BAD_FIELD_STORE)"
#~ msgstr ""

#~ msgid "RV: 例外的戻り値を無視しているメソッド (RV_RETURN_VALUE_IGNORED_BAD_PRACTICE)"
#~ msgstr ""

#~ msgid "NP: null を返すかもしれない toString メソッド (NP_TOSTRING_COULD_RETURN_NULL)"
#~ msgstr ""

#~ msgid "NP: null を返すかもしれない clone メソッド (NP_CLONE_COULD_RETURN_NULL)"
#~ msgstr ""

#~ msgid "OS: ストリームのクローズに失敗するかもしれないメソッド (OS_OPEN_STREAM)"
#~ msgstr ""

#~ msgid "OS: 例外経路でストリームのクローズに失敗するかもしれないメソッド (OS_OPEN_STREAM_EXCEPTION_PATH)"
#~ msgstr ""

#~ msgid "RC: 定数の疑わしい参照比較 (RC_REF_COMPARISON_BAD_PRACTICE)"
#~ msgstr ""

#~ msgid "RC: Boolean 値の疑わしい参照比較 (RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN)"
#~ msgstr ""

#~ msgid "FS: 書式文字列は \\n よりも %n を使用すべき (VA_FORMAT_STRING_USES_NEWLINE)"
#~ msgstr ""

#~ msgid "BIT: ビット演算の符号をチェックする (BIT_SIGNED_CHECK)"
#~ msgstr ""

#~ msgid "ODR: データベースリソースのクローズに失敗するかもしれないメソッド (ODR_OPEN_DATABASE_RESOURCE)"
#~ msgstr ""

#~ msgid ""
#~ "ODR: 例外経路でデータベースリソースのクローズに失敗するかもしれないメソッド "
#~ "(ODR_OPEN_DATABASE_RESOURCE_EXCEPTION_PATH)"
#~ msgstr ""

#~ msgid "ISC: static メソッドだけを提供するクラスの不必要なインスタンス化 (ISC_INSTANTIATE_STATIC_CLASS)"
#~ msgstr ""

#~ msgid "DMI: Random オブジェクトが作成され1度しか使われない (DMI_RANDOM_USED_ONLY_ONCE)"
#~ msgstr ""

#~ msgid ""
#~ "BC: equals メソッドは引数の型を仮定すべきではない "
#~ "(BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS)"
#~ msgstr ""

#~ msgid ""
#~ "J2EE: HttpSession への非直列化可能オブジェクトの格納 "
#~ "(J2EE_STORE_OF_NON_SERIALIZABLE_OBJECT_INTO_SESSION)"
#~ msgstr ""

#~ msgid "GC: 検査されない型への総称呼び出し (GC_UNCHECKED_TYPE_IN_GENERIC_CALL)"
#~ msgstr ""

#~ msgid "PZ: 繰り返しでエントリオブジェクトを再利用しない (PZ_DONT_REUSE_ENTRY_OBJECTS_IN_ITERATORS)"
#~ msgstr ""

#~ msgid ""
#~ "DMI: エントリセットの要素を加えることは，Entry オブジェクトの再利用のために失敗するかもしれない "
#~ "(DMI_ENTRY_SETS_MAY_REUSE_ENTRY_OBJECTS)"
#~ msgstr ""

#~ msgid ""
#~ "DMI: コレクションを消去するために removeAll メソッドを使用しない "
#~ "(DMI_USING_REMOVEALL_TO_CLEAR_COLLECTION)"
#~ msgstr ""

#~ msgid "正確性 (CORRECTNESS)"
#~ msgstr ""

#~ msgid "バグの可能性 - おそらく，開発者が意図していなかったコードになっている明らかなコーディングミスです。 我々は低い誤検出率のために努力します。"
#~ msgstr ""

#~ msgid "NP: Optional の戻り型を持つメソッドが明示的に null を返す (NP_OPTIONAL_RETURN_NULL)"
#~ msgstr ""

#~ msgid ""
#~ "NP: 非 null フィールドは初期化されていない "
#~ "(NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR)"
#~ msgstr ""

#~ msgid "VR: 解決できないクラス，メソッドへの参照 (VR_UNRESOLVABLE_REFERENCE)"
#~ msgstr ""

#~ msgid "IL: 明らかな無限ループ (IL_INFINITE_LOOP)"
#~ msgstr ""

#~ msgid "IO: オブジェクト出力ストリームへの追加は失敗に終わる (IO_APPENDING_TO_OBJECT_OUTPUT_STREAM)"
#~ msgstr ""

#~ msgid "IL: 明らかな無限再帰ループ (IL_INFINITE_RECURSIVE_LOOP)"
#~ msgstr ""

#~ msgid "IL: コレクションは自分自身を追加している (IL_CONTAINER_ADDED_TO_ITSELF)"
#~ msgstr ""

#~ msgid "RpC: 条件テストの繰り返し (RpC_REPEATED_CONDITIONAL_TEST)"
#~ msgstr ""

#~ msgid "FL: 浮動小数点精度を使用した計算をしている (FL_MATH_USING_FLOAT_PRECISION)"
#~ msgstr ""

#~ msgid "CAA: おそら互換性のない要素をく共変配列に格納している (CAA_COVARIANT_ARRAY_ELEMENT_STORE)"
#~ msgstr ""

#~ msgid ""
#~ "Dm: EasyMock メソッドへの役に立たない/無意味な呼び出し "
#~ "(DMI_VACUOUS_CALL_TO_EASYMOCK_METHOD)"
#~ msgstr ""

#~ msgid ""
#~ "Dm: ScheduledThreadPoolExecutor の最大プールサイズを変えようとする無駄な試み "
#~ "(DMI_FUTILE_ATTEMPT_TO_CHANGE_MAXPOOL_SIZE_OF_SCHEDULED_THREAD_POOL_EXECUTOR)"
#~ msgstr ""

#~ msgid ""
#~ "DMI: 正確に表されない double から構築された BigDecimal "
#~ "(DMI_BIGDECIMAL_CONSTRUCTED_FROM_DOUBLE)"
#~ msgstr ""

#~ msgid ""
#~ "Dm: コアプールサイズが0の ScheduledThreadPoolExecutor の作成 "
#~ "(DMI_SCHEDULED_THREAD_POOL_EXECUTOR_WITH_ZERO_CORE_THREADS)"
#~ msgstr ""

#~ msgid ""
#~ "Dm: ランタイムリテンションなしで，アノテーションの存在を調べるためにリフレクションを使用することはできない "
#~ "(DMI_ANNOTATION_IS_NOT_VISIBLE_TO_REFLECTION)"
#~ msgstr ""

#~ msgid "NP: null の引数をチェックしていないメソッド (NP_ARGUMENT_MIGHT_BE_NULL)"
#~ msgstr ""

#~ msgid "RV: 符号付き整数の乱数の絶対値を計算する間違った試み (RV_ABSOLUTE_VALUE_OF_RANDOM_INT)"
#~ msgstr ""

#~ msgid "RV: 符号付き32ビットハッシュコードの絶対値を計算する間違った試み (RV_ABSOLUTE_VALUE_OF_HASHCODE)"
#~ msgstr ""

#~ msgid "RV: 0から1の乱数値は整数値0に丸められる (RV_01_TO_INT)"
#~ msgstr ""

#~ msgid "Dm: Math.max と Math.min の間違った組み合わせ (DM_INVALID_MIN_MAX)"
#~ msgstr ""

#~ msgid "Eq: equals メソッドはクラスオブジェクトではなくクラス名を比較している (EQ_COMPARING_CLASS_NAMES)"
#~ msgstr ""

#~ msgid "Eq: equals メソッドは常に true を返す (EQ_ALWAYS_TRUE)"
#~ msgstr ""

#~ msgid "Eq: equals メソッドは常に false を戻す (EQ_ALWAYS_FALSE)"
#~ msgstr ""

#~ msgid ""
#~ "Eq: equals メソッドはスーパークラスの equals "
#~ "メソッドをオーバーライドしているが，対称的ではないかもしれない "
#~ "(EQ_OVERRIDING_EQUALS_NOT_SYMMETRIC)"
#~ msgstr ""

#~ msgid "Eq: 列挙型は共変な equals メソッドを定義している (EQ_DONT_DEFINE_EQUALS_FOR_ENUM)"
#~ msgstr ""

#~ msgid ""
#~ "Eq: 共変な equals メソッドを定義して，Object.equals(Object) "
#~ "を継承している (EQ_SELF_USE_OBJECT)"
#~ msgstr ""

#~ msgid ""
#~ "Eq: Object.equals(Object) をオーバーライドしていない equals "
#~ "メソッドの定義 (EQ_OTHER_USE_OBJECT)"
#~ msgstr ""

#~ msgid ""
#~ "Eq: equals(Object) メソッドをオーバーライドしていない equals "
#~ "メソッドの定義 (EQ_OTHER_NO_OBJECT)"
#~ msgstr ""

#~ msgid ""
#~ "HE: ハッシュ化されたコンテキストでハッシュ化できないクラスの使用がシグネチャで宣言されている "
#~ "(HE_SIGNATURE_DECLARES_HASHING_OF_UNHASHABLE_CLASS)"
#~ msgstr ""

#~ msgid "HE: ハッシュデータ構造で hashCode メソッドのないクラスを使用している (HE_USE_OF_UNHASHABLE_CLASS)"
#~ msgstr ""

#~ msgid "UR: コンストラクタで初期化されていないフィールドを読み出している (UR_UNINIT_READ)"
#~ msgstr ""

#~ msgid ""
#~ "UR: スーパークラスのコンストラクタから呼び出されるメソッドで初期化されていないフィールドを読み出している "
#~ "(UR_UNINIT_READ_CALLED_FROM_SUPER_CONSTRUCTOR)"
#~ msgstr ""

#~ msgid "Nm: 非常に紛らわしい名前のメソッド (NM_VERY_CONFUSING)"
#~ msgstr ""

#~ msgid "Nm: パラメータの間違ったパッケージのためにスーパークラスのメソッドをオーバーライドしていないメソッド (NM_WRONG_PACKAGE)"
#~ msgstr ""

#~ msgid "Nm: 明らかなメソッドとコンストラクタの混乱 (NM_METHOD_CONSTRUCTOR_CONFUSION)"
#~ msgstr ""

#~ msgid "Nm: クラスは hashcode() を定義しています。hashCode() にすべきですか? (NM_LCASE_HASHCODE)"
#~ msgstr ""

#~ msgid "Nm: クラスは tostring() を定義しています。toString() にすべきですか? (NM_LCASE_TOSTRING)"
#~ msgstr ""

#~ msgid "Nm: クラスは equal(Object) を定義しています。equals(Object) にすべきですか? (NM_BAD_EQUAL)"
#~ msgstr ""

#~ msgid "Se: readResolve メソッドが static メソッドとして宣言されている (SE_READ_RESOLVE_IS_STATIC)"
#~ msgstr ""

#~ msgid "Se: 直列化機構のために private にしなければならないメソッド (SE_METHOD_MUST_BE_PRIVATE)"
#~ msgstr ""

#~ msgid ""
#~ "SF: switch 文のフォールスルーのために格納が無効になっている "
#~ "(SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH)"
#~ msgstr ""

#~ msgid ""
#~ "SF: スローする switch 文のフォールスルーのために格納が無効になっている "
#~ "(SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH_TO_THROW)"
#~ msgstr ""

#~ msgid "NP: 書き込まれていないフィールドの読み出し (NP_UNWRITTEN_FIELD)"
#~ msgstr ""

#~ msgid "UwF: null に設定されるだけのフィールド (UWF_NULL_FIELD)"
#~ msgstr ""

#~ msgid "UwF: 書き込まれていないフィールド (UWF_UNWRITTEN_FIELD)"
#~ msgstr ""

#~ msgid "SIC: 非 static 内部クラスとスレッドローカルのデッドロック (SIC_THREADLOCAL_DEADLY_EMBRACE)"
#~ msgstr ""

#~ msgid "RANGE: 配列インデックスは範囲外 (RANGE_ARRAY_INDEX)"
#~ msgstr ""

#~ msgid "RANGE: 配列オフセットは範囲外 (RANGE_ARRAY_OFFSET)"
#~ msgstr ""

#~ msgid "RANGE: 配列の長さは範囲外 (RANGE_ARRAY_LENGTH)"
#~ msgstr ""

#~ msgid "RANGE: 文字列インデックスは範囲外 (RANGE_STRING_INDEX)"
#~ msgstr ""

#~ msgid "RV: 戻り値を無視しているメソッド (RV_RETURN_VALUE_IGNORED)"
#~ msgstr ""

#~ msgid "RV: 作成した例外をスローするのではなく捨てている (RV_EXCEPTION_NOT_THROWN)"
#~ msgstr ""

#~ msgid ""
#~ "RV: compareTo によって返された特定の値のコードチェック "
#~ "(RV_CHECK_COMPARETO_FOR_SPECIFIC_RETURN_VALUE)"
#~ msgstr ""

#~ msgid "NP: null 値を利用している (NP_ALWAYS_NULL)"
#~ msgstr ""

#~ msgid "NP: 常に null 値のオブジェクトで close メソッドを呼び出している (NP_CLOSING_NULL)"
#~ msgstr ""

#~ msgid ""
#~ "NP: @Nonnull アノテーションが付けられたフィールドに null を格納している"
#~ " (NP_STORE_INTO_NONNULL_FIELD)"
#~ msgstr ""

#~ msgid "NP: null 値を例外経路で利用している (NP_ALWAYS_NULL_EXCEPTION)"
#~ msgstr ""

#~ msgid "NP: null 値を利用している可能性がある (NP_NULL_ON_SOME_PATH)"
#~ msgstr ""

#~ msgid "NP: null 値を例外経路で利用している可能性がある (NP_NULL_ON_SOME_PATH_EXCEPTION)"
#~ msgstr ""

#~ msgid "NP: メソッド呼び出しは非 null パラメータに null を渡している (NP_NULL_PARAM_DEREF)"
#~ msgstr ""

#~ msgid ""
#~ "NP: 非 null パラメータに null "
#~ "を渡している非仮想メソッドの呼び出し (NP_NULL_PARAM_DEREF_NONVIRTUAL)"
#~ msgstr ""

#~ msgid ""
#~ "NP: メソッド呼び出しは非 null パラメータに null を渡している"
#~ " (NP_NULL_PARAM_DEREF_ALL_TARGETS_DANGEROUS)"
#~ msgstr ""

#~ msgid "NP: メソッド呼び出しは非 null パラメータに null を渡している (NP_NONNULL_PARAM_VIOLATION)"
#~ msgstr ""

#~ msgid "NP: null を返すかもしれないメソッドが @Nonnull 宣言されている (NP_NONNULL_RETURN_VIOLATION)"
#~ msgstr ""

#~ msgid "NP: null 値を利用することが保証されている (NP_GUARANTEED_DEREF)"
#~ msgstr ""

#~ msgid "NP: null 値を例外経路で利用することが保証されている (NP_GUARANTEED_DEREF_ON_EXCEPTION_PATH)"
#~ msgstr ""

#~ msgid "DMI: 逆にされたメソッド引数 (DMI_ARGUMENTS_WRONG_ORDER)"
#~ msgstr ""

#~ msgid ""
#~ "RCN: 既に利用していた値の null チェック "
#~ "(RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE)"
#~ msgstr ""

#~ msgid "RC: 疑わしい参照比較 (RC_REF_COMPARISON)"
#~ msgstr ""

#~ msgid ""
#~ "VA: 可変長引数を期待しているメソッドにプリミティブ型の配列を渡している "
#~ "(VA_PRIMITIVE_ARRAY_PASSED_TO_OBJECT_VARARG)"
#~ msgstr ""

#~ msgid "FS: 与えられた引数の型は書式指示子に合致しない (VA_FORMAT_STRING_BAD_CONVERSION)"
#~ msgstr ""

#~ msgid ""
#~ "USELESS_STRING: 書式文字列を使用して役に立たない方法で配列をフォーマットしている "
#~ "(VA_FORMAT_STRING_BAD_CONVERSION_FROM_ARRAY)"
#~ msgstr ""

#~ msgid "FS: 書式文字列ための前の引数がない (VA_FORMAT_STRING_NO_PREVIOUS_ARGUMENT)"
#~ msgstr ""

#~ msgid "FS: 書式文字列への引数の数と書式指示子の数が一致していない (VA_FORMAT_STRING_ARG_MISMATCH)"
#~ msgstr ""

#~ msgid "FS: 書式指示子へ渡している引数に互換性がない (VA_FORMAT_STRING_BAD_ARGUMENT)"
#~ msgstr ""

#~ msgid "FS: 書式文字列は足りない引数を参照している (VA_FORMAT_STRING_MISSING_ARGUMENT)"
#~ msgstr ""

#~ msgid "FS: 無効な書式文字列 (VA_FORMAT_STRING_ILLEGAL)"
#~ msgstr ""

#~ msgid ""
#~ "FS: 書式文字列で実際に使われるよりも多くの引数が渡されている "
#~ "(VA_FORMAT_STRING_EXTRA_ARGUMENTS_PASSED)"
#~ msgstr ""

#~ msgid ""
#~ "FS: printf スタイルの書式が期待されているところで MessageFormat "
#~ "が与えられている (VA_FORMAT_STRING_EXPECTED_MESSAGE_FORMAT_SUPPLIED)"
#~ msgstr ""

#~ msgid "EC: 参照等価性を使用して異なる型を比較している (EC_UNRELATED_TYPES_USING_POINTER_EQUALITY)"
#~ msgstr ""

#~ msgid "EC: equals メソッドを呼び出して異なる型を比較している (EC_UNRELATED_TYPES)"
#~ msgstr ""

#~ msgid "EC: equals メソッドを使用して配列と非配列を比較している (EC_ARRAY_AND_NONARRAY)"
#~ msgstr ""

#~ msgid "EC: equals(null) の呼び出し (EC_NULL_ARG)"
#~ msgstr ""

#~ msgid "EC: equals メソッドを呼び出して異なる型のインタフェースを比較している (EC_UNRELATED_INTERFACES)"
#~ msgstr ""

#~ msgid ""
#~ "EC: equals メソッドを呼び出して無関係のクラスとインタフェースを比較している "
#~ "(EC_UNRELATED_CLASS_AND_INTERFACE)"
#~ msgstr ""

#~ msgid ""
#~ "SA: フィールドへの代入ではなくローカル変数への自己代入 "
#~ "(SA_LOCAL_SELF_ASSIGNMENT_INSTEAD_OF_FIELD)"
#~ msgstr ""

#~ msgid "INT: int 値と long 定数との間違った比較 (INT_BAD_COMPARISON_WITH_INT_VALUE)"
#~ msgstr ""

#~ msgid "INT: 符号付きバイトの間違った比較 (INT_BAD_COMPARISON_WITH_SIGNED_BYTE)"
#~ msgstr ""

#~ msgid ""
#~ "INT: 負ではない値と負の定数またはゼロとの間違った比較 "
#~ "(INT_BAD_COMPARISON_WITH_NONNEGATIVE_VALUE)"
#~ msgstr ""

#~ msgid "BIT: 符号付きバイト値のビット加算 (BIT_ADD_OF_SIGNED_BYTE)"
#~ msgstr ""

#~ msgid "BIT: 符号付きバイト値のビット論理和 (BIT_IOR_OF_SIGNED_BYTE)"
#~ msgstr ""

#~ msgid "BIT: 負数を含むビット演算の符号をチェックする (BIT_SIGNED_CHECK_HIGH_BIT)"
#~ msgstr ""

#~ msgid "BIT: 互換性のないビットマスク (BIT_AND)"
#~ msgstr ""

#~ msgid "BIT: ((...) & 0) == 0 なのか確かめている (BIT_AND_ZZ)"
#~ msgstr ""

#~ msgid "BIT: 互換性のないビットマスク (BIT_IOR)"
#~ msgstr ""

#~ msgid "SA: フィールドの自己代入 (SA_FIELD_SELF_ASSIGNMENT)"
#~ msgstr ""

#~ msgid "SA: フィールドの無意味な自己演算 (たとえば，x & x) (SA_FIELD_SELF_COMPUTATION)"
#~ msgstr ""

#~ msgid "SA: 変数の無意味な自己演算 (たとえば，x & x) (SA_LOCAL_SELF_COMPUTATION)"
#~ msgstr ""

#~ msgid "SA: フィールドとそれ自身との自己比較 (SA_FIELD_SELF_COMPARISON)"
#~ msgstr ""

#~ msgid "SA: ローカル変数とそれ自身との自己比較 (SA_LOCAL_SELF_COMPARISON)"
#~ msgstr ""

#~ msgid ""
#~ "UMAC: 呼び出し不可能なメソッドが無名クラスで定義されている "
#~ "(UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS)"
#~ msgstr ""

#~ msgid ""
#~ "IJU: run メソッドでの JUnit アサーションは JUnit "
#~ "によって通知されない (IJU_ASSERT_METHOD_INVOKED_FROM_RUN_METHOD)"
#~ msgstr ""

#~ msgid "IJU: TestCase は suite メソッドの間違った宣言をしている (IJU_BAD_SUITE_METHOD)"
#~ msgstr ""

#~ msgid ""
#~ "IJU: TestCase は super.setup() を呼び出さない "
#~ "setUp メソッドを実装している (IJU_SETUP_NO_SUPER)"
#~ msgstr ""

#~ msgid ""
#~ "IJU: TestCase は super.tearDown() を呼び出さない "
#~ "tearDown メソッドを実装している  (IJU_TEARDOWN_NO_SUPER)"
#~ msgstr ""

#~ msgid "IJU: TestCase は 非 static な suite メソッドを実装している (IJU_SUITE_NOT_STATIC)"
#~ msgstr ""

#~ msgid "IJU: TestCase はテストがない  (IJU_NO_TESTS)"
#~ msgstr ""

#~ msgid ""
#~ "BOA: スーパークラスの Adapter で実装されるメソッドを誤ってオーバーライドしているクラス"
#~ " (BOA_BADLY_OVERRIDDEN_ADAPTER)"
#~ msgstr ""

#~ msgid "SQL: インデックスが0で ResultSet にアクセスしようとしているメソッド (SQL_BAD_RESULTSET_ACCESS)"
#~ msgstr ""

#~ msgid ""
#~ "SQL: インデックスが0で PreparedStatement にアクセスしようとしているメソッド"
#~ " (SQL_BAD_PREPARED_STATEMENT_ACCESS)"
#~ msgstr ""

#~ msgid "SIO: instanceof 演算子を使用した不必要な型チェック (SIO_SUPERFLUOUS_INSTANCEOF)"
#~ msgstr ""

#~ msgid ""
#~ "BAC: 初期化されていない AppletStub に依存する間違ったアプレットコンストラクタ "
#~ "(BAC_BAD_APPLET_CONSTRUCTOR)"
#~ msgstr ""

#~ msgid ""
#~ "EC: equals(...) メソッドを使用して互換性のない配列を比較している "
#~ "(EC_INCOMPATIBLE_ARRAY_COMPARE)"
#~ msgstr ""

#~ msgid "EC: 配列の equals メソッド呼び出しは == と等価である (EC_BAD_ARRAY_COMPARE)"
#~ msgstr ""

#~ msgid ""
#~ "STI: interrupted メソッドを呼び出すために不要な currentThread "
#~ "メソッドを呼び出している (STI_INTERRUPTED_ON_CURRENTTHREAD)"
#~ msgstr ""

#~ msgid ""
#~ "STI: スレッドインスタンスで static Thread.interrupted() "
#~ "を呼び出している (STI_INTERRUPTED_ON_UNKNOWNTHREAD)"
#~ msgstr ""

#~ msgid "DLS: return 文に無駄なインクリメントがある (DLS_DEAD_LOCAL_INCREMENT_IN_RETURN)"
#~ msgstr ""

#~ msgid "DLS: クラスリテラルの無効な代入 (DLS_DEAD_STORE_OF_CLASS_LITERAL)"
#~ msgstr ""

#~ msgid "IP: メソッドで読み取られずに上書きされているパラメータ (IP_PARAMETER_IS_DEAD_BUT_OVERWRITTEN)"
#~ msgstr ""

#~ msgid "MF: フィールドを隠す変数を定義しているメソッド (MF_METHOD_MASKS_FIELD)"
#~ msgstr ""

#~ msgid "MF: スーパークラスのフィールドを隠すフィールドを定義しているクラス (MF_CLASS_MASKS_FIELD)"
#~ msgstr ""

#~ msgid "FE: NaN への等価性のための絶望的なテスト (FE_TEST_IF_EQUAL_TO_NOT_A_NUMBER)"
#~ msgstr ""

#~ msgid "ICAST: int 値を long に変換して絶対時間として使用している (ICAST_INT_2_LONG_AS_INSTANT)"
#~ msgstr ""

#~ msgid ""
#~ "ICAST: 整数値を double にキャストして Math.ceil() "
#~ "に渡している (ICAST_INT_CAST_TO_DOUBLE_PASSED_TO_CEIL)"
#~ msgstr ""

#~ msgid ""
#~ "ICAST: 整数値を float にキャストして Math.round() "
#~ "に渡している (ICAST_INT_CAST_TO_FLOAT_PASSED_TO_ROUND)"
#~ msgstr ""

#~ msgid "NP: null とわかっている値をその型のインスタンスなのか確かめている (NP_NULL_INSTANCEOF)"
#~ msgstr ""

#~ msgid ""
#~ "DMI: int に対して Double.longBitsToDouble() "
#~ "を呼び出している (DMI_LONG_BITS_TO_DOUBLE_INVOKED_ON_INT)"
#~ msgstr ""

#~ msgid "BC: プリミティブ型の配列を含んでいる不可能なキャスト (BC_IMPOSSIBLE_CAST_PRIMITIVE_ARRAY)"
#~ msgstr ""

#~ msgid "BC: 不可能なキャスト (BC_IMPOSSIBLE_CAST)"
#~ msgstr ""

#~ msgid "BC: 不可能なダウンキャスト (BC_IMPOSSIBLE_DOWNCAST)"
#~ msgstr ""

#~ msgid "BC: toArray メソッドの結果の不可能なダウンキャスト (BC_IMPOSSIBLE_DOWNCAST_OF_TOARRAY)"
#~ msgstr ""

#~ msgid "BC: 常に false を返す instanceof (BC_IMPOSSIBLE_INSTANCEOF)"
#~ msgstr ""

#~ msgid "RE: 正規表現のために使われている \".\" または \"|\" (RE_POSSIBLE_UNINTENDED_PATTERN)"
#~ msgstr ""

#~ msgid "RE: 正規表現のための無効な構文 (RE_BAD_SYNTAX_FOR_REGULAR_EXPRESSION)"
#~ msgstr ""

#~ msgid ""
#~ "RE: 正規表現のために使われている File.separator "
#~ "(RE_CANT_USE_FILE_SEPARATOR_AS_REGULAR_EXPRESSION)"
#~ msgstr ""

#~ msgid "DLS: 上書きされたインクリメント (DLS_OVERWRITTEN_INCREMENT)"
#~ msgstr ""

#~ msgid "BSHIFT: 32ビット int の-31から31の範囲を超えた量によるシフト (ICAST_BAD_SHIFT_AMOUNT)"
#~ msgstr ""

#~ msgid "BSHIFT: シフト演算の正しくない構文解析の可能性がある (BSHIFT_WRONG_ADD_PRIORITY)"
#~ msgstr ""

#~ msgid "IM: 整数剰余の結果の整数乗算 (IM_MULTIPLYING_RESULT_OF_IREM)"
#~ msgstr ""

#~ msgid "DMI: 配列で hashCode メソッドを呼び出している (DMI_INVOKING_HASHCODE_ON_ARRAY)"
#~ msgstr ""

#~ msgid ""
#~ "USELESS_STRING: 配列で toString メソッドを呼び出している "
#~ "(DMI_INVOKING_TOSTRING_ON_ARRAY)"
#~ msgstr ""

#~ msgid ""
#~ "USELESS_STRING: 名前のない配列で toString メソッドを呼び出している "
#~ "(DMI_INVOKING_TOSTRING_ON_ANONYMOUS_ARRAY)"
#~ msgstr ""

#~ msgid "DMI: 月のための間違った定数値 (DMI_BAD_MONTH)"
#~ msgstr ""

#~ msgid "DMI: hasNext メソッドで next メソッドを呼び出している (DMI_CALLING_NEXT_FROM_HASNEXT)"
#~ msgstr ""

#~ msgid ""
#~ "QBA: 論理式で boolean リテラル値を代入しているメソッド "
#~ "(QBA_QUESTIONABLE_BOOLEAN_ASSIGNMENT)"
#~ msgstr ""

#~ msgid "GC: 型パラメータとメソッド引数に関係がない (GC_UNRELATED_TYPES)"
#~ msgstr ""

#~ msgid "DMI: コレクションへの無意味な呼び出し (DMI_VACUOUS_SELF_COLLECTION_CALL)"
#~ msgstr ""

#~ msgid "DMI: D'oh! 無意味なメソッド呼び出し (DMI_DOH)"
#~ msgstr ""

#~ msgid ""
#~ "DMI: コレクションは自分自身を含めるべきではない "
#~ "(DMI_COLLECTIONS_SHOULD_NOT_CONTAIN_THEMSELVES)"
#~ msgstr ""

#~ msgid ""
#~ "TQ: 型修飾子がない値が修飾子を必要とする場所で使われている "
#~ "(TQ_UNKNOWN_VALUE_USED_WHERE_ALWAYS_STRICTLY_REQUIRED)"
#~ msgstr ""

#~ msgid ""
#~ "TQ: 互換性のない型修飾子による比較値 "
#~ "(TQ_COMPARING_VALUES_WITH_INCOMPATIBLE_TYPE_QUALIFIERS)"
#~ msgstr ""

#~ msgid ""
#~ "TQ: 型修飾子アノテーションが付けられた値がその修飾子を付けてはならない値を必要とする場所で使われている "
#~ "(TQ_ALWAYS_VALUE_USED_WHERE_NEVER_REQUIRED)"
#~ msgstr ""

#~ msgid ""
#~ "TQ: 型修飾子アノテーションが付けられていない値がその修飾子が付けられた値を必要とする場所で使われている "
#~ "(TQ_NEVER_VALUE_USED_WHERE_ALWAYS_REQUIRED)"
#~ msgstr ""

#~ msgid ""
#~ "TQ: 型修飾子を付けていないかもしれない値がその型修飾子を必要とする方法で常に使われている "
#~ "(TQ_MAYBE_SOURCE_VALUE_REACHES_ALWAYS_SINK)"
#~ msgstr ""

#~ msgid ""
#~ "TQ: 型修飾子を付けているかもしれない値がその型修飾子を禁止する方法で常に使われている "
#~ "(TQ_MAYBE_SOURCE_VALUE_REACHES_NEVER_SINK)"
#~ msgstr ""

#~ msgid "FB: FindBugs からの予期しない/望ましくない警告 (FB_UNEXPECTED_WARNING)"
#~ msgstr ""

#~ msgid "FB: 失われた FindBugs からの予期した/望ましい警告 (FB_MISSING_EXPECTED_WARNING)"
#~ msgstr ""

#~ msgid "実験用 (EXPERIMENTAL)"
#~ msgstr ""

#~ msgid "実験用で完全に精査されていないバグパターンです。"
#~ msgstr ""

#~ msgid "SKIPPED: 解析するにはあまりにも大きいクラス (SKIPPED_CLASS_TOO_BIG)"
#~ msgstr ""

#~ msgid "TEST: 未知のバグパターン (UNKNOWN)"
#~ msgstr ""

#~ msgid "TEST: テスト (TESTING)"
#~ msgstr ""

#~ msgid "TEST: テスト1 (TESTING1)"
#~ msgstr ""

#~ msgid "TEST: テスト2 (TESTING2)"
#~ msgstr ""

#~ msgid "TEST: テスト3 (TESTING3)"
#~ msgstr ""

#~ msgid "OBL: ストリームやリソースのクリーンアップに失敗するかもしれないメソッド (OBL_UNSATISFIED_OBLIGATION)"
#~ msgstr ""

#~ msgid ""
#~ "OBL: チェック例外でストリームやリソースのクリーンアップに失敗するかもしれないメソッド "
#~ "(OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE)"
#~ msgstr ""

#~ msgid ""
#~ "LG: ロガーの変更は OpenJDK の弱参照が原因で潜在的に失われる "
#~ "(LG_LOST_LOGGER_DUE_TO_WEAK_REFERENCE)"
#~ msgstr ""

#~ msgid "国際化 (I18N)"
#~ msgstr ""

#~ msgid "国際化とロケールに関係があるコードの欠陥です。"
#~ msgstr ""

#~ msgid "Dm: 呼び出したメソッドの Locale パラメータの使用を検討する (DM_CONVERT_CASE)"
#~ msgstr ""

#~ msgid "Dm: デフォルトエンコーディングへの依存 (DM_DEFAULT_ENCODING)"
#~ msgstr ""

#~ msgid "悪意のあるコード脆弱性 (MALICIOUS_CODE)"
#~ msgstr ""

#~ msgid "信頼できないコードからの攻撃に対して脆弱なコードです。"
#~ msgstr ""

#~ msgid "DP: doPrivileged ブロック内で呼び出すべきメソッド (DP_DO_INSIDE_DO_PRIVILEGED)"
#~ msgstr ""

#~ msgid ""
#~ "DP: doPrivileged ブロック内で作成されるべきクラスローダ "
#~ "(DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED)"
#~ msgstr ""

#~ msgid "FI: ファイナライザは public ではなく protected にすべき (FI_PUBLIC_SHOULD_BE_PROTECTED)"
#~ msgstr ""

#~ msgid "MS: 配列を返すことによって内部表現を暴露するかもしれない public static メソッド (MS_EXPOSE_REP)"
#~ msgstr ""

#~ msgid "EI: 可変オブジェクトへの参照を返すことによって内部表現を暴露するかもしれないメソッド (EI_EXPOSE_REP)"
#~ msgstr ""

#~ msgid "EI2: 可変オブジェクトへの参照を取り込むことによって内部表現を暴露するかもしれないメソッド (EI_EXPOSE_REP2)"
#~ msgstr ""

#~ msgid ""
#~ "MS: static "
#~ "フィールドに可変オブジェクトを格納することによって，内部の静的状態を暴露するかもしれないメソッド "
#~ "(EI_EXPOSE_STATIC_REP2)"
#~ msgstr ""

#~ msgid "MS: インタフェースから移動してパッケージプロテクテッドにすべきフィールド (MS_OOI_PKGPROTECT)"
#~ msgstr ""

#~ msgid "MS: final かつパッケージプロテクテッドにすべきフィールド (MS_FINAL_PKGPROTECT)"
#~ msgstr ""

#~ msgid "MS: final にすべきフィールド (MS_SHOULD_BE_FINAL)"
#~ msgstr ""

#~ msgid "MS: final ではないフィールドはリファクタリングすべき (MS_SHOULD_BE_REFACTORED_TO_BE_FINAL)"
#~ msgstr ""

#~ msgid "MS: パッケージプロテクテッドにすべきフィールド (MS_PKGPROTECT)"
#~ msgstr ""

#~ msgid "MS: 可変 Hashtable のフィールド (MS_MUTABLE_HASHTABLE)"
#~ msgstr ""

#~ msgid "MS: 可変配列のフィールド (MS_MUTABLE_ARRAY)"
#~ msgstr ""

#~ msgid "MS: 可変コレクションのフィールド (MS_MUTABLE_COLLECTION)"
#~ msgstr ""

#~ msgid "MS: パッケージプロテクテッドにすべき可変コレクションのフィールド (MS_MUTABLE_COLLECTION_PKGPROTECT)"
#~ msgstr ""

#~ msgid "MS: final ではないフィールドは悪意のあるコードから保護できない (MS_CANNOT_BE_FINAL)"
#~ msgstr ""

#~ msgid "マルチスレッドの正確性 (MT_CORRECTNESS)"
#~ msgstr ""

#~ msgid "スレッド，ロック，volatile に関係があるコードの欠陥です。"
#~ msgstr ""

#~ msgid ""
#~ "AT: 並行抽象の呼び出しシーケンスはアトミックではないかもしれない "
#~ "(AT_OPERATION_SEQUENCE_ON_CONCURRENT_ABSTRACTION)"
#~ msgstr ""

#~ msgid "STCAL: static Calendar フィールド (STCAL_STATIC_CALENDAR_INSTANCE)"
#~ msgstr ""

#~ msgid ""
#~ "STCAL: static DateFormat フィールド "
#~ "(STCAL_STATIC_SIMPLE_DATE_FORMAT_INSTANCE)"
#~ msgstr ""

#~ msgid "STCAL: static Calendar の呼び出し (STCAL_INVOKE_ON_STATIC_CALENDAR_INSTANCE)"
#~ msgstr ""

#~ msgid ""
#~ "STCAL: static DateFormat の呼び出し "
#~ "(STCAL_INVOKE_ON_STATIC_DATE_FORMAT_INSTANCE)"
#~ msgstr ""

#~ msgid "NP: 同じフィールドでの同期化と null チェック (NP_SYNC_AND_NULL_CHECK_FIELD)"
#~ msgstr ""

#~ msgid ""
#~ "VO: 配列への volatile 参照は，配列要素を volatile "
#~ "として扱わない (VO_VOLATILE_REFERENCE_TO_ARRAY)"
#~ msgstr ""

#~ msgid "VO: volatile フィールドへのインクリメントはアトミックではない (VO_VOLATILE_INCREMENT)"
#~ msgstr ""

#~ msgid "Dm: Condition で呼び出された wait メソッドを監視している (DM_MONITOR_WAIT_ON_CONDITION)"
#~ msgstr ""

#~ msgid "Dm: デフォルトの空の run メソッドを使用して作成されたスレッド (DM_USELESS_THREAD)"
#~ msgstr ""

#~ msgid "DC: フィールドのダブルチェックの可能性 (DC_DOUBLECHECK)"
#~ msgstr ""

#~ msgid "DC: 部分的に初期化されたオブジェクトを暴露する可能性がある (DC_PARTIALLY_CONSTRUCTED)"
#~ msgstr ""

#~ msgid "DL: 正準化した文字列の同期化 (DL_SYNCHRONIZATION_ON_SHARED_CONSTANT)"
#~ msgstr ""

#~ msgid "DL: Boolean の同期化 (DL_SYNCHRONIZATION_ON_BOOLEAN)"
#~ msgstr ""

#~ msgid "DL: ボクシングされたプリミティブの同期化 (DL_SYNCHRONIZATION_ON_BOXED_PRIMITIVE)"
#~ msgstr ""

#~ msgid ""
#~ "DL: ボクシングされたプリミティブ値の同期化 "
#~ "(DL_SYNCHRONIZATION_ON_UNSHARED_BOXED_PRIMITIVE)"
#~ msgstr ""

#~ msgid ""
#~ "WL: クラスリテラルではなく getClass で同期化している "
#~ "(WL_USING_GETCLASS_RATHER_THAN_CLASS_LITERAL)"
#~ msgstr ""

#~ msgid "ESync: 空の synchronized ブロック (ESync_EMPTY_SYNC)"
#~ msgstr ""

#~ msgid "MSF: 可変サーブレットフィールド (MSF_MUTABLE_SERVLET_FIELD)"
#~ msgstr ""

#~ msgid "IS: 一貫性のない同期化 (IS2_INCONSISTENT_SYNC)"
#~ msgstr ""

#~ msgid "NN: 裸の notify メソッド (NN_NAKED_NOTIFY)"
#~ msgstr ""

#~ msgid "Ru: スレッドで run メソッドを呼び出している (RU_INVOKE_RUN)"
#~ msgstr ""

#~ msgid "SP: スピンロックをしているメソッド (SP_SPIN_ON_FIELD)"
#~ msgstr ""

#~ msgid "TLW: 2つ以上のロックを保持して wait メソッドを呼び出している (TLW_TWO_LOCK_WAIT)"
#~ msgstr ""

#~ msgid "TLW: Notify with two locks held (TLW_TWO_LOCK_NOTIFY)"
#~ msgstr "TLW: Notify with two locks held (TLW_TWO_LOCK_NOTIFY)"

#~ msgid "UW: wait メソッドの無条件呼び出し (UW_UNCOND_WAIT)"
#~ msgstr ""

#~ msgid "UG: 同期化していない get メソッド，同期化している set メソッド (UG_SYNC_SET_UNSYNC_GET)"
#~ msgstr ""

#~ msgid "IS: 一貫性のない同期化 (IS_INCONSISTENT_SYNC)"
#~ msgstr ""

#~ msgid "IS: 並行アクセスに対してガードされていないフィールド (IS_FIELD_NOT_GUARDED)"
#~ msgstr ""

#~ msgid ""
#~ "ML: フィールドを同期化でガードしようとする無駄な試み "
#~ "(ML_SYNC_ON_FIELD_TO_GUARD_CHANGING_THAT_FIELD)"
#~ msgstr ""

#~ msgid "ML: 更新されるフィールドで同期化しているメソッド (ML_SYNC_ON_UPDATED_FIELD)"
#~ msgstr ""

#~ msgid "WS: writeObject メソッドは同期化しているがその他のメソッドは同期化していないクラス (WS_WRITEOBJECT_SYNC)"
#~ msgstr ""

#~ msgid "RS: readObject メソッドを同期化しているクラス (RS_READOBJECT_SYNC)"
#~ msgstr ""

#~ msgid "SC: Thread.start() を呼び出しているコンストラクタ (SC_START_IN_CTOR)"
#~ msgstr ""

#~ msgid "Wa: wait メソッドがループの中にない (WA_NOT_IN_LOOP)"
#~ msgstr ""

#~ msgid "Wa: Condition.await() がループの中にない (WA_AWAIT_NOT_IN_LOOP)"
#~ msgstr ""

#~ msgid "No: notifyAll メソッドではなく notify メソッドを使用している (NO_NOTIFY_NOT_NOTIFYALL)"
#~ msgstr ""

#~ msgid "UL: すべての経路でロックが解除されないメソッド (UL_UNRELEASED_LOCK)"
#~ msgstr ""

#~ msgid "UL: すべての例外経路でロックが解除されないメソッド (UL_UNRELEASED_LOCK_EXCEPTION_PATH)"
#~ msgstr ""

#~ msgid "MWN: 不整合な wait メソッド (MWN_MISMATCHED_WAIT)"
#~ msgstr ""

#~ msgid "MWN: 不整合な notify メソッド (MWN_MISMATCHED_NOTIFY)"
#~ msgstr ""

#~ msgid "LI: static フィールドの間違った遅延初期化 (LI_LAZY_INIT_STATIC)"
#~ msgstr ""

#~ msgid "LI: 更新される static フィールドの間違った遅延初期化 (LI_LAZY_INIT_UPDATE_STATIC)"
#~ msgstr ""

#~ msgid ""
#~ "JLM: java.util.concurrent のインスタンスで同期化している "
#~ "(JLM_JSR166_UTILCONCURRENT_MONITORENTER)"
#~ msgstr ""

#~ msgid ""
#~ "JLM: util.concurrent 抽象化でモニタスタイルの wait "
#~ "メソッドを使用している (JML_JSR166_CALLING_WAIT_RATHER_THAN_AWAIT)"
#~ msgstr ""

#~ msgid "JLM: Lock で同期化している (JLM_JSR166_LOCK_MONITORENTER)"
#~ msgstr ""

#~ msgid "SWL: ロックを保持して Thread.sleep() を呼び出しているメソッド (SWL_SLEEP_WITH_LOCK_HELD)"
#~ msgstr ""

#~ msgid ""
#~ "RV: putIfAbsent の戻り値は無視されて putIfAbsent "
#~ "に渡した値は再利用された (RV_RETURN_VALUE_OF_PUTIFABSENT_IGNORED)"
#~ msgstr ""

#~ msgid "偽のランダムノイズ (NOISE)"
#~ msgstr ""

#~ msgid "偽のランダムノイズ: ソフトウェアで実際のバグを発見するのではなく，データマイニング実験のコントロールとして役に立つことを意図しています。"
#~ msgstr ""

#~ msgid "NOISE: null ポインタ間接参照に関する偽の警告 (NOISE_NULL_DEREFERENCE)"
#~ msgstr ""

#~ msgid "NOISE: メソッド呼び出しに関する偽の警告 (NOISE_METHOD_CALL)"
#~ msgstr ""

#~ msgid "NOISE: フィールド参照に関する偽の警告 (NOISE_FIELD_REFERENCE)"
#~ msgstr ""

#~ msgid "NOISE: 演算に関する偽の警告 (NOISE_OPERATION)"
#~ msgstr ""

#~ msgid "性能 (PERFORMANCE)"
#~ msgstr ""

#~ msgid "必ずしも間違っているというわけではないが，効率が悪いかもしれないコードです。"
#~ msgstr ""

#~ msgid "HSC: 複数のクラスファイルにわたって複製されている巨大な文字列定数 (HSC_HUGE_SHARED_STRING_CONSTANT)"
#~ msgstr ""

#~ msgid ""
#~ "Dm: URL の equals メソッドと hashCode "
#~ "メソッドはブロックする (DMI_BLOCKING_METHODS_ON_URL)"
#~ msgstr ""

#~ msgid "Dm: URL の Map や Set はひどい性能になる (DMI_COLLECTION_OF_URLS)"
#~ msgstr ""

#~ msgid "Dm: 効率が悪い new String(String) コンストラクタを呼び出しているメソッド (DM_STRING_CTOR)"
#~ msgstr ""

#~ msgid "Dm: 効率が悪い new String() コンストラクタを呼び出しているメソッド (DM_STRING_VOID_CTOR)"
#~ msgstr ""

#~ msgid "Dm: String の toString メソッドを呼び出しているメソッド (DM_STRING_TOSTRING)"
#~ msgstr ""

#~ msgid "Dm: 明示的なガベージコレクション (DM_GC)"
#~ msgstr ""

#~ msgid "Dm: 効率が悪い Boolean コンストラクタを呼び出しているメソッド (DM_BOOLEAN_CTOR)"
#~ msgstr ""

#~ msgid "Bx: 効率が悪い Number コンストラクタを呼び出しているメソッド (DM_NUMBER_CTOR)"
#~ msgstr ""

#~ msgid "Bx: 効率が悪い浮動小数点 Number コンストラクタを呼び出しているメソッド (DM_FP_NUMBER_CTOR)"
#~ msgstr ""

#~ msgid ""
#~ "Bx: toString メソッドを呼び出すためだけにボクシングされたプリミティブを割り当てている "
#~ "(DM_BOXED_PRIMITIVE_TOSTRING)"
#~ msgstr ""

#~ msgid "Bx: プリミティブを解析するためのボクシング/アンボクシング (DM_BOXED_PRIMITIVE_FOR_PARSING)"
#~ msgstr ""

#~ msgid "Bx: プリミティブが比較でボクシングされている (DM_BOXED_PRIMITIVE_FOR_COMPARE)"
#~ msgstr ""

#~ msgid ""
#~ "Bx: プリミティブ値が3項演算子のためにアンボクシングされて，型変換される "
#~ "(BX_UNBOXED_AND_COERCED_FOR_TERNARY_OPERATOR)"
#~ msgstr ""

#~ msgid "Bx: ボクシングされた値がアンボクシングされて，すぐに再ボクシングされる (BX_UNBOXING_IMMEDIATELY_REBOXED)"
#~ msgstr ""

#~ msgid "Bx: プリミティブ値がボクシングされて，すぐにアンボクシングされる (BX_BOXING_IMMEDIATELY_UNBOXED)"
#~ msgstr ""

#~ msgid ""
#~ "Bx: プリミティブ値がプリミティブ型の型変換をするためにボクシングされて，アンボクシングされる "
#~ "(BX_BOXING_IMMEDIATELY_UNBOXED_TO_PERFORM_COERCION)"
#~ msgstr ""

#~ msgid "Dm: クラスオブジェクトを得るためだけにインスタンスを作成しているメソッド (DM_NEW_FOR_GETCLASS)"
#~ msgstr ""

#~ msgid ""
#~ "Dm: 整数の乱数を生成するためには nextDouble メソッド ではなく "
#~ "nextInt メソッドを使用する (DM_NEXTINT_VIA_NEXTDOUBLE)"
#~ msgstr ""

#~ msgid "SS: 読み出されないフィールド (SS_SHOULD_BE_STATIC)"
#~ msgstr ""

#~ msgid "UuF: 未使用のフィールド (UUF_UNUSED_FIELD)"
#~ msgstr ""

#~ msgid "UrF: 読み出されないフィールド (URF_UNREAD_FIELD)"
#~ msgstr ""

#~ msgid "SIC: static 内部クラスにすべき (SIC_INNER_SHOULD_BE_STATIC)"
#~ msgstr ""

#~ msgid ""
#~ "SIC: static 内部クラスにリファクタリングできるかもしれない "
#~ "(SIC_INNER_SHOULD_BE_STATIC_NEEDS_THIS)"
#~ msgstr ""

#~ msgid ""
#~ "SIC: 名前付き static 内部クラスにリファクタリングできるかもしれない "
#~ "(SIC_INNER_SHOULD_BE_STATIC_ANON)"
#~ msgstr ""

#~ msgid "UPM: private メソッドは決して呼び出されない (UPM_UNCALLED_PRIVATE_METHOD)"
#~ msgstr ""

#~ msgid ""
#~ "SBSC: ループの中で + を使用して文字列を連結しているメソッド "
#~ "(SBSC_USE_STRINGBUFFER_CONCATENATION)"
#~ msgstr ""

#~ msgid ""
#~ "IIL: ループの中で NodeList.getLength() を呼び出しているメソッド "
#~ "(IIL_ELEMENTS_GET_LENGTH_IN_LOOP)"
#~ msgstr ""

#~ msgid ""
#~ "IIL: ループの中で prepareStatement を呼び出しているメソッド "
#~ "(IIL_PREPARE_STATEMENT_IN_LOOP)"
#~ msgstr ""

#~ msgid "IIL: ループの中で Pattern.compile を呼び出しているメソッド (IIL_PATTERN_COMPILE_IN_LOOP)"
#~ msgstr ""

#~ msgid "IIL: ループの中で正規表現をコンパイルしているメソッド (IIL_PATTERN_COMPILE_IN_LOOP_INDIRECT)"
#~ msgstr ""

#~ msgid "IIO: String.indexOf(String) の非効率的な使用 (IIO_INEFFICIENT_INDEX_OF)"
#~ msgstr ""

#~ msgid ""
#~ "IIO: String.lastIndexOf(String) の非効率的な使用 "
#~ "(IIO_INEFFICIENT_LAST_INDEX_OF)"
#~ msgstr ""

#~ msgid "ITA: 長さが0の配列の引数で toArray メソッドを使用しているメソッド (ITA_INEFFICIENT_TO_ARRAY)"
#~ msgstr ""

#~ msgid ""
#~ "WMI: entrySet イテレータではなく効率が悪い keySet "
#~ "イテレータを使用している (WMI_WRONG_MAP_ITERATOR)"
#~ msgstr ""

#~ msgid "UM: 定数値で Math クラスの static メソッドを呼び出しているメソッド (UM_UNNECESSARY_MATH)"
#~ msgstr ""

#~ msgid "IMA: 所有クラスの private メンバ変数にアクセスしているメソッド (IMA_INEFFICIENT_MEMBER_ACCESS)"
#~ msgstr ""

#~ msgid "セキュリティ (SECURITY)"
#~ msgstr ""

#~ msgid "リモートから悪用可能なセキュリティ脆弱性を引き起こすかもしれない信頼できない入力を使用しています。"
#~ msgstr ""

#~ msgid ""
#~ "XSS: 反射型クロスサイトスクリプティング脆弱性がエラーページにあるサーブレット "
#~ "(XSS_REQUEST_PARAMETER_TO_SEND_ERROR)"
#~ msgstr ""

#~ msgid ""
#~ "XSS: 反射型クロスサイトスクリプティング脆弱性があるサーブレット "
#~ "(XSS_REQUEST_PARAMETER_TO_SERVLET_WRITER)"
#~ msgstr ""

#~ msgid "XSS: 反射型クロスサイトスクリプティング脆弱性がある JSP (XSS_REQUEST_PARAMETER_TO_JSP_WRITER)"
#~ msgstr ""

#~ msgid "HRS: HTTP レスポンススプリッティング脆弱性 (HRS_REQUEST_PARAMETER_TO_HTTP_HEADER)"
#~ msgstr ""

#~ msgid "HRS: 信頼できない入力から形成された HTTP cookie (HRS_REQUEST_PARAMETER_TO_COOKIE)"
#~ msgstr ""

#~ msgid "PT: サーブレットの絶対パストラバーサル (PT_ABSOLUTE_PATH_TRAVERSAL)"
#~ msgstr ""

#~ msgid "PT: サーブレットの相対パストラバーサル (PT_RELATIVE_PATH_TRAVERSAL)"
#~ msgstr ""

#~ msgid "Dm: ハードコードされた定数データベースパスワード (DMI_CONSTANT_DB_PASSWORD)"
#~ msgstr ""

#~ msgid "Dm: 空のデータベースパスワード (DMI_EMPTY_DB_PASSWORD)"
#~ msgstr ""

#~ msgid ""
#~ "SQL: SQL の Statement の execute または"
#~ " addBatch メソッドに定数ではない文字列を渡している "
#~ "(SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE)"
#~ msgstr ""

#~ msgid ""
#~ "SQL: PreparedStatement が定数ではない文字列から生成されている "
#~ "(SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING)"
#~ msgstr ""

#~ msgid "危ないコード (STYLE)"
#~ msgstr ""

#~ msgid ""
#~ "紛らわしいコード，異常なコード，またはエラーを引き起こす方法で書かれたコードです。 "
#~ "たとえば，ローカル変数への無効な代入，switch 文のフォールスルー，未確認のキャスト，null "
#~ "とわかっている値の冗長な null チェックなどです。 より多くの誤検出を受け入れました。 "
#~ "FindBugs の以前のバージョンでは，このカテゴリは Style として知られていました。"
#~ msgstr ""

#~ msgid "CAA: フィールドへの共変配列代入 (CAA_COVARIANT_ARRAY_FIELD)"
#~ msgstr ""

#~ msgid "CAA: 共変配列がメソッドから返される (CAA_COVARIANT_ARRAY_RETURN)"
#~ msgstr ""

#~ msgid "CAA: ローカル変数への共変配列代入 (CAA_COVARIANT_ARRAY_LOCAL)"
#~ msgstr ""

#~ msgid "Dm: サポートされていないメソッドの呼び出し (DMI_UNSUPPORTED_METHOD)"
#~ msgstr ""

#~ msgid ""
#~ "Dm: Thread オブジェクトが Runnable が期待されているところに渡されている"
#~ " (DMI_THREAD_PASSED_WHERE_RUNNABLE_EXPECTED)"
#~ msgstr ""

#~ msgid ""
#~ "NP: readLine メソッドの結果が null なのか確かめないで値を利用している"
#~ " (NP_DEREFERENCE_OF_READLINE_VALUE)"
#~ msgstr ""

#~ msgid "NP: readLine メソッドの結果をすぐに利用している (NP_IMMEDIATE_DEREFERENCE_OF_READLINE)"
#~ msgstr ""

#~ msgid "RV: 符号付き32ビット整数の乱数の剰余 (RV_REM_OF_RANDOM_INT)"
#~ msgstr ""

#~ msgid "RV: ハッシュコードの剰余は負かもしれない (RV_REM_OF_HASHCODE)"
#~ msgstr ""

#~ msgid "Eq: 異常な equals メソッド  (EQ_UNUSUAL)"
#~ msgstr ""

#~ msgid "Eq: スーパークラスの equals メソッドをオーバーライドしていないクラス (EQ_DOESNT_OVERRIDE_EQUALS)"
#~ msgstr ""

#~ msgid "NS: 非短絡論理の疑わしい使用 (NS_NON_SHORT_CIRCUIT)"
#~ msgstr ""

#~ msgid "NS: 潜在的な非短絡論理の危険な使用 (NS_DANGEROUS_NON_SHORT_CIRCUIT)"
#~ msgstr ""

#~ msgid "IC: 初期化が循環している (IC_INIT_CIRCULARITY)"
#~ msgstr ""

#~ msgid ""
#~ "IA: 潜在的な継承されたメソッドなのか外部のメソッドなのかあいまいなメソッドの呼び出し "
#~ "(IA_AMBIGUOUS_INVOCATION_OF_INHERITED_OR_OUTER_METHOD)"
#~ msgstr ""

#~ msgid ""
#~ "Se: サブクラスで継承できない private な readResolve "
#~ "メソッド (SE_PRIVATE_READ_RESOLVE_NOT_INHERITED)"
#~ msgstr ""

#~ msgid ""
#~ "Se: Serializable ではないクラスの transient フィールド "
#~ "(SE_TRANSIENT_FIELD_OF_NONSERIALIZABLE_CLASS)"
#~ msgstr ""

#~ msgid "SF: 1つの case が次の case へと通り抜ける switch 文を見つけた (SF_SWITCH_FALLTHROUGH)"
#~ msgstr ""

#~ msgid "SF: default がない switch 文を見つけた (SF_SWITCH_NO_DEFAULT)"
#~ msgstr ""

#~ msgid ""
#~ "UuF: 未使用の public または protected フィールド "
#~ "(UUF_UNUSED_PUBLIC_OR_PROTECTED_FIELD)"
#~ msgstr ""

#~ msgid ""
#~ "UrF: 読み出されない public または protected フィールド"
#~ " (URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD)"
#~ msgstr ""

#~ msgid "QF: 複雑か巧妙か間違ったインクリメントの for ループ (QF_QUESTIONABLE_FOR_LOOP)"
#~ msgstr ""

#~ msgid ""
#~ "NP: 書き込まれていない public または protected "
#~ "フィールドの読み出し (NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD)"
#~ msgstr ""

#~ msgid ""
#~ "UwF: コンストラクタで初期化されていないフィールドを null チェックなしで null"
#~ " 値を利用している (UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR)"
#~ msgstr ""

#~ msgid ""
#~ "UwF: 書き込まてれいない public または protected "
#~ "フィールド (UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD)"
#~ msgstr ""

#~ msgid "UC: 役に立たない空ではない void メソッド (UC_USELESS_VOID_METHOD)"
#~ msgstr ""

#~ msgid "UC: 条件は効果がない (UC_USELESS_CONDITION)"
#~ msgstr ""

#~ msgid "UC: 条件は変数型のために効果がない (UC_USELESS_CONDITION_TYPE)"
#~ msgstr ""

#~ msgid "UC: 役に立たないオブジェクトを作成した (UC_USELESS_OBJECT)"
#~ msgstr ""

#~ msgid "UC: 役に立たないオブジェクトをスタックで作成した (UC_USELESS_OBJECT_STACK)"
#~ msgstr ""

#~ msgid "RV: メソッドは戻り値を無視しています。これは間違いではないですか? (RV_RETURN_VALUE_IGNORED_INFERRED)"
#~ msgstr ""

#~ msgid "RV: 副作用がないメソッドの戻り値は無視される (RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT)"
#~ msgstr ""

#~ msgid "RV: String.indexOf の結果が正かどうか確かめている (RV_CHECK_FOR_POSITIVE_INDEXOF)"
#~ msgstr ""

#~ msgid ""
#~ "RV: readLine メソッドの結果を null ではないのか確かめた後で捨てている"
#~ " (RV_DONT_JUST_NULL_CHECK_READLINE)"
#~ msgstr ""

#~ msgid ""
#~ "NP: パラメータは  非 null でなければならないが null "
#~ "可能としてマークされている "
#~ "(NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE)"
#~ msgstr ""

#~ msgid ""
#~ "NP: null になっている可能性があるメソッドの戻り値を利用している "
#~ "(NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE)"
#~ msgstr ""

#~ msgid ""
#~ "NP: null 値を実行不可能かもしれない分岐で利用している可能性がある "
#~ "(NP_NULL_ON_SOME_PATH_MIGHT_BE_INFEASIBLE)"
#~ msgstr ""

#~ msgid "NP: null とわかっている値のロード (NP_LOAD_OF_KNOWN_NULL_VALUE)"
#~ msgstr ""

#~ msgid "PZLA: null ではなく長さが0の配列を返すことを検討する (PZLA_PREFER_ZERO_LENGTH_ARRAYS)"
#~ msgstr ""

#~ msgid "UCF: 役に立たない制御フロー (UCF_USELESS_CONTROL_FLOW)"
#~ msgstr ""

#~ msgid "UCF: 次の行へ続くだけの役に立たない制御フロー (UCF_USELESS_CONTROL_FLOW_NEXT_LINE)"
#~ msgstr ""

#~ msgid ""
#~ "RCN: null とわかっている値の冗長な null チェック "
#~ "(RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE)"
#~ msgstr ""

#~ msgid ""
#~ "RCN: null ではないことがわかっている値の冗長な null チェック "
#~ "(RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE)"
#~ msgstr ""

#~ msgid "RCN: 2つの null 値の冗長な比較 (RCN_REDUNDANT_COMPARISON_TWO_NULL_VALUES)"
#~ msgstr ""

#~ msgid ""
#~ "RCN: 非 null 値と null 値との冗長な比較 "
#~ "(RCN_REDUNDANT_COMPARISON_OF_NULL_AND_NONNULL_VALUE)"
#~ msgstr ""

#~ msgid ""
#~ "FS: Boolean 型ではない引数を ％b 書式指示子を使用してフォーマットしている"
#~ " (VA_FORMAT_STRING_BAD_CONVERSION_TO_BOOLEAN)"
#~ msgstr ""

#~ msgid "SA: ローカル変数の自己代入 (SA_LOCAL_SELF_ASSIGNMENT)"
#~ msgstr ""

#~ msgid "INT: 1を法とする整数の剰余 (INT_BAD_REM_BY_1)"
#~ msgstr ""

#~ msgid "INT: 整数値の無意味な比較 (INT_VACUOUS_COMPARISON)"
#~ msgstr ""

#~ msgid "INT: 整数値の無意味なビットマスク演算 (INT_VACUOUS_BIT_OPERATION)"
#~ msgstr ""

#~ msgid "SA: ローカル変数の二重代入 (SA_LOCAL_DOUBLE_ASSIGNMENT)"
#~ msgstr ""

#~ msgid "SA: フィールドの二重代入 (SA_FIELD_DOUBLE_ASSIGNMENT)"
#~ msgstr ""

#~ msgid "DLS: return 文に役に立たない代入がある (DLS_DEAD_LOCAL_STORE_IN_RETURN)"
#~ msgstr ""

#~ msgid "DLS: ローカル変数への無効な代入 (DLS_DEAD_LOCAL_STORE)"
#~ msgstr ""

#~ msgid "DLS: フィールドを遮るローカル変数への無効な代入 (DLS_DEAD_LOCAL_STORE_SHADOWS_FIELD)"
#~ msgstr ""

#~ msgid "DLS: ローカル変数への無効な null 代入 (DLS_DEAD_LOCAL_STORE_OF_NULL)"
#~ msgstr ""

#~ msgid "REC: 例外がスローされないのに例外をキャッチしている (REC_CATCH_EXCEPTION)"
#~ msgstr ""

#~ msgid "FE: 浮動小数点の等価性のためのテスト (FE_FLOATING_POINT_EQUALITY)"
#~ msgstr ""

#~ msgid "CD: クラス間の循環依存関係のテスト (CD_CIRCULAR_DEPENDENCY)"
#~ msgstr ""

#~ msgid "RI: スーパークラスと同じインタフェースを実装しているクラス (RI_REDUNDANT_INTERFACES)"
#~ msgstr ""

#~ msgid ""
#~ "MTIA: Struts Action を拡張したクラスでのインスタンス変数の使用 "
#~ "(MTIA_SUSPECT_STRUTS_INSTANCE_FIELD)"
#~ msgstr ""

#~ msgid ""
#~ "MTIA: Servlet クラスを拡張したクラスでのインスタンス変数の使用 "
#~ "(MTIA_SUSPECT_SERVLET_INSTANCE_FIELD)"
#~ msgstr ""

#~ msgid "PS: 公開インタフェースで同期化とセマフォを暴露するクラス (PS_PUBLIC_SEMAPHORES)"
#~ msgstr ""

#~ msgid "ICAST: 整数乗算の結果を long にキャストしている (ICAST_INTEGER_MULTIPLY_CAST_TO_LONG)"
#~ msgstr ""

#~ msgid "ICAST: 整数の除算の結果を double または float にキャストしている (ICAST_IDIV_CAST_TO_DOUBLE)"
#~ msgstr ""

#~ msgid "BC: 具象コレクションへの疑わしいキャスト (BC_BAD_CAST_TO_CONCRETE_COLLECTION)"
#~ msgstr ""

#~ msgid "BC: 未チェック/未確認のキャスト (BC_UNCONFIRMED_CAST)"
#~ msgstr ""

#~ msgid "BC: メソッドからの戻り値の未チェック/未確認のキャスト (BC_UNCONFIRMED_CAST_OF_RETURN_VALUE)"
#~ msgstr ""

#~ msgid "BC: 常に true を返す instanceof (BC_VACUOUS_INSTANCEOF)"
#~ msgstr ""

#~ msgid "BC: 抽象コレクションへの疑わしいキャスト (BC_BAD_CAST_TO_ABSTRACT_COLLECTION)"
#~ msgstr ""

#~ msgid "IM: 負数で機能しない奇数チェック (IM_BAD_CHECK_FOR_ODD)"
#~ msgstr ""

#~ msgid "IM: 平均の計算はオーバーフローする可能性がある (IM_AVERAGE_COMPUTATION_COULD_OVERFLOW)"
#~ msgstr ""

#~ msgid ""
#~ "BSHIFT: 符号なし右シフトを short/byte にキャストしている "
#~ "(ICAST_QUESTIONABLE_UNSIGNED_RIGHT_SHIFT)"
#~ msgstr ""

#~ msgid "DMI: ハードコードされた絶対パス名への参照がある (DMI_HARDCODED_ABSOLUTE_FILENAME)"
#~ msgstr ""

#~ msgid "DMI: substring(0) の呼び出しは元の値を返す (DMI_USELESS_SUBSTRING)"
#~ msgstr ""

#~ msgid ""
#~ "ST: インスタンスメソッドから static フィールドへの書き込み "
#~ "(ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD)"
#~ msgstr ""

#~ msgid ""
#~ "DMI: ObjectOutput に書き込まれる非直列化可能オブジェクト "
#~ "(DMI_NONSERIALIZABLE_OBJECT_WRITTEN)"
#~ msgstr ""

#~ msgid "DB: 2つの分岐のために同じコードを使用しているメソッド (DB_DUPLICATE_BRANCHES)"
#~ msgstr ""

#~ msgid ""
#~ "DB: switch 文の2つの case のために同じコードを使用しているメソッド "
#~ "(DB_DUPLICATE_SWITCH_CLAUSES)"
#~ msgstr ""

#~ msgid "XFB: XMLインタフェースの特定の実装のインスタンスを作成しているメソッド (XFB_XML_FACTORY_BYPASS)"
#~ msgstr ""

#~ msgid "USM: 親クラスのメソッドに過剰に委譲しているメソッド (USM_USELESS_SUBCLASS_METHOD)"
#~ msgstr ""

#~ msgid "USM: 実装されたインタフェースで既に定義された抽象メソッド (USM_USELESS_ABSTRACT_METHOD)"
#~ msgstr ""

#~ msgid "CI: final なクラスが protected フィールドを宣言している (CI_CONFUSED_INHERITANCE)"
#~ msgstr ""

#~ msgid ""
#~ "TQ: 値は型修飾子を必要としないが，不明としてマークされている "
#~ "(TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_NEVER_SINK)"
#~ msgstr ""

#~ msgid ""
#~ "TQ: 値は型修飾子を必要としているが，不明としてマークされている "
#~ "(TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_ALWAYS_SINK)"
#~ msgstr ""

#~ msgid ""
#~ "NP: メソッドは戻り値の nullness アノテーションを緩和している "
#~ "(NP_METHOD_RETURN_RELAXING_ANNOTATION)"
#~ msgstr ""

#~ msgid ""
#~ "NP: メソッドはパラメータに nullness アノテーションを強化している "
#~ "(NP_METHOD_PARAMETER_TIGHTENS_ANNOTATION)"
#~ msgstr ""

#~ msgid ""
#~ "NP: メソッドはパラメータに nullness アノテーションを強化している "
#~ "(NP_METHOD_PARAMETER_RELAXING_ANNOTATION)"
#~ msgstr ""

#~ msgid ""
#~ "<p> This class implements the "
#~ "<code>Externalizable</code> interface, but does\n"
#~ ""
#~ "not define a void constructor. When "
#~ "Externalizable objects are deserialized,\n"
#~ " they first need to be constructed by invoking the void\n"
#~ " constructor. Since this class does not have one,\n"
#~ " serialization and deserialization will fail at runtime.</p>"
#~ msgstr ""

#~ msgid ""
#~ "Se: The readResolve method must be "
#~ "declared with a return type of "
#~ "Object.  (SE_READ_RESOLVE_MUST_RETURN_OBJECT)"
#~ msgstr ""

#~ msgid ""
#~ "Se: Transient field that isn't set "
#~ "by deserialization.  (SE_TRANSIENT_FIELD_NOT_RESTORED)"
#~ msgstr ""

#~ msgid ""
#~ "RV: Bad attempt to compute absolute "
#~ "value of signed 32-bit hashcode  "
#~ "(RV_ABSOLUTE_VALUE_OF_HASHCODE)"
#~ msgstr ""

#~ msgid ""
#~ "Se: The readResolve method must not "
#~ "be declared as a static method.   "
#~ "(SE_READ_RESOLVE_IS_STATIC)"
#~ msgstr ""

#~ msgid ""
#~ "NP: Method call passes null to a"
#~ " non-null parameter  (NP_NONNULL_PARAM_VIOLATION)"
#~ msgstr ""

#~ msgid "<a id='VA_FORMAT_STRING_BAD_CONVERSION'></a>"
#~ msgstr ""

#~ msgid ""
#~ "FS: The type of a supplied "
#~ "argument doesn't match format specifier "
#~ "(VA_FORMAT_STRING_BAD_CONVERSION)"
#~ msgstr ""

#~ msgid ""
#~ "<p>\n"
#~ "One of the arguments is incompatible "
#~ "with the corresponding format string "
#~ "specifier.\n"
#~ "As a result, this will generate a runtime exception when executed.\n"
#~ "For example, <code>String.format(\"%d\", "
#~ "\"1\")</code> will generate an exception, "
#~ "since\n"
#~ "the String \"1\" is incompatible with the format specifier %d.\n"
#~ "</p>"
#~ msgstr ""

#~ msgid "<a id='VA_FORMAT_STRING_BAD_CONVERSION_FROM_ARRAY'></a>"
#~ msgstr ""

#~ msgid ""
#~ "USELESS_STRING: Array formatted in useless "
#~ "way using format string "
#~ "(VA_FORMAT_STRING_BAD_CONVERSION_FROM_ARRAY)"
#~ msgstr ""

#~ msgid ""
#~ "<p>\n"
#~ "One of the arguments being formatted "
#~ "with a format string is an array."
#~ " This will be formatted\n"
#~ "using a fairly useless format, such "
#~ "as [I@304282, which doesn't actually "
#~ "show the contents\n"
#~ "of the array.\n"
#~ "Consider wrapping the array using "
#~ "<code>Arrays.asList(...)</code> before handling it"
#~ " off to a formatted.\n"
#~ "</p>"
#~ msgstr ""

#~ msgid "<a id='VA_FORMAT_STRING_NO_PREVIOUS_ARGUMENT'></a>"
#~ msgstr ""

#~ msgid ""
#~ "FS: No previous argument for format "
#~ "string (VA_FORMAT_STRING_NO_PREVIOUS_ARGUMENT)"
#~ msgstr ""

#~ msgid ""
#~ "<p>\n"
#~ "The format string specifies a relative"
#~ " index to request that the argument"
#~ " for the previous format specifier\n"
#~ "be reused. However, there is no previous argument.\n"
#~ "For example,\n"
#~ "</p>\n"
#~ "<p><code>formatter.format(\"%&lt;s %s\", \"a\", \"b\")</code>\n"
#~ "</p>\n"
#~ "<p>would throw a MissingFormatArgumentException when executed.\n"
#~ "</p>"
#~ msgstr ""

#~ msgid "<a id='VA_FORMAT_STRING_BAD_ARGUMENT'></a>"
#~ msgstr ""

#~ msgid ""
#~ "FS: Format string placeholder incompatible "
#~ "with passed argument (VA_FORMAT_STRING_BAD_ARGUMENT)"
#~ msgstr ""

#~ msgid ""
#~ "<p>\n"
#~ "The format string placeholder is incompatible with the corresponding\n"
#~ "argument. For example,\n"
#~ "<code>\n"
#~ "  System.out.println(\"%d\\n\", \"hello\");\n"
#~ "</code>\n"
#~ "<p>The %d placeholder requires a numeric"
#~ " argument, but a string value is\n"
#~ ""
#~ "passed instead.\n"
#~ "A runtime exception will occur when\n"
#~ "this statement is executed.\n"
#~ "</p>"
#~ msgstr ""

#~ msgid "<a id='VA_FORMAT_STRING_MISSING_ARGUMENT'></a>"
#~ msgstr ""

#~ msgid ""
#~ "FS: Format string references missing "
#~ "argument (VA_FORMAT_STRING_MISSING_ARGUMENT)"
#~ msgstr ""

#~ msgid ""
#~ "<p>\n"
#~ "Not enough arguments are passed to "
#~ "satisfy a placeholder in the format "
#~ "string.\n"
#~ "A runtime exception will occur when\n"
#~ "this statement is executed.\n"
#~ "</p>"
#~ msgstr ""

#~ msgid "<a id='VA_FORMAT_STRING_ILLEGAL'></a>"
#~ msgstr ""

#~ msgid ""
#~ "<p>\n"
#~ "The format string is syntactically invalid,\n"
#~ "and a runtime exception will occur when\n"
#~ "this statement is executed.\n"
#~ "</p>"
#~ msgstr ""

#~ msgid "<a id='VA_FORMAT_STRING_EXTRA_ARGUMENTS_PASSED'></a>"
#~ msgstr ""

#~ msgid ""
#~ "FS: More arguments are passed than "
#~ "are actually used in the format "
#~ "string (VA_FORMAT_STRING_EXTRA_ARGUMENTS_PASSED)"
#~ msgstr ""

#~ msgid ""
#~ "<p>\n"
#~ "A format-string method with a variable number of arguments is called,\n"
#~ "but more arguments are passed than "
#~ "are actually used by the format "
#~ "string.\n"
#~ "This won't cause a runtime exception,"
#~ " but the code may be silently "
#~ "omitting\n"
#~ "information that was intended to be included in the formatted string.\n"
#~ "</p>"
#~ msgstr ""

#~ msgid "<a id='VA_FORMAT_STRING_EXPECTED_MESSAGE_FORMAT_SUPPLIED'></a>"
#~ msgstr ""

#~ msgid ""
#~ "FS: MessageFormat supplied where printf "
#~ "style format expected "
#~ "(VA_FORMAT_STRING_EXPECTED_MESSAGE_FORMAT_SUPPLIED)"
#~ msgstr ""

#~ msgid ""
#~ "<p>\n"
#~ "A method is called that expects a"
#~ " Java printf format string and a "
#~ "list of arguments.\n"
#~ "However, the format string doesn't "
#~ "contain any format specifiers (e.g., %s)"
#~ " but\n"
#~ "does contain message format elements (e.g., {0}).  It is likely\n"
#~ "that the code is supplying a "
#~ "MessageFormat string when a printf-style"
#~ " format string\n"
#~ "is required. At runtime, all of the arguments will be ignored\n"
#~ "and the format string will be "
#~ "returned exactly as provided without any"
#~ " formatting.\n"
#~ "</p>"
#~ msgstr ""

#~ msgid ""
#~ "<p> This method uses using pointer "
#~ "equality to compare two references that"
#~ " seem to be of\n"
#~ "different types.  The result of this "
#~ "comparison will always be false at "
#~ "runtime.\n"
#~ "</p>"
#~ msgstr ""

#~ msgid ""
#~ "<p> This code compares an int "
#~ "value with a long constant that is"
#~ " outside\n"
#~ "the range of values that can be represented as an int value.\n"
#~ "This comparison is vacuous and possibly to be incorrect.\n"
#~ "</p>"
#~ msgstr ""

#~ msgid ""
#~ "<p> This anonymous class defined a "
#~ "method that is not directly invoked "
#~ "and does not override\n"
#~ "a method in a superclass. Since "
#~ "methods in other classes cannot directly"
#~ " invoke methods\n"
#~ "declared in an anonymous class, it "
#~ "seems that this method is uncallable."
#~ " The method\n"
#~ "might simply be dead code, but it"
#~ " is also possible that the method "
#~ "is intended to\n"
#~ "override a method declared in a "
#~ "superclass, and due to an typo or"
#~ " other error the method does not,"
#~ "\n"
#~ "in fact, override the method it is intended to.\n"
#~ "</p>"
#~ msgstr ""

#~ msgid ""
#~ "IJU: TestCase implements a non-static"
#~ " suite method  (IJU_SUITE_NOT_STATIC)"
#~ msgstr ""

#~ msgid ""
#~ "STI: Unneeded use of currentThread() "
#~ "call, to call interrupted()  "
#~ "(STI_INTERRUPTED_ON_CURRENTTHREAD)"
#~ msgstr ""

#~ msgid ""
#~ "DL: Synchronization on interned String  "
#~ "(DL_SYNCHRONIZATION_ON_SHARED_CONSTANT)"
#~ msgstr ""

#~ msgid ""
#~ "<p> This method performs synchronization "
#~ "an object that is an instance of"
#~ "\n"
#~ "a class from the java.util.concurrent "
#~ "package (or its subclasses). Instances\n"
#~ "of these classes have their own "
#~ "concurrency control mechanisms that are "
#~ "orthogonal to\n"
#~ "the synchronization provided by the Java"
#~ " keyword <code>synchronized</code>. For example,"
#~ "\n"
#~ "synchronizing on an <code>AtomicBoolean</code> "
#~ "will not prevent other threads\n"
#~ "from modifying the  <code>AtomicBoolean</code>.</p>\n"
#~ "<p>Such code may be correct, but "
#~ "should be carefully reviewed and "
#~ "documented,\n"
#~ "and may confuse people who have to maintain the code at a later date.\n"
#~ "</p>"
#~ msgstr ""

#~ msgid ""
#~ "<p> This method performs synchronization an object that implements\n"
#~ "java.util.concurrent.locks.Lock. Such an object is locked/unlocked\n"
#~ "using\n"
#~ "<code>acquire()</code>/<code>release()</code> rather\n"
#~ "than using the <code>synchronized (...)</code> construct.\n"
#~ "</p>"
#~ msgstr ""

#~ msgid ""
#~ "Se: Transient field of class that "
#~ "isn't Serializable.  "
#~ "(SE_TRANSIENT_FIELD_OF_NONSERIALIZABLE_CLASS)"
#~ msgstr ""

#~ msgid ""
#~ "QF: Complicated, subtle or wrong "
#~ "increment in for-loop  "
#~ "(QF_QUESTIONABLE_FOR_LOOP)"
#~ msgstr ""

#~ msgid "<a id='VA_FORMAT_STRING_BAD_CONVERSION_TO_BOOLEAN'></a>"
#~ msgstr ""

#~ msgid ""
#~ "FS: Non-Boolean argument formatted using"
#~ " %b format specifier "
#~ "(VA_FORMAT_STRING_BAD_CONVERSION_TO_BOOLEAN)"
#~ msgstr ""

#~ msgid ""
#~ "<p>\n"
#~ "An argument not of type Boolean is"
#~ " being formatted with a %b format "
#~ "specifier. This won't throw an\n"
#~ "exception; instead, it will print true"
#~ " for any non-null value, and "
#~ "false for null.\n"
#~ "This feature of format strings is "
#~ "strange, and may not be what you"
#~ " intended.\n"
#~ "</p>"
#~ msgstr ""

#~ msgid ""
#~ "BC: Questionable cast to abstract "
#~ "collection  (BC_BAD_CAST_TO_ABSTRACT_COLLECTION)"
#~ msgstr ""

#~ msgid ""
#~ "IM: Check for oddness that won't "
#~ "work for negative numbers  "
#~ "(IM_BAD_CHECK_FOR_ODD)"
#~ msgstr ""

#~ msgid ""
#~ "<p> This method contains an "
#~ "unsynchronized lazy initialization of a "
#~ "static field.\n"
#~ "After the field is set, the object"
#~ " stored into that location is further"
#~ " updated or accessed.\n"
#~ "The setting of the field is "
#~ "visible to other threads as soon "
#~ "as it is set. If the\n"
#~ "further accesses in the method that "
#~ "set the field serve to initialize "
#~ "the object, then\n"
#~ "you have a <em>very serious</em> "
#~ "multithreading bug, unless something else "
#~ "prevents\n"
#~ "any other thread from accessing the "
#~ "stored object until it is fully "
#~ "initialized.\n"
#~ "</p>\n"
#~ "<p>Even if you feel confident that "
#~ "the method is never called by "
#~ "multiple\n"
#~ "threads, it might be better to not"
#~ " set the static field until the "
#~ "value\n"
#~ "you are setting it to is fully populated/initialized."
#~ msgstr ""

#~ msgid ""
#~ "  <p> The field is marked as "
#~ "transient, but the class isn't "
#~ "Serializable, so marking it as transient"
#~ "\n"
#~ "has absolutely no effect.\n"
#~ "This may be leftover marking from "
#~ "a previous version of the code in"
#~ " which the class was transient, or"
#~ "\n"
#~ "it may indicate a misunderstanding of how serialization works.\n"
#~ "</p>"
#~ msgstr ""

#~ msgid ""
#~ "<p>This statement has a return such as <code>return x++;</code>.\n"
#~ "A postfix increment/decrement does not "
#~ "impact the value of the expression,\n"
#~ ""
#~ "so this increment/decrement has no effect.\n"
#~ "Please verify that this statement does the right thing.\n"
#~ "</p>"
#~ msgstr ""

