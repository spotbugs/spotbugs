// LICENSE : MIT
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var visit = require('unist-util-visit');
/**
 * Ignore node manager that manager ignored ranges.
 *
 */

var IgnoreNodeManger = function () {
    function IgnoreNodeManger() {
        _classCallCheck(this, IgnoreNodeManger);

        /**
         * @type {[number,number][]}
         * @private
         */
        this._ignoredRangeList = [];
    }

    /**
     * |.......|
     * ^       ^
     * Ignored Range
     *
     *    |........|
     *    ^
     *  index
     * @param {number} index
     * @returns {boolean}
     */


    _createClass(IgnoreNodeManger, [{
        key: "isIgnoredIndex",
        value: function isIgnoredIndex(index) {
            return this._ignoredRangeList.some(function (range) {
                var _range = _slicedToArray(range, 2);

                var start = _range[0];
                var end = _range[1];

                return start <= index && index <= end;
            });
        }

        /**
         * @param {[number, number]} aRange
         * @returns {boolean}
         */

    }, {
        key: "isIgnoredRange",
        value: function isIgnoredRange(aRange) {
            var index = aRange[0];
            return this.isIgnoredIndex(index);
        }

        /**
         * @param {Object} node
         * @returns {boolean}
         */

    }, {
        key: "isIgnored",
        value: function isIgnored(node) {
            var index = node.index;
            return this.isIgnoredIndex(index);
        }

        /**
         * add node to ignore range list
         * @param {TxtNode} node
         */

    }, {
        key: "ignore",
        value: function ignore(node) {
            this.ignoreRange(node.range);
        }

        /**
         * add range to ignore range list
         * @param {[number, number]} range
         */

    }, {
        key: "ignoreRange",
        value: function ignoreRange(range) {
            this._ignoredRangeList.push(range);
        }

        /**
         * ignore children node of `node`,
         * if the children node has the type that is included in `ignoredNodeTypes`.
         * @param {TxtNode} targetNode
         * @param {string[]} ignoredNodeTypes
         */

    }, {
        key: "ignoreChildrenByTypes",
        value: function ignoreChildrenByTypes(targetNode, ignoredNodeTypes) {
            var _this = this;

            visit(targetNode, function (visitedNode) {
                if (ignoredNodeTypes.indexOf(visitedNode.type) !== -1) {
                    _this.ignore(visitedNode);
                }
            });
        }
    }]);

    return IgnoreNodeManger;
}();

exports.default = IgnoreNodeManger;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9JZ25vcmVOb2RlTWFuZ2VyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTs7Ozs7Ozs7Ozs7O0FBQ0EsSUFBTSxRQUFRLFFBQVEsa0JBQVIsQ0FBZDs7Ozs7O0lBS3FCLGdCO0FBQ2pCLGdDQUFjO0FBQUE7Ozs7OztBQUtWLGFBQUssaUJBQUwsR0FBeUIsRUFBekI7QUFDSDs7Ozs7Ozs7Ozs7Ozs7Ozs7dUNBYWMsSyxFQUFPO0FBQ2xCLG1CQUFPLEtBQUssaUJBQUwsQ0FBdUIsSUFBdkIsQ0FBNEIsaUJBQVM7QUFBQSw0Q0FDbkIsS0FEbUI7O0FBQUEsb0JBQ2pDLEtBRGlDO0FBQUEsb0JBQzFCLEdBRDBCOztBQUV4Qyx1QkFBTyxTQUFTLEtBQVQsSUFBa0IsU0FBUyxHQUFsQztBQUNILGFBSE0sQ0FBUDtBQUlIOzs7Ozs7Ozs7dUNBTWMsTSxFQUFRO0FBQ25CLGdCQUFNLFFBQVEsT0FBTyxDQUFQLENBQWQ7QUFDQSxtQkFBTyxLQUFLLGNBQUwsQ0FBb0IsS0FBcEIsQ0FBUDtBQUNIOzs7Ozs7Ozs7a0NBTVMsSSxFQUFNO0FBQ1osZ0JBQU0sUUFBUSxLQUFLLEtBQW5CO0FBQ0EsbUJBQU8sS0FBSyxjQUFMLENBQW9CLEtBQXBCLENBQVA7QUFDSDs7Ozs7Ozs7OytCQU1NLEksRUFBTTtBQUNULGlCQUFLLFdBQUwsQ0FBaUIsS0FBSyxLQUF0QjtBQUNIOzs7Ozs7Ozs7b0NBTVcsSyxFQUFPO0FBQ2YsaUJBQUssaUJBQUwsQ0FBdUIsSUFBdkIsQ0FBNEIsS0FBNUI7QUFDSDs7Ozs7Ozs7Ozs7OENBUXFCLFUsRUFBWSxnQixFQUFrQjtBQUFBOztBQUNoRCxrQkFBTSxVQUFOLEVBQWtCLHVCQUFlO0FBQzdCLG9CQUFJLGlCQUFpQixPQUFqQixDQUF5QixZQUFZLElBQXJDLE1BQStDLENBQUMsQ0FBcEQsRUFBdUQ7QUFDbkQsMEJBQUssTUFBTCxDQUFZLFdBQVo7QUFDSDtBQUNKLGFBSkQ7QUFLSDs7Ozs7O2tCQXpFZ0IsZ0IiLCJmaWxlIjoiSWdub3JlTm9kZU1hbmdlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIExJQ0VOU0UgOiBNSVRcblwidXNlIHN0cmljdFwiO1xuY29uc3QgdmlzaXQgPSByZXF1aXJlKCd1bmlzdC11dGlsLXZpc2l0Jyk7XG4vKipcbiAqIElnbm9yZSBub2RlIG1hbmFnZXIgdGhhdCBtYW5hZ2VyIGlnbm9yZWQgcmFuZ2VzLlxuICpcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSWdub3JlTm9kZU1hbmdlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBAdHlwZSB7W251bWJlcixudW1iZXJdW119XG4gICAgICAgICAqIEBwcml2YXRlXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLl9pZ25vcmVkUmFuZ2VMaXN0ID0gW11cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiB8Li4uLi4uLnxcbiAgICAgKiBeICAgICAgIF5cbiAgICAgKiBJZ25vcmVkIFJhbmdlXG4gICAgICpcbiAgICAgKiAgICB8Li4uLi4uLi58XG4gICAgICogICAgXlxuICAgICAqICBpbmRleFxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBpbmRleFxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgICAqL1xuICAgIGlzSWdub3JlZEluZGV4KGluZGV4KSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pZ25vcmVkUmFuZ2VMaXN0LnNvbWUocmFuZ2UgPT4ge1xuICAgICAgICAgICAgY29uc3QgW3N0YXJ0LCBlbmRdID0gcmFuZ2U7XG4gICAgICAgICAgICByZXR1cm4gc3RhcnQgPD0gaW5kZXggJiYgaW5kZXggPD0gZW5kO1xuICAgICAgICB9KVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7W251bWJlciwgbnVtYmVyXX0gYVJhbmdlXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAgICovXG4gICAgaXNJZ25vcmVkUmFuZ2UoYVJhbmdlKSB7XG4gICAgICAgIGNvbnN0IGluZGV4ID0gYVJhbmdlWzBdO1xuICAgICAgICByZXR1cm4gdGhpcy5pc0lnbm9yZWRJbmRleChpbmRleCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtPYmplY3R9IG5vZGVcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAgICAgKi9cbiAgICBpc0lnbm9yZWQobm9kZSkge1xuICAgICAgICBjb25zdCBpbmRleCA9IG5vZGUuaW5kZXg7XG4gICAgICAgIHJldHVybiB0aGlzLmlzSWdub3JlZEluZGV4KGluZGV4KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBhZGQgbm9kZSB0byBpZ25vcmUgcmFuZ2UgbGlzdFxuICAgICAqIEBwYXJhbSB7VHh0Tm9kZX0gbm9kZVxuICAgICAqL1xuICAgIGlnbm9yZShub2RlKSB7XG4gICAgICAgIHRoaXMuaWdub3JlUmFuZ2Uobm9kZS5yYW5nZSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogYWRkIHJhbmdlIHRvIGlnbm9yZSByYW5nZSBsaXN0XG4gICAgICogQHBhcmFtIHtbbnVtYmVyLCBudW1iZXJdfSByYW5nZVxuICAgICAqL1xuICAgIGlnbm9yZVJhbmdlKHJhbmdlKSB7XG4gICAgICAgIHRoaXMuX2lnbm9yZWRSYW5nZUxpc3QucHVzaChyYW5nZSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogaWdub3JlIGNoaWxkcmVuIG5vZGUgb2YgYG5vZGVgLFxuICAgICAqIGlmIHRoZSBjaGlsZHJlbiBub2RlIGhhcyB0aGUgdHlwZSB0aGF0IGlzIGluY2x1ZGVkIGluIGBpZ25vcmVkTm9kZVR5cGVzYC5cbiAgICAgKiBAcGFyYW0ge1R4dE5vZGV9IHRhcmdldE5vZGVcbiAgICAgKiBAcGFyYW0ge3N0cmluZ1tdfSBpZ25vcmVkTm9kZVR5cGVzXG4gICAgICovXG4gICAgaWdub3JlQ2hpbGRyZW5CeVR5cGVzKHRhcmdldE5vZGUsIGlnbm9yZWROb2RlVHlwZXMpIHtcbiAgICAgICAgdmlzaXQodGFyZ2V0Tm9kZSwgdmlzaXRlZE5vZGUgPT4ge1xuICAgICAgICAgICAgaWYgKGlnbm9yZWROb2RlVHlwZXMuaW5kZXhPZih2aXNpdGVkTm9kZS50eXBlKSAhPT0gLTEpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmlnbm9yZSh2aXNpdGVkTm9kZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbn0iXX0=