{"version":3,"sources":["../src/TextProcessor.js"],"names":["TextProcessor","config","extensions","concat","ext","preProcess","text","filePath","postProcess","messages"],"mappings":"AAAA;AACA;AACA;;;;;;;;;AACA;;;;IAEaA,a,WAAAA,a;AACT,6BAAyB;AAAA,YAAbC,MAAa,uEAAJ,EAAI;;AAAA;;AACrB,aAAKA,MAAL,GAAcA,MAAd;AACA;AACA,aAAKC,UAAL,GAAkB,KAAKD,MAAL,CAAYC,UAAZ,GAAyB,KAAKD,MAAL,CAAYC,UAArC,GAAkD,EAApE;AACH;;;;8CAEqB;AAClB,mBAAO,CAAC,MAAD,EAAS,OAAT,EAAkBC,MAAlB,CAAyB,KAAKD,UAA9B,CAAP;AACH;;;kCAESE,G,EAAK;AACX,mBAAO;AACHC,0BADG,sBACQC,IADR,EACcC,QADd,EACwB;AACvB,2BAAO,sBAAMD,IAAN,CAAP;AACH,iBAHE;AAIHE,2BAJG,uBAISC,QAJT,EAImBF,QAJnB,EAI6B;AAC5B,2BAAO;AACHE,0CADG;AAEHF,kCAAUA,WAAWA,QAAX,GAAsB;AAF7B,qBAAP;AAIH;AATE,aAAP;AAWH","file":"TextProcessor.js","sourcesContent":["/* eslint-disable no-unused-vars */\n// LICENSE : MIT\n\"use strict\";\nimport { parse } from \"@textlint/text-to-ast\";\n\nexport class TextProcessor {\n    constructor(config = {}) {\n        this.config = config;\n        // support \"extension\" option\n        this.extensions = this.config.extensions ? this.config.extensions : [];\n    }\n\n    availableExtensions() {\n        return [\".txt\", \".text\"].concat(this.extensions);\n    }\n\n    processor(ext) {\n        return {\n            preProcess(text, filePath) {\n                return parse(text);\n            },\n            postProcess(messages, filePath) {\n                return {\n                    messages,\n                    filePath: filePath ? filePath : \"<text>\"\n                };\n            }\n        };\n    }\n}\n"]}