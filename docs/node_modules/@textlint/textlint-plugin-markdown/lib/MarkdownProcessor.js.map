{"version":3,"sources":["../src/MarkdownProcessor.js"],"names":["MarkdownProcessor","config","extensions","concat","ext","preProcess","text","filePath","postProcess","messages"],"mappings":"AAAA;AACA;AACA;;;;;;;;;AACA;;;;IAEaA,iB,WAAAA,iB;AACT,iCAAyB;AAAA,YAAbC,MAAa,uEAAJ,EAAI;;AAAA;;AACrB,aAAKA,MAAL,GAAcA,MAAd;AACA,aAAKC,UAAL,GAAkBD,OAAOC,UAAP,GAAoBD,OAAOC,UAA3B,GAAwC,EAA1D;AACH;;;;8CAEqB;AAClB,mBAAO,CAAC,KAAD,EAAQ,WAAR,EAAqB,QAArB,EAA+B,OAA/B,EAAwC,MAAxC,EAAgD,OAAhD,EAAyD,SAAzD,EAAoE,MAApE,EAA4EC,MAA5E,CAAmF,KAAKD,UAAxF,CAAP;AACH;;;kCAESE,G,EAAK;AACX,mBAAO;AACHC,0BADG,sBACQC,IADR,EACcC,QADd,EACwB;AACvB,2BAAO,0BAAMD,IAAN,CAAP;AACH,iBAHE;AAIHE,2BAJG,uBAISC,QAJT,EAImBF,QAJnB,EAI6B;AAC5B,2BAAO;AACHE,0CADG;AAEHF,kCAAUA,WAAWA,QAAX,GAAsB;AAF7B,qBAAP;AAIH;AATE,aAAP;AAWH","file":"MarkdownProcessor.js","sourcesContent":["/* eslint-disable no-unused-vars */\n// LICENSE : MIT\n\"use strict\";\nimport { parse } from \"@textlint/markdown-to-ast\";\n\nexport class MarkdownProcessor {\n    constructor(config = {}) {\n        this.config = config;\n        this.extensions = config.extensions ? config.extensions : [];\n    }\n\n    availableExtensions() {\n        return [\".md\", \".markdown\", \".mdown\", \".mkdn\", \".mkd\", \".mdwn\", \".mkdown\", \".ron\"].concat(this.extensions);\n    }\n\n    processor(ext) {\n        return {\n            preProcess(text, filePath) {\n                return parse(text);\n            },\n            postProcess(messages, filePath) {\n                return {\n                    messages,\n                    filePath: filePath ? filePath : \"<markdown>\"\n                };\n            }\n        };\n    }\n}\n"]}