"use strict";
var inflectors = require("en-inflectors");
var pre_brill_rules_1 = require("./pre_brill_rules");
var lexicon = require("en-lexicon");
var PreBrill = (function () {
    function PreBrill() {
        this.PreBrill = function () {
            for (var i = 0; i < this.tags.length; i++) {
                if (this.blocked[i])
                    continue;
                var tag = this.tags[i];
                var token = this.tokens[i].toLowerCase();
                var prev1Tag = this.tags[i - 1] || "";
                var prev2Tag = this.tags[i - 2] || "";
                var prev3Tag = this.tags[i - 3] || "";
                var prev4Tag = this.tags[i - 4] || "";
                var next1Tag = this.tags[i + 1] || "";
                if (/^('?)\d+(-|\/|:)?(\d+)?$/.test(token)) {
                    this.tags[i] = "CD";
                    this.blocked[i] = true;
                    this.confidence[i] = 1;
                    continue;
                }
                if ((!prev1Tag) && token === "that") {
                    this.tags[i] = "DT";
                    this.blocked[i] = true;
                    this.confidence[i] = 1;
                    continue;
                }
                if (prev1Tag === "TO" && (inflectors.infinitives[token])) {
                    this.tags[i] = "VB";
                    this.blocked[i] = true;
                    this.confidence[i] = 1;
                    continue;
                }
                if (tag === "NN" && (!lexicon.lexicon[token]) && new inflectors.Inflectors(token).isPlural()) {
                    this.tags[i] = "NNS";
                    continue;
                }
                if (tag === "JJ" && next1Tag === "DT" && ~(lexicon.lexicon[token] || "").indexOf("VB")) {
                    this.tags[i] = lexicon.lexicon[token].split("|").find(function (x) { return x.indexOf("V") === 0; });
                    continue;
                }
                if (i > 5 && tag === "VBD" && ~["PRP", "WP", "IN", "JJR"].indexOf(prev1Tag) && ~(lexicon.lexicon[token] || "").indexOf("VBN")) {
                    if ((prev1Tag === "PRP" && prev2Tag === "WP" && prev3Tag === "IN" && prev4Tag === "JJR") ||
                        (prev1Tag === "WP" && prev2Tag === "IN" && prev3Tag === "JJR") ||
                        (prev1Tag === "IN" && prev2Tag === "JJR") ||
                        (prev1Tag === "JJR")) {
                        this.tags[i] === "VBN";
                        continue;
                    }
                }
                if (token.length > 3 && (!lexicon.lexicon[token]) && prev1Tag && (!~token.indexOf("-")) && (!/^[A-Z][a-z]+/g.test(this.tokens[i])) && /[^e]ed$/.test(token)) {
                    this.tags[i] === "VBN";
                    continue;
                }
                if (token.length > 4 &&
                    (!~["NNP", "NNPS", "VBG"].indexOf(tag)) &&
                    (!~["VBG", "DT", "JJ", "NN"].indexOf(prev1Tag)) &&
                    ((!prev1Tag) || !/^[A-Z][a-z]+/g.test(this.tokens[i])) &&
                    (!~pre_brill_rules_1.default.indexOf(token)) && (!lexicon.lexicon[token]) &&
                    ~(lexicon.lexicon[token] || "").indexOf("VBG")) {
                    this.tags[i] === "VBG";
                    continue;
                }
                if (token.length > 4 && token.endsWith('in') && tag === 'NN' &&
                    ((!prev1Tag) || !/^[A-Z][a-z]+/g.test(token)) &&
                    (prev1Tag !== 'NN' && prev1Tag !== 'JJ' && prev1Tag !== 'DT' && prev1Tag !== 'VBG') &&
                    (~(lexicon.lexicon[token + "g"] || "").indexOf("VBG"))) {
                    this.tags[i] === "VBG";
                    continue;
                }
            }
        };
    }
    return PreBrill;
}());
exports.PreBrill = PreBrill;
