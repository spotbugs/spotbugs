// MIT Â© 2017 azu
"use strict";

var _textlintReportHelperForGooglePreset = require("@textlint-rule/textlint-report-helper-for-google-preset");

var _englishArticleClassifier = require("english-article-classifier");

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var DocumentURL = "https://developers.google.com/style/articles";
var isCapital = function isCapital(text) {
    return (/^[A-Z]/.test(text)
    );
};
var report = function report(context) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var forceA = Array.isArray(options.a) ? options.a : [];
    var forceAn = Array.isArray(options.an) ? options.an : [];
    var classifyOptions = {
        forceA: forceA,
        forceAn: forceAn
    };
    var dictionaries = [{
        pattern: /\b(a) ([\w.-]+)\b/i,
        test: function test(_ref) {
            var captures = _ref.captures;

            var result = (0, _englishArticleClassifier.classifyArticle)(captures[1], classifyOptions);
            return result.type === "an";
        },
        replace: function replace(_ref2) {
            var captures = _ref2.captures;

            var an = isCapital(captures[0]) ? "An" : "an";
            return an + " " + captures[1];
        },
        message: function message(_ref3) {
            var captures = _ref3.captures;

            var result = (0, _englishArticleClassifier.classifyArticle)(captures[1], classifyOptions);
            return "Should be begin with \"an\"" + "\nReason: " + result.reason + "\n" + DocumentURL;
        }
    }, {
        pattern: /\b(an) ([\w.-]+)\b/i,
        test: function test(_ref4) {
            var captures = _ref4.captures;

            var result = (0, _englishArticleClassifier.classifyArticle)(captures[1], classifyOptions);
            return result.type === "a";
        },
        replace: function replace(_ref5) {
            var captures = _ref5.captures;

            var a = isCapital(captures[0]) ? "A" : "a";
            return a + " " + captures[1];
        },
        message: function message(_ref6) {
            var captures = _ref6.captures;

            var result = (0, _englishArticleClassifier.classifyArticle)(captures[1], classifyOptions);
            return "Should be begin with \"a\"" + "\nReason: " + result.reason + "\n" + DocumentURL;
        }
    }];
    var Syntax = context.Syntax,
        RuleError = context.RuleError,
        getSource = context.getSource,
        fixer = context.fixer,
        report = context.report;

    return _defineProperty({}, Syntax.Str, function (node) {
        if ((0, _textlintReportHelperForGooglePreset.shouldIgnoreNodeOfStrNode)(node, context)) {
            return;
        }
        return (0, _textlintReportHelperForGooglePreset.strReporter)({
            node: node,
            dictionaries: dictionaries,
            report: report,
            getSource: getSource,
            RuleError: RuleError,
            fixer: fixer
        });
    });
};
module.exports = {
    linter: report,
    fixer: report
};
//# sourceMappingURL=textlint-rule-google-articles.js.map