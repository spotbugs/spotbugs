// MIT Â© 2017 azu
"use strict";

var _textlintReportHelperForGooglePreset = require("@textlint-rule/textlint-report-helper-for-google-preset");

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var DocumentURL = "https://developers.google.com/style/hyphens";
var report = function report(context) {
    var dictionaries = [
    // Adverbs ending in "ly"
    {
        pattern: /(\w+ly)-(\w+)/g,
        test: function test(_ref) {
            var captures = _ref.captures;

            var pos = (0, _textlintReportHelperForGooglePreset.getPosFromSingleWord)(captures[0]);
            return pos === _textlintReportHelperForGooglePreset.PosType.Adverb;
        },
        replace: function replace(_ref2) {
            var captures = _ref2.captures;

            return captures[0] + " " + captures[1];
        },
        message: function message() {
            return "Don't hyphenate adverbs ending in \"ly\" except where needed for clarity.";
        }
    },
    // TODO: When to hyphenate
    // TODO: Compound words
    // Range of numbers
    {
        pattern: /(from|between) (\d+-\d+)/g,
        replace: function replace(_ref3) {
            var captures = _ref3.captures;

            return "" + captures[1];
        },
        message: function message() {
            return "Use a hyphen to indicate a range of numbers. Don't add words such as \"from\" or \"between\".";
        }
        // Spaces around hyphens => textlint-rule-google-dashes
    }];

    var Syntax = context.Syntax,
        RuleError = context.RuleError,
        getSource = context.getSource,
        fixer = context.fixer,
        report = context.report;

    return _defineProperty({}, Syntax.Paragraph, function (node) {
        return (0, _textlintReportHelperForGooglePreset.paragraphReporter)({
            Syntax: Syntax,
            node: node,
            dictionaries: dictionaries,
            report: report,
            getSource: getSource,
            RuleError: RuleError,
            fixer: fixer
        });
    });
};
module.exports = {
    linter: report,
    fixer: report
};
//# sourceMappingURL=textlint-rule-google-hyphens.js.map