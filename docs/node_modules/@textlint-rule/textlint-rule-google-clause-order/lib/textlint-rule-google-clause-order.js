// MIT Â© 2017 azu
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.defaultMessage = undefined;

var _textlintReportHelperForGooglePreset = require("@textlint-rule/textlint-report-helper-for-google-preset");

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// https://developers.google.com/style/clause-order
var defaultMessage = exports.defaultMessage = "Put conditional clauses before instructions, not after.\n" + "URL: https://developers.google.com/style/clause-order";
var report = function report(context) {
    var dictionaries = [{
        pattern: /See (.*) for more (information|details|detail)./,
        replace: function replace(_ref) {
            var captures = _ref.captures;

            return "For more " + captures[1] + ", see " + captures[0] + ".";
        },
        message: function message() {
            return defaultMessage;
        }
    }, {
        pattern: /Click ([\w-]+) if you want to (.+)./,
        test: function test(_ref2) {
            var all = _ref2.all,
                captures = _ref2.captures;

            return (/^VB/.test((0, _textlintReportHelperForGooglePreset.getPos)(all, captures[0]))
            );
        },
        replace: function replace(_ref3) {
            var captures = _ref3.captures;

            return "To " + captures[1] + ", click " + captures[0] + ".";
        },
        message: function message() {
            return defaultMessage;
        }
    }];

    var Syntax = context.Syntax,
        RuleError = context.RuleError,
        getSource = context.getSource,
        fixer = context.fixer,
        report = context.report;

    return _defineProperty({}, Syntax.Paragraph, function (node) {
        (0, _textlintReportHelperForGooglePreset.paragraphReporter)({
            Syntax: Syntax,
            node: node,
            dictionaries: dictionaries,
            report: report,
            getSource: getSource,
            RuleError: RuleError,
            fixer: fixer
        });
    });
};
module.exports = {
    linter: report,
    fixer: report
};
//# sourceMappingURL=textlint-rule-google-clause-order.js.map