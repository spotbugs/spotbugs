{"version":3,"sources":["../src/textlint-rule-google-clause-order.js"],"names":["defaultMessage","report","dictionaries","pattern","replace","captures","message","test","all","Syntax","context","RuleError","getSource","fixer","Paragraph","node","module","exports","linter"],"mappings":"AAAA;AACA;;;;;;;AACA;;;;AAEA;AACO,IAAMA,0CACT,8DACA,uDAFG;AAGP,IAAMC,SAAS,yBAAW;AACtB,QAAMC,eAAe,CACjB;AACIC,iBAAS,iDADb;AAEIC,iBAAS,uBAAkB;AAAA,gBAAfC,QAAe,QAAfA,QAAe;;AACvB,iCAAmBA,SAAS,CAAT,CAAnB,cAAuCA,SAAS,CAAT,CAAvC;AACH,SAJL;AAKIC,iBAAS;AAAA,mBAAMN,cAAN;AAAA;AALb,KADiB,EAQjB;AACIG,iBAAS,qCADb;AAEII,cAAM,qBAAuB;AAAA,gBAApBC,GAAoB,SAApBA,GAAoB;AAAA,gBAAfH,QAAe,SAAfA,QAAe;;AACzB,mBAAO,OAAME,IAAN,CAAW,iDAAOC,GAAP,EAAYH,SAAS,CAAT,CAAZ,CAAX;AAAP;AACH,SAJL;AAKID,iBAAS,wBAAkB;AAAA,gBAAfC,QAAe,SAAfA,QAAe;;AACvB,2BAAaA,SAAS,CAAT,CAAb,gBAAmCA,SAAS,CAAT,CAAnC;AACH,SAPL;AAQIC,iBAAS;AAAA,mBAAMN,cAAN;AAAA;AARb,KARiB,CAArB;;AADsB,QAqBdS,MArBc,GAqBkCC,OArBlC,CAqBdD,MArBc;AAAA,QAqBNE,SArBM,GAqBkCD,OArBlC,CAqBNC,SArBM;AAAA,QAqBKC,SArBL,GAqBkCF,OArBlC,CAqBKE,SArBL;AAAA,QAqBgBC,KArBhB,GAqBkCH,OArBlC,CAqBgBG,KArBhB;AAAA,QAqBuBZ,MArBvB,GAqBkCS,OArBlC,CAqBuBT,MArBvB;;AAsBtB,+BACKQ,OAAOK,SADZ,YACuBC,IADvB,EAC6B;AACrB,oEAAkB;AACdN,0BADc;AAEdM,sBAFc;AAGdb,sCAHc;AAIdD,0BAJc;AAKdW,gCALc;AAMdD,gCANc;AAOdE;AAPc,SAAlB;AASH,KAXL;AAaH,CAnCD;AAoCAG,OAAOC,OAAP,GAAiB;AACbC,YAAQjB,MADK;AAEbY,WAAOZ;AAFM,CAAjB","file":"textlint-rule-google-clause-order.js","sourcesContent":["// MIT Â© 2017 azu\n\"use strict\";\nimport { paragraphReporter, getPos } from \"@textlint-rule/textlint-report-helper-for-google-preset\";\n\n// https://developers.google.com/style/clause-order\nexport const defaultMessage =\n    \"Put conditional clauses before instructions, not after.\\n\" +\n    \"URL: https://developers.google.com/style/clause-order\";\nconst report = context => {\n    const dictionaries = [\n        {\n            pattern: /See (.*) for more (information|details|detail)./,\n            replace: ({ captures }) => {\n                return `For more ${captures[1]}, see ${captures[0]}.`;\n            },\n            message: () => defaultMessage\n        },\n        {\n            pattern: /Click ([\\w-]+) if you want to (.+)./,\n            test: ({ all, captures }) => {\n                return /^VB/.test(getPos(all, captures[0]));\n            },\n            replace: ({ captures }) => {\n                return `To ${captures[1]}, click ${captures[0]}.`;\n            },\n            message: () => defaultMessage\n        }\n    ];\n\n    const { Syntax, RuleError, getSource, fixer, report } = context;\n    return {\n        [Syntax.Paragraph](node) {\n            paragraphReporter({\n                Syntax,\n                node,\n                dictionaries,\n                report,\n                getSource,\n                RuleError,\n                fixer\n            });\n        }\n    };\n};\nmodule.exports = {\n    linter: report,\n    fixer: report\n};\n"]}