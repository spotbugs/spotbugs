// MIT Â© 2017 azu
"use strict";

var _textlintReportHelperForGooglePreset = require("@textlint-rule/textlint-report-helper-for-google-preset");

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var DocumentURL = "https://developers.google.com/style/hyphens";
var report = function report(context) {
    var dictionaries = [
    // word(s)
    // if "words" is plural, report as error
    {
        pattern: /([\w-]+)\((\w+)\)/g,
        test: function test(_ref) {
            var captures = _ref.captures;

            var pluralWord = "" + captures[0] + captures[1];
            var pos = (0, _textlintReportHelperForGooglePreset.getPosFromSingleWord)(pluralWord);
            return pos === _textlintReportHelperForGooglePreset.PosType.PluralNoun || pos === _textlintReportHelperForGooglePreset.PosType.PluralProperNoun;
        },
        message: function message() {
            return " Don't put optional plurals in parentheses.\n" + DocumentURL + "\n";
        }
    }];

    var Syntax = context.Syntax,
        RuleError = context.RuleError,
        getSource = context.getSource,
        fixer = context.fixer,
        report = context.report;

    return _defineProperty({}, Syntax.Paragraph, function (node) {
        return (0, _textlintReportHelperForGooglePreset.paragraphReporter)({
            node: node,
            Syntax: Syntax,
            dictionaries: dictionaries,
            report: report,
            getSource: getSource,
            RuleError: RuleError,
            fixer: fixer
        });
    });
};
module.exports = {
    linter: report,
    fixer: report
};
//# sourceMappingURL=textlint-rule-google-plurals-parentheses.js.map