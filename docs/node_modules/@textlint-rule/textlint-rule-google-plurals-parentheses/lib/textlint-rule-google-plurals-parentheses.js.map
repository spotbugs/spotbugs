{"version":3,"sources":["../src/textlint-rule-google-plurals-parentheses.js"],"names":["DocumentURL","report","dictionaries","pattern","test","captures","pluralWord","pos","PosType","PluralNoun","PluralProperNoun","message","Syntax","context","RuleError","getSource","fixer","Paragraph","node","module","exports","linter"],"mappings":"AAAA;AACA;;AACA;;;;AAMA,IAAMA,cAAc,6CAApB;AACA,IAAMC,SAAS,yBAAW;AACtB,QAAMC,eAAe;AACjB;AACA;AACA;AACIC,iBAAS,oBADb;AAEIC,cAAM,oBAAkB;AAAA,gBAAfC,QAAe,QAAfA,QAAe;;AACpB,gBAAMC,kBAAgBD,SAAS,CAAT,CAAhB,GAA8BA,SAAS,CAAT,CAApC;AACA,gBAAME,MAAM,+DAAqBD,UAArB,CAAZ;AACA,mBAAOC,QAAQC,6CAAQC,UAAhB,IAA8BF,QAAQC,6CAAQE,gBAArD;AACH,SANL;AAOIC,iBAAS;AAAA,qEACnBX,WADmB;AAAA;AAPb,KAHiB,CAArB;;AADsB,QAiBdY,MAjBc,GAiBkCC,OAjBlC,CAiBdD,MAjBc;AAAA,QAiBNE,SAjBM,GAiBkCD,OAjBlC,CAiBNC,SAjBM;AAAA,QAiBKC,SAjBL,GAiBkCF,OAjBlC,CAiBKE,SAjBL;AAAA,QAiBgBC,KAjBhB,GAiBkCH,OAjBlC,CAiBgBG,KAjBhB;AAAA,QAiBuBf,MAjBvB,GAiBkCY,OAjBlC,CAiBuBZ,MAjBvB;;AAkBtB,+BACKW,OAAOK,SADZ,YACuBC,IADvB,EAC6B;AACrB,eAAO,4DAAkB;AACrBA,sBADqB;AAErBN,0BAFqB;AAGrBV,sCAHqB;AAIrBD,0BAJqB;AAKrBc,gCALqB;AAMrBD,gCANqB;AAOrBE;AAPqB,SAAlB,CAAP;AASH,KAXL;AAaH,CA/BD;AAgCAG,OAAOC,OAAP,GAAiB;AACbC,YAAQpB,MADK;AAEbe,WAAOf;AAFM,CAAjB","file":"textlint-rule-google-plurals-parentheses.js","sourcesContent":["// MIT Â© 2017 azu\n\"use strict\";\nimport {\n    paragraphReporter,\n    getPosFromSingleWord,\n    PosType\n} from \"@textlint-rule/textlint-report-helper-for-google-preset\";\n\nconst DocumentURL = \"https://developers.google.com/style/hyphens\";\nconst report = context => {\n    const dictionaries = [\n        // word(s)\n        // if \"words\" is plural, report as error\n        {\n            pattern: /([\\w-]+)\\((\\w+)\\)/g,\n            test: ({ captures }) => {\n                const pluralWord = `${captures[0]}${captures[1]}`;\n                const pos = getPosFromSingleWord(pluralWord);\n                return pos === PosType.PluralNoun || pos === PosType.PluralProperNoun;\n            },\n            message: () => ` Don't put optional plurals in parentheses.\n${DocumentURL}\n`\n        }\n    ];\n\n    const { Syntax, RuleError, getSource, fixer, report } = context;\n    return {\n        [Syntax.Paragraph](node) {\n            return paragraphReporter({\n                node,\n                Syntax,\n                dictionaries,\n                report,\n                getSource,\n                RuleError,\n                fixer\n            });\n        }\n    };\n};\nmodule.exports = {\n    linter: report,\n    fixer: report\n};\n"]}