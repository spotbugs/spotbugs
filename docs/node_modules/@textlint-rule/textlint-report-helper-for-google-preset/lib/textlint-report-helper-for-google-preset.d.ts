import { TestMatchReplaceReturnDict } from "match-test-replace";
import { ASTNodeTypes } from "@textlint/ast-node-types";
export { getPos, getPosFromSingleWord, PosType, isSameGroupPosType } from "./en-pos-util";
export declare const shouldIgnoreNodeOfStrNode: (node: any, context: any) => any;
export interface StrReporterArgs {
    node: any;
    dictionaries: TestMatchReplaceReturnDict[];
    report: (node: any, message: any) => void;
    RuleError: any;
    fixer: any;
    getSource: (node: any, beforeCount?: number, afterCount?: number) => string;
}
export declare const strReporter: ({ node, dictionaries, report, RuleError, fixer, getSource }: StrReporterArgs) => void;
export interface ParagraphReporterArgs {
    Syntax: typeof ASTNodeTypes;
    node: any;
    dictionaries: TestMatchReplaceReturnDict[];
    report: (node: any, message: any) => void;
    RuleError: any;
    fixer: any;
    getSource: (node: any, beforeCount?: number, afterCount?: number) => string;
}
export declare const paragraphReporter: ({ Syntax, node, dictionaries, getSource, report, RuleError, fixer }: ParagraphReporterArgs) => void;
