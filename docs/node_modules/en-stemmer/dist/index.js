"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const regExps = require("./regexp_rules");
const suffixList = require("./suffix_list");
exports.stemmer = function (w) {
    if (w.length < 3)
        return w;
    if (w.charAt(0) === "y")
        w = w.charAt(0).toUpperCase() + w.substr(1);
    if (regExps.nonstd_S.test(w))
        w = w.replace(regExps.nonstd_S, '$1$2');
    else if (regExps.std_S.test(w))
        w = w.replace(regExps.std_S, '$1$2');
    if (regExps.EED.test(w)) {
        var stem = (regExps.EED.exec(w) || [])[1];
        if (regExps.M_gr_0.test(w))
            w = w.substr(0, w.length - 1);
    }
    else if (regExps.ED_or_ING.test(w)) {
        var stem = (regExps.ED_or_ING.exec(w) || [])[1];
        if (regExps.v_in_stem.test(stem)) {
            w = stem;
            if (/(at|bl|iz)$/.test(w))
                w = w + 'e';
            else if (new RegExp('([^aeiouylsz])\\1$').test(w))
                w = w.substr(0, w.length - 1);
            else if (new RegExp('^' + regExps.C + regExps.v + '[^aeiouwxy]$').test(w))
                w = w + 'e';
        }
    }
    if (regExps.Y.test(w)) {
        var stem = (regExps.Y.exec(w) || [])[1];
        if (regExps.v_in_stem.test(stem))
            w = stem + 'i';
    }
    if (regExps.nonstd_gp1.test(w)) {
        var result = regExps.nonstd_gp1.exec(w) || [];
        var stem = result[1];
        var suffix = result[2];
        if (regExps.M_gr_0.test(stem))
            w = stem + suffixList.suffixList.group1[suffix];
    }
    if (regExps.nonstd_gp2.test(w)) {
        var result = regExps.nonstd_gp2.exec(w) || [];
        var stem = result[1];
        var suffix = result[2];
        if (regExps.M_gr_0.test(stem))
            w = stem + suffixList.suffixList.group2[suffix];
    }
    if (regExps.nonstd_gp3.test(w)) {
        var result = regExps.nonstd_gp3.exec(w) || [];
        var stem = result[1];
        if (regExps.M_gr_1.test(stem))
            w = stem;
    }
    else if (regExps.S_or_T_with_ION.test(w)) {
        var result = regExps.S_or_T_with_ION.exec(w) || [];
        var stem = result[1] + result[2];
        if (regExps.M_gr_1.test(stem))
            w = stem;
    }
    if (regExps.E.test(w)) {
        var result = regExps.E.exec(w) || [];
        var stem = result[1];
        if (regExps.M_gr_1.test(stem) || (regExps.M_eq_1.test(stem) && !(regExps.has_C_and_v_but_doesnt_end_with_AEIOUWXY.test(stem))))
            w = stem;
    }
    if (regExps.LL.test(w) && regExps.M_gr_1.test(w))
        w = w.substr(0, w.length - 1);
    if (w.charAt(0) === "Y")
        w = w.charAt(0).toLowerCase() + w.substr(1);
    return w;
};
exports.default = exports.stemmer;
