apply plugin: 'maven-publish'
apply plugin: 'signing'

ext.isReleaseVersion = !version.endsWith("SNAPSHOT") && /* for Eclipse plugin */ !version.contains("-SNAPSHOT.")

publishing {
  publications {
    maven(MavenPublication) {
      from components.java
      pom {
        url = 'https://spotbugs.github.io/'
        scm {
          connection = 'scm:git:git@github.com:spotbugs/spotbugs.git'
          developerConnection = 'scm:git:git@github.com:spotbugs/spotbugs.git'
          url = 'https://github.com/spotbugs/spotbugs/'
        }
        licenses {
          license {
            name = 'GNU LESSER GENERAL PUBLIC LICENSE, Version 2.1'
            url = 'https://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html'
          }
        }
        developers {
          developer {
            id = 'jsotuyod'
            name = 'Juan Mart√≠n Sotuyo Dodero'
            url = 'https://github.com/jsotuyod'
            timezone = '-3'
          }
          developer {
            id = 'mebigfatguy'
            name = 'Dave Brosius'
            email = 'dbrosius@mebigfatguy.com'
            url = 'http://www.jroller.com/dbrosius/'
            timezone = '-5'
          }
          developer {
            id = 'henrik242'
            url = 'https://github.com/henrik242'
          }
          developer {
            id = 'KengoTODA'
            name = 'Kengo TODA'
            email = 'skypencil@gmail.com'
            url = 'https://github.com/KengoTODA/'
            timezone = '+8'
          }
          developer {
            id = 'iloveeclipse'
            name = 'Andrey Loskutov'
            email = 'loskutov@gmx.de'
            url = 'https://plus.google.com/+AndreyLoskutov'
            timezone = '+2'
          }
          developer {
            id = 'ThrawnCA'
            url = 'https://github.com/ThrawnCA'
          }
          developer {
            id = 'sewe'
            name = 'Andreas Sewe'
            email = 'andreas.sewe@codetrails.com'
            url = 'https://github.com/sewe'
            timezone = '+1'
          }
        }
      }
    }
  }
}

def signingKey = System.getenv("SIGNING_KEY")
def signingPassword = System.getenv("SIGNING_PASSWORD")

signing {
  if (signingKey != null &&
          signingPassword != null &&
          !signingKey.isEmpty() &&
          !signingPassword.isEmpty()) {
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.maven
  } else {
    logger.warn('The signing key and password are null. This can be ignored if this is a pull request.')
  }
}

tasks.withType(Sign) {
  onlyIf { isReleaseVersion }
}
