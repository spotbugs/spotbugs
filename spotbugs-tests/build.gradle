apply from: "$rootDir/gradle/checkstyle.gradle"
apply from: "$rootDir/gradle/maven.gradle"

sourceSets {
  main {
    java {
      srcDirs = ['src/test/java']
    }
  }
}

dependencies {
  compile 'junit:junit:4.12'
  compile project(':spotbugs')
  compile 'org.ow2.asm:asm-debug-all:6.0_ALPHA'
  compile 'net.jcip:jcip-annotations:1.0'
  compile 'dom4j:dom4j:1.6.1'
  compile 'commons-lang:commons-lang:2.6'
  compile 'jaxen:jaxen:1.1.6'
  compile 'jdepend:jdepend:2.9.1'
  compile 'com.google.code.findbugs:jFormatString:3.0.0'

  // These annotations are repackaged to spotbugs.jar, to keep backward compatibility for Ant task.
  // If they're not repackaged, Ant task will report 'java.lang.ClassNotFoundException: edu.umd.cs.findbugs.annotations.CleanupObligation'
  compile project(':spotbugs-annotations')

  compileOnly 'com.apple:AppleJavaExtensions:1.4'
  compile 'junit:junit:4.12'
  compile 'org.hamcrest:hamcrest-all:1.3'
  compile project(':test-harness')
  compile 'org.apache.ant:ant:1.9.4'
}

task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

test {
// I have no idea about gradle test execution and how to properly give it the
// required dependencies
// This seem to work with most tests except the new one based on AnalysisRunner
// TODO fix AnalysisRunner or the test classpath
    classpath = project.sourceSets.main.runtimeClasspath \
        + project(':spotbugs').sourceSets.main.runtimeClasspath \
        + project(':test-harness').sourceSets.main.runtimeClasspath
}

artifacts {
  archives jar, sourcesJar
}

uploadArchives {
  repositories {
    mavenDeployer {
      pom.project {
        name 'Tests for SpotBugs Plugin'
        description 'JUnit tests for SpotBugs library'
      }
    }
  }
}
